{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/spinner/LoadingSpinner.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport store from \"../../redux/Store\";\nimport \"./spinner.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoadingSpinner = () => {\n  _s();\n  useEffect(() => {\n    // Subscribe to state changes in the Redux store\n    const unsubscribe = store.subscribe(() => {\n      console.log(unsubscribe);\n      // Get the updated state from the Redux store\n      const state = store.getState();\n      // Do something here with the updated state\n    });\n\n    // Unsubscribe from state changes when the component is unmounted\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  //   const isLoading = useSelector((state) => state.);\n  const isLoading = useSelector(state => state.loader.isLoading);\n  console.log(isLoading);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spinner-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(LoadingSpinner, \"jVktj6trNloP4NzQrqS9cW4mIYo=\", false, function () {\n  return [useSelector];\n});\n_c = LoadingSpinner;\nvar _c;\n$RefreshReg$(_c, \"LoadingSpinner\");","map":{"version":3,"names":["React","useEffect","useSelector","store","LoadingSpinner","unsubscribe","subscribe","console","log","state","getState","isLoading","loader"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/spinner/LoadingSpinner.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport store from \"../../redux/Store\";\n\nimport \"./spinner.css\";\n\nexport const LoadingSpinner = () => {\n  useEffect(() => {\n    // Subscribe to state changes in the Redux store\n    const unsubscribe = store.subscribe(() => {\n      console.log(unsubscribe);\n      // Get the updated state from the Redux store\n      const state = store.getState();\n      // Do something here with the updated state\n    });\n\n    // Unsubscribe from state changes when the component is unmounted\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  //   const isLoading = useSelector((state) => state.);\n  const isLoading = useSelector((state: any) => state.loader.isLoading);\n  console.log(isLoading);\n\n  return (\n    <div className=\"spinner-container\">\n      <div className=\"spinner-container\">\n        <div className=\"loading-spinner\"></div>\n      </div>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,KAAK,MAAM,mBAAmB;AAErC,OAAO,eAAe;AAAC;AAEvB,OAAO,MAAMC,cAAc,GAAG,MAAM;EAAA;EAClCH,SAAS,CAAC,MAAM;IACd;IACA,MAAMI,WAAW,GAAGF,KAAK,CAACG,SAAS,CAAC,MAAM;MACxCC,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;MACxB;MACA,MAAMI,KAAK,GAAGN,KAAK,CAACO,QAAQ,EAAE;MAC9B;IACF,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXL,WAAW,EAAE;IACf,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,SAAS,GAAGT,WAAW,CAAEO,KAAU,IAAKA,KAAK,CAACG,MAAM,CAACD,SAAS,CAAC;EACrEJ,OAAO,CAACC,GAAG,CAACG,SAAS,CAAC;EAEtB,oBACE;IAAK,SAAS,EAAC,mBAAmB;IAAA,uBAChC;MAAK,SAAS,EAAC,mBAAmB;MAAA,uBAChC;QAAK,SAAS,EAAC;MAAiB;QAAA;QAAA;QAAA;MAAA;IAAO;MAAA;MAAA;MAAA;IAAA;EACnC;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GA3BWP,cAAc;EAAA,QAiBPF,WAAW;AAAA;AAAA,KAjBlBE,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}