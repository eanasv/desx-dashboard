{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/dataFileUpload/FileUpload.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DropDown from \"../../components/dropDown/DropDown\";\nimport { SubHeader } from \"../../components/subHeader/SubHeader\";\nimport { postHttp } from \"../../service/APIRequest\";\nimport \"./FileUpload.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  // const [file, setFile] = useState(null);\n  // const [selectedFile, setSelectedFile] = useState(null);\n  // const [selectedFileType, setSelectedFileType] = useState(\"\");\n\n  // const handleItemSelect = (event) => {\n  //   console.log(event);\n  //   setSelectedFile(event.target.files[0]);\n  //   setSelectedFileType(event.target.value);\n  // };\n\n  // const handleFileChange = (e) => {\n  //   setFile(e.target.files[0]);\n  // };\n\n  // const handleResponseText = () => {\n  //   setresponseText(null);\n  // };\n\n  var typeOfDropdown = [{\n    id: 1,\n    label: \"Employee\",\n    value: \"Employee\"\n  }, {\n    id: 2,\n    label: \"Training\",\n    value: \"Training\"\n  }, {\n    id: 3,\n    label: \"Entity\",\n    value: \"Entity\"\n  }];\n  const [responseText, setresponseText] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleOptionChange = event => {\n    console.log(event);\n    setSelectedOption(event);\n  };\n  const resetResponseText = () => {\n    setTimeout(() => {\n      setresponseText(\"\");\n    }, 10000);\n  };\n  const handleSubmit = async () => {\n    if (!selectedOption) {\n      setresponseText(\"Please select an option from the dropdown\");\n      return;\n    } else if (!selectedFile) {\n      setresponseText(\"Please select one file to upload\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    formData.append(\"option\", selectedOption.value);\n    setresponseText(\"\");\n    postHttp(\"upload\", formData).then(response => {\n      // console.log(response);\n      setresponseText(response);\n      setSelectedFile(null);\n      setSelectedOption(null);\n      clearFileInput();\n      // handle success\n    }).catch(error => {\n      console.log(error);\n      setresponseText(error);\n      clearFileInput();\n      // handle error\n    });\n  };\n\n  const clearFileInput = () => {\n    resetResponseText();\n    const inputElement = document.getElementById(\"file\");\n    if (inputElement) {\n      inputElement.value = \"\"; // Clear the input value\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(SubHeader, {\n        pageHeadding: \"File Upload\",\n        showBreadcrumbs: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n        mainList: typeOfDropdown,\n        name: \"\",\n        onChangeDropDownItem: handleOptionChange,\n        isMulti: false,\n        classname: \"flex\",\n        placeholder: \"Select an option\",\n        value: selectedOption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-browser\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          children: \"Select a file:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file\",\n          onChange: handleFileChange,\n          accept: \".xls, .xlsx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"filter-button std unwanted text\",\n        onClick: handleSubmit,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"response-text\",\n        children: responseText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"xbekFizCSYlfB0ZNBHAR6p/66fI=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","DropDown","SubHeader","postHttp","FileUpload","typeOfDropdown","id","label","value","responseText","setresponseText","selectedFile","setSelectedFile","selectedOption","setSelectedOption","handleFileChange","event","target","files","handleOptionChange","console","log","resetResponseText","setTimeout","handleSubmit","formData","FormData","append","then","response","clearFileInput","catch","error","inputElement","document","getElementById"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/dataFileUpload/FileUpload.tsx"],"sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { DownloadExcel } from \"../../components/downloadExcel/DownloadExcel\";\nimport DropDown from \"../../components/dropDown/DropDown\";\nimport { SubHeader } from \"../../components/subHeader/SubHeader\";\nimport { postHttp } from \"../../service/APIRequest\";\nimport \"./FileUpload.css\";\n\nconst FileUpload = () => {\n  // const [file, setFile] = useState(null);\n  // const [selectedFile, setSelectedFile] = useState(null);\n  // const [selectedFileType, setSelectedFileType] = useState(\"\");\n\n  // const handleItemSelect = (event) => {\n  //   console.log(event);\n  //   setSelectedFile(event.target.files[0]);\n  //   setSelectedFileType(event.target.value);\n  // };\n\n  // const handleFileChange = (e) => {\n  //   setFile(e.target.files[0]);\n  // };\n\n  // const handleResponseText = () => {\n  //   setresponseText(null);\n  // };\n\n  var typeOfDropdown = [\n    { id: 1, label: \"Employee\", value: \"Employee\" },\n    { id: 2, label: \"Training\", value: \"Training\" },\n    { id: 3, label: \"Entity\", value: \"Entity\" },\n  ];\n  const [responseText, setresponseText] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleOptionChange = (event) => {\n    console.log(event);\n    setSelectedOption(event);\n  };\n\n  const resetResponseText = () => {\n    setTimeout(() => {\n      setresponseText(\"\");\n    }, 10000);\n  };\n\n  const handleSubmit = async () => {\n    if (!selectedOption) {\n      setresponseText(\"Please select an option from the dropdown\");\n      return;\n    } else if (!selectedFile) {\n      setresponseText(\"Please select one file to upload\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    formData.append(\"option\", selectedOption.value);\n    setresponseText(\"\");\n    postHttp(\"upload\", formData)\n      .then((response) => {\n        // console.log(response);\n        setresponseText(response);\n        setSelectedFile(null);\n        setSelectedOption(null);\n        clearFileInput();\n        // handle success\n      })\n      .catch((error) => {\n        console.log(error);\n        setresponseText(error);\n        clearFileInput();\n        // handle error\n      });\n  };\n\n  const clearFileInput = () => {\n    resetResponseText();\n    const inputElement = document.getElementById(\"file\") as HTMLInputElement;\n    if (inputElement) {\n      inputElement.value = \"\"; // Clear the input value\n    }\n  };\n\n  return (\n    <div className=\"upload-container \">\n      <div className=\"content\">\n        <SubHeader pageHeadding=\"File Upload\" showBreadcrumbs={true} />\n\n        <DropDown\n          mainList={typeOfDropdown}\n          name=\"\"\n          onChangeDropDownItem={handleOptionChange}\n          isMulti={false}\n          classname=\"flex\"\n          placeholder={\"Select an option\"}\n          value={selectedOption}\n        />\n        <div className=\"file-browser\">\n          <label htmlFor=\"file\">Select a file:</label>\n          <input\n            type=\"file\"\n            id=\"file\"\n            onChange={handleFileChange}\n            accept=\".xls, .xlsx\"\n          />\n        </div>\n        <button\n          className=\"filter-button std unwanted text\"\n          onClick={handleSubmit}\n        >\n          Upload\n        </button>\n        <div className=\"response-text\">{responseText}</div>\n      </div>\n      {/* <DownloadExcel /> */}\n    </div>\n  );\n};\n\nexport default FileUpload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}