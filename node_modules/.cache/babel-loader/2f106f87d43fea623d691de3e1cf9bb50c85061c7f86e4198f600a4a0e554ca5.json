{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab3/Chart3.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Chart3 = _ref => {\n  _s();\n  let {\n    data,\n    startDate,\n    endDate\n  } = _ref;\n  const [chartData, setchartData] = useState(data);\n  console.log(data, chartData);\n  //const [series, setSeries] = useState<any>();\n  const [dateRangeProps, setdateRangeProps] = useState({\n    fromDate: startDate,\n    toDate: endDate\n  });\n  const [series, setSeries] = useState([{\n    name: \"Improvement over last year\",\n    //chartData?.map((company) => company.entityName),\n    data: chartData === null || chartData === void 0 ? void 0 : chartData.map(company => company.avg_score_diff)\n  }]);\n  const [options, setOptions] = useState({\n    chart: {\n      id: \"bar-chart\"\n    },\n    xaxis: {\n      categories: data === null || data === void 0 ? void 0 : data.map(company => company.entityName)\n    },\n    plotOptions: {\n      bar: {\n        colors: {\n          ranges: [{\n            from: -100,\n            to: 0,\n            color: \"#b70849\"\n          }, {\n            from: 0,\n            to: 100,\n            color: \"#1034a6\"\n          }]\n        }\n      }\n    },\n    dataLabels: {\n      enabled: true,\n      formatter: function (val, opts) {\n        const isPositive = val >= 0;\n        return isPositive ? `+${val}` : val.toString();\n      }\n    }\n  });\n  useEffect(() => {\n    setOptions(prevState => ({\n      ...prevState,\n      xaxis: {\n        ...prevState.xaxis,\n        categories: data === null || data === void 0 ? void 0 : data.map(company => company.entityName)\n      }\n    }));\n  }, [startDate, data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      options: options,\n      series: series,\n      type: \"bar\",\n      height: 350\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Chart3, \"ynB154PhqRtL4L3C0nN/LzpcExM=\");\n_c = Chart3;\nvar _c;\n$RefreshReg$(_c, \"Chart3\");","map":{"version":3,"names":["React","useEffect","useState","Chart","Chart3","data","startDate","endDate","chartData","setchartData","console","log","dateRangeProps","setdateRangeProps","fromDate","toDate","series","setSeries","name","map","company","avg_score_diff","options","setOptions","chart","id","xaxis","categories","entityName","plotOptions","bar","colors","ranges","from","to","color","dataLabels","enabled","formatter","val","opts","isPositive","toString","prevState"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab3/Chart3.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Chart from \"react-apexcharts\";\n\ninterface Chart3Props {\n  data: any;\n  startDate: any;\n  endDate: any;\n}\n\nexport const Chart3: React.FC<Chart3Props> = ({ data, startDate, endDate }) => {\n  const [chartData, setchartData] = useState(data);\n  console.log(data, chartData);\n  //const [series, setSeries] = useState<any>();\n  const [dateRangeProps, setdateRangeProps] = useState({\n    fromDate: startDate,\n    toDate: endDate,\n  });\n\n  const [series, setSeries] = useState([\n    {\n      name: \"Improvement over last year\", //chartData?.map((company) => company.entityName),\n      data: chartData?.map((company) => company.avg_score_diff),\n    },\n  ]);\n\n  const [options, setOptions] = useState({\n    chart: {\n      id: \"bar-chart\",\n    },\n    xaxis: {\n      categories: data?.map((company) => company.entityName),\n    },\n    plotOptions: {\n      bar: {\n        colors: {\n          ranges: [\n            {\n              from: -100,\n              to: 0,\n              color: \"#b70849\",\n            },\n            {\n              from: 0,\n              to: 100,\n              color: \"#1034a6\",\n            },\n          ],\n        },\n      },\n    },\n    dataLabels: {\n      enabled: true,\n      formatter: function (val, opts) {\n        const isPositive = val >= 0;\n        return isPositive ? `+${val}` : val.toString();\n      },\n    },\n  });\n\n  useEffect(() => {\n    setOptions((prevState) => ({\n      ...prevState,\n      xaxis: {\n        ...prevState.xaxis,\n        categories: data?.map((company) => company.entityName),\n      },\n    }));\n  }, [startDate, data]);\n\n  return (\n    <div>\n      <Chart options={options} series={series} type=\"bar\" height={350} />\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,KAAK,MAAM,kBAAkB;AAAC;AAQrC,OAAO,MAAMC,MAA6B,GAAG,QAAkC;EAAA;EAAA,IAAjC;IAAEC,IAAI;IAAEC,SAAS;IAAEC;EAAQ,CAAC;EACxE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAACG,IAAI,CAAC;EAChDK,OAAO,CAACC,GAAG,CAACN,IAAI,EAAEG,SAAS,CAAC;EAC5B;EACA,MAAM,CAACI,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC;IACnDY,QAAQ,EAAER,SAAS;IACnBS,MAAM,EAAER;EACV,CAAC,CAAC;EAEF,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,CACnC;IACEgB,IAAI,EAAE,4BAA4B;IAAE;IACpCb,IAAI,EAAEG,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEW,GAAG,CAAEC,OAAO,IAAKA,OAAO,CAACC,cAAc;EAC1D,CAAC,CACF,CAAC;EAEF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC;IACrCsB,KAAK,EAAE;MACLC,EAAE,EAAE;IACN,CAAC;IACDC,KAAK,EAAE;MACLC,UAAU,EAAEtB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEc,GAAG,CAAEC,OAAO,IAAKA,OAAO,CAACQ,UAAU;IACvD,CAAC;IACDC,WAAW,EAAE;MACXC,GAAG,EAAE;QACHC,MAAM,EAAE;UACNC,MAAM,EAAE,CACN;YACEC,IAAI,EAAE,CAAC,GAAG;YACVC,EAAE,EAAE,CAAC;YACLC,KAAK,EAAE;UACT,CAAC,EACD;YACEF,IAAI,EAAE,CAAC;YACPC,EAAE,EAAE,GAAG;YACPC,KAAK,EAAE;UACT,CAAC;QAEL;MACF;IACF,CAAC;IACDC,UAAU,EAAE;MACVC,OAAO,EAAE,IAAI;MACbC,SAAS,EAAE,UAAUC,GAAG,EAAEC,IAAI,EAAE;QAC9B,MAAMC,UAAU,GAAGF,GAAG,IAAI,CAAC;QAC3B,OAAOE,UAAU,GAAI,IAAGF,GAAI,EAAC,GAAGA,GAAG,CAACG,QAAQ,EAAE;MAChD;IACF;EACF,CAAC,CAAC;EAEFzC,SAAS,CAAC,MAAM;IACdsB,UAAU,CAAEoB,SAAS,KAAM;MACzB,GAAGA,SAAS;MACZjB,KAAK,EAAE;QACL,GAAGiB,SAAS,CAACjB,KAAK;QAClBC,UAAU,EAAEtB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEc,GAAG,CAAEC,OAAO,IAAKA,OAAO,CAACQ,UAAU;MACvD;IACF,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAACtB,SAAS,EAAED,IAAI,CAAC,CAAC;EAErB,oBACE;IAAA,uBACE,QAAC,KAAK;MAAC,OAAO,EAAEiB,OAAQ;MAAC,MAAM,EAAEN,MAAO;MAAC,IAAI,EAAC,KAAK;MAAC,MAAM,EAAE;IAAI;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAC/D;AAEV,CAAC;AAAC,GAjEWZ,MAA6B;AAAA,KAA7BA,MAA6B;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}