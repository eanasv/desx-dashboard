{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab3/Chart3.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Chart3 = _ref => {\n  _s();\n  let {\n    data,\n    startDate,\n    endDate\n  } = _ref;\n  const [xAaxis, setXAxis] = useState([]);\n  const [chartData, setchartData] = useState(data);\n  console.log(data);\n  const [series, setSeries] = useState([]);\n  const [dateRangeProps, setdateRangeProps] = useState({\n    fromDate: startDate,\n    toDate: endDate\n  });\n  useEffect(() => {\n    test();\n  }, [startDate]);\n  const test = () => {\n    var dataSet = [];\n    const series = data === null || data === void 0 ? void 0 : data.map(company => company.avg_score_diff);\n    //  {\n    //   //   return {\n    //   //     name: company.entityName,\n    //   //     data: company.avg_score_diff,\n    //   //   };\n    //   dataSet.push(company.avg_score_diff);\n    //   console.log(dataSet, \"^^^^^^^\", company.avg_score_diff);\n    // });\n    console.log(\"-----\", series);\n    setSeries(series);\n  };\n  const [options, setOptions] = useState({\n    chart: {\n      id: \"bar-chart\"\n    },\n    xaxis: {\n      categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\"]\n    },\n    dataLabels: {\n      enabled: true,\n      formatter: function (val, opts) {\n        const isPositive = val >= 0;\n        return isPositive ? `+${val}` : val.toString();\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      options: options,\n      series: series,\n      type: \"bar\",\n      height: 350\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Chart3, \"Ic82OE23leMBiH3UY6eVStqXsUY=\");\n_c = Chart3;\nvar _c;\n$RefreshReg$(_c, \"Chart3\");","map":{"version":3,"names":["React","useEffect","useState","Chart","Chart3","data","startDate","endDate","xAaxis","setXAxis","chartData","setchartData","console","log","series","setSeries","dateRangeProps","setdateRangeProps","fromDate","toDate","test","dataSet","map","company","avg_score_diff","options","setOptions","chart","id","xaxis","categories","dataLabels","enabled","formatter","val","opts","isPositive","toString"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab3/Chart3.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Chart from \"react-apexcharts\";\n\ninterface Chart3Props {\n  data: any;\n  startDate: any;\n  endDate: any;\n}\n\nexport const Chart3: React.FC<Chart3Props> = ({ data, startDate, endDate }) => {\n  const [xAaxis, setXAxis] = useState([]);\n  const [chartData, setchartData] = useState(data);\n  console.log(data);\n  const [series, setSeries] = useState([]);\n  const [dateRangeProps, setdateRangeProps] = useState({\n    fromDate: startDate,\n    toDate: endDate,\n  });\n\n  useEffect(() => {\n    test();\n  }, [startDate]);\n  const test = () => {\n    var dataSet = [];\n    const series = data?.map((company) => company.avg_score_diff);\n    //  {\n    //   //   return {\n    //   //     name: company.entityName,\n    //   //     data: company.avg_score_diff,\n    //   //   };\n    //   dataSet.push(company.avg_score_diff);\n    //   console.log(dataSet, \"^^^^^^^\", company.avg_score_diff);\n    // });\n    console.log(\"-----\", series);\n    setSeries(series);\n  };\n  const [options, setOptions] = useState({\n    chart: {\n      id: \"bar-chart\",\n    },\n    xaxis: {\n      categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\"],\n    },\n    dataLabels: {\n      enabled: true,\n      formatter: function (val, opts) {\n        const isPositive = val >= 0;\n        return isPositive ? `+${val}` : val.toString();\n      },\n    },\n  });\n\n  return (\n    <div>\n      <Chart options={options} series={series} type=\"bar\" height={350} />\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,KAAK,MAAM,kBAAkB;AAAC;AAQrC,OAAO,MAAMC,MAA6B,GAAG,QAAkC;EAAA;EAAA,IAAjC;IAAEC,IAAI;IAAEC,SAAS;IAAEC;EAAQ,CAAC;EACxE,MAAM,CAACC,MAAM,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAACG,IAAI,CAAC;EAChDO,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;EACjB,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC;IACnDgB,QAAQ,EAAEZ,SAAS;IACnBa,MAAM,EAAEZ;EACV,CAAC,CAAC;EAEFN,SAAS,CAAC,MAAM;IACdmB,IAAI,EAAE;EACR,CAAC,EAAE,CAACd,SAAS,CAAC,CAAC;EACf,MAAMc,IAAI,GAAG,MAAM;IACjB,IAAIC,OAAO,GAAG,EAAE;IAChB,MAAMP,MAAM,GAAGT,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEiB,GAAG,CAAEC,OAAO,IAAKA,OAAO,CAACC,cAAc,CAAC;IAC7D;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAZ,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEC,MAAM,CAAC;IAC5BC,SAAS,CAACD,MAAM,CAAC;EACnB,CAAC;EACD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC;IACrCyB,KAAK,EAAE;MACLC,EAAE,EAAE;IACN,CAAC;IACDC,KAAK,EAAE;MACLC,UAAU,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IAChD,CAAC;IACDC,UAAU,EAAE;MACVC,OAAO,EAAE,IAAI;MACbC,SAAS,EAAE,UAAUC,GAAG,EAAEC,IAAI,EAAE;QAC9B,MAAMC,UAAU,GAAGF,GAAG,IAAI,CAAC;QAC3B,OAAOE,UAAU,GAAI,IAAGF,GAAI,EAAC,GAAGA,GAAG,CAACG,QAAQ,EAAE;MAChD;IACF;EACF,CAAC,CAAC;EAEF,oBACE;IAAA,uBACE,QAAC,KAAK;MAAC,OAAO,EAAEZ,OAAQ;MAAC,MAAM,EAAEX,MAAO;MAAC,IAAI,EAAC,KAAK;MAAC,MAAM,EAAE;IAAI;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAC/D;AAEV,CAAC;AAAC,GAhDWV,MAA6B;AAAA,KAA7BA,MAA6B;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}