{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab1/Tab1.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport JobChart from \"../../../components/Graph/jobChart/JobChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//import ReactLogo from \"../assets/compass.svg\";\n\nfunction Home() {\n  _s();\n  const [displayDataSet, setdisplayDataSet] = useState([]);\n  const isLoading = useSelector(state => state.loader.isLoading);\n  const changeDisplaySetData = data => {\n    setdisplayDataSet(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(JobChart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"/jD0kj7AvGNFcHQ70XCVsfc0Cz8=\", false, function () {\n  return [useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useSelector","JobChart","Home","displayDataSet","setdisplayDataSet","isLoading","state","loader","changeDisplaySetData","data"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab1/Tab1.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport JobChart from \"../../../components/Graph/jobChart/JobChart\";\nimport TestChart from \"../../../components/Graph/TestChart\";\nimport { MainChartSection } from \"../../../components/mainChartSection/MainChartSection\";\nimport { LoadingSpinner } from \"../../../components/spinner/LoadingSpinner\";\nimport ParentComponent from \"../../../components/test/ParentComponent\";\n//import ReactLogo from \"../assets/compass.svg\";\n\nfunction Home() {\n  const [displayDataSet, setdisplayDataSet] = useState([]);\n  const isLoading = useSelector((state: any) => state.loader.isLoading);\n  const changeDisplaySetData = (data) => {\n    setdisplayDataSet(data);\n  };\n\n  return (\n    <div>\n      {/* <FilterSection onSelectedValueChange={changeDisplaySetData} /> */}\n      {/* <Table data={displayDataSet} /> */}\n      {/* <GraphDashboard /> */}\n      {/* <HalfDonutChart1 /> */}\n      {/* <MainChartSection /> */}\n\n      <JobChart />\n    </div>\n  );\n}\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,QAAQ,MAAM,6CAA6C;AAAC;AAKnE;;AAEA,SAASC,IAAI,GAAG;EAAA;EACd,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMM,SAAS,GAAGL,WAAW,CAAEM,KAAU,IAAKA,KAAK,CAACC,MAAM,CAACF,SAAS,CAAC;EACrE,MAAMG,oBAAoB,GAAIC,IAAI,IAAK;IACrCL,iBAAiB,CAACK,IAAI,CAAC;EACzB,CAAC;EAED,oBACE;IAAA,uBAOE,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACR;AAEV;AAAC,GAlBQP,IAAI;EAAA,QAEOF,WAAW;AAAA;AAAA,KAFtBE,IAAI;AAmBb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}