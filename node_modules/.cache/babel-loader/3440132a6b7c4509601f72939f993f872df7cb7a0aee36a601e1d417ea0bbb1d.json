{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/EmployeeProfile/CompetancyEvaluation.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CompetancyEvaluation = () => {\n  _s();\n  const initialCourse = {\n    course_name: \"\",\n    enrollment_date: \"\",\n    enrollment_result: \"\"\n  };\n  const [allSkills, setAllSkills] = useState({\n    technicalSkills: [],\n    softSkills: []\n  });\n  const [employeeData, setEmployeeData] = useState({\n    employee_number: \"\",\n    name: \"\",\n    role: \"\",\n    organization: \"\",\n    total_exp: \"\",\n    cs_exp: \"\",\n    job_profile: \"\",\n    skills: []\n  });\n  useEffect(() => {\n    // Fetch skills from the backend API\n    // Mocking the response for demonstration purposes\n    const mockSkills = {\n      technicalSkills: [\"Statistics\", \"Applied Mathematics\", \"SQL\", \"Data Visualization\", \"Neural Networks\", \"Software Development\", \"Unsupervised Learning\", \"Natural Language Processing\", \"Project Management\", \"Strategy Implementation\"],\n      softSkills: [\"Leadership\", \"Creative Thinking\"]\n    };\n    setAllSkills(mockSkills);\n  }, []);\n  const initialSkill = skillName => {\n    return {\n      name: skillName,\n      evaluation_result: \"\",\n      evaluation_date: \"\",\n      courses: [initialCourse]\n    };\n  };\n  const handleAddSkill = skillName => {\n    setEmployeeData(prevData => ({\n      ...prevData,\n      skills: [...prevData.skills, initialSkill(skillName)]\n    }));\n  };\n  const handleAddCourse = skillIndex => {\n    setEmployeeData(prevData => ({\n      ...prevData,\n      skills: prevData.skills.map((skill, idx) => idx === skillIndex ? {\n        ...skill,\n        courses: [...skill.courses, {\n          ...initialCourse\n        }]\n      } : skill)\n    }));\n  };\n  const handleSkillChange = (e, skillIndex) => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEmployeeData(prevData => ({\n      ...prevData,\n      skills: prevData.skills.map((skill, idx) => idx === skillIndex ? {\n        ...skill,\n        [name]: value\n      } : skill)\n    }));\n  };\n  const handleCourseChange = (e, skillIndex, courseIndex) => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEmployeeData(prevData => ({\n      ...prevData,\n      skills: prevData.skills.map((skill, sIdx) => sIdx === skillIndex ? {\n        ...skill,\n        courses: skill.courses.map((course, cIdx) => cIdx === courseIndex ? {\n          ...course,\n          [name]: value\n        } : course)\n      } : skill)\n    }));\n  };\n  const handleSave = () => {\n    console.log(employeeData);\n    // Send 'employeeData' to the backend API for saving\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"skill-container\",\n    children: [allSkills.technicalSkills.map((skill, skillIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"each-skill-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: skill\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), \" Achieved\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAddSkill(skill),\n        children: \"Add Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), employeeData.skills.map((empSkill, empSkillIndex) => empSkill.name === skill && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"evaluation_result\",\n          value: empSkill.evaluation_result,\n          onChange: e => handleSkillChange(e, empSkillIndex),\n          placeholder: \"Evaluation Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 19\n        }, this), empSkill.courses.map((course, courseIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: course.course_name,\n            onChange: e => handleCourseChange(e, empSkillIndex, courseIndex),\n            placeholder: \"Course Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 23\n          }, this), courseIndex === empSkill.courses.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddCourse(empSkillIndex),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)]\n        }, courseIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this))]\n      }, empSkillIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this))]\n    }, skillIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(CompetancyEvaluation, \"DRvZQ80c2yoFaStarfTAVLWEXA8=\");\n_c = CompetancyEvaluation;\nfunction handleAddTrainingDetails(arg0, id) {\n  throw new Error(\"Function not implemented.\");\n}\nvar _c;\n$RefreshReg$(_c, \"CompetancyEvaluation\");","map":{"version":3,"names":["React","useEffect","useState","CompetancyEvaluation","initialCourse","course_name","enrollment_date","enrollment_result","allSkills","setAllSkills","technicalSkills","softSkills","employeeData","setEmployeeData","employee_number","name","role","organization","total_exp","cs_exp","job_profile","skills","mockSkills","initialSkill","skillName","evaluation_result","evaluation_date","courses","handleAddSkill","prevData","handleAddCourse","skillIndex","map","skill","idx","handleSkillChange","e","value","target","handleCourseChange","courseIndex","sIdx","course","cIdx","handleSave","console","log","empSkill","empSkillIndex","length","handleAddTrainingDetails","arg0","id","Error"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/EmployeeProfile/CompetancyEvaluation.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getHttp } from \"../../service/APIRequest\";\nimport { allSkillsByRoleId } from \"../../service/Config\";\n\nexport const CompetancyEvaluation = () => {\n  const initialCourse = {\n    course_name: \"\",\n    enrollment_date: \"\",\n    enrollment_result: \"\",\n  };\n  const [allSkills, setAllSkills] = useState({\n    technicalSkills: [],\n    softSkills: [],\n  });\n  const [employeeData, setEmployeeData] = useState({\n    employee_number: \"\",\n    name: \"\",\n    role: \"\",\n    organization: \"\",\n    total_exp: \"\",\n    cs_exp: \"\",\n    job_profile: \"\",\n    skills: [],\n  });\n\n  useEffect(() => {\n    // Fetch skills from the backend API\n    // Mocking the response for demonstration purposes\n    const mockSkills = {\n      technicalSkills: [\n        \"Statistics\",\n        \"Applied Mathematics\",\n        \"SQL\",\n        \"Data Visualization\",\n        \"Neural Networks\",\n        \"Software Development\",\n        \"Unsupervised Learning\",\n        \"Natural Language Processing\",\n        \"Project Management\",\n        \"Strategy Implementation\",\n      ],\n      softSkills: [\"Leadership\", \"Creative Thinking\"],\n    };\n    setAllSkills(mockSkills);\n  }, []);\n\n  const initialSkill = (skillName) => {\n    return {\n      name: skillName,\n      evaluation_result: \"\",\n      evaluation_date: \"\",\n      courses: [initialCourse],\n    };\n  };\n\n  const handleAddSkill = (skillName) => {\n    setEmployeeData((prevData) => ({\n      ...prevData,\n      skills: [...prevData.skills, initialSkill(skillName)],\n    }));\n  };\n\n  const handleAddCourse = (skillIndex) => {\n    setEmployeeData((prevData) => ({\n      ...prevData,\n      skills: prevData.skills.map((skill, idx) =>\n        idx === skillIndex\n          ? { ...skill, courses: [...skill.courses, { ...initialCourse }] }\n          : skill\n      ),\n    }));\n  };\n\n  const handleSkillChange = (e, skillIndex) => {\n    const { name, value } = e.target;\n    setEmployeeData((prevData) => ({\n      ...prevData,\n      skills: prevData.skills.map((skill, idx) =>\n        idx === skillIndex ? { ...skill, [name]: value } : skill\n      ),\n    }));\n  };\n\n  const handleCourseChange = (e, skillIndex, courseIndex) => {\n    const { name, value } = e.target;\n    setEmployeeData((prevData) => ({\n      ...prevData,\n      skills: prevData.skills.map((skill, sIdx) =>\n        sIdx === skillIndex\n          ? {\n              ...skill,\n              courses: skill.courses.map((course, cIdx) =>\n                cIdx === courseIndex ? { ...course, [name]: value } : course\n              ),\n            }\n          : skill\n      ),\n    }));\n  };\n\n  const handleSave = () => {\n    console.log(employeeData);\n    // Send 'employeeData' to the backend API for saving\n  };\n\n  return (\n    <div className=\"skill-container\">\n      {allSkills.technicalSkills.map((skill, skillIndex) => (\n        <div key={skillIndex} className=\"each-skill-row\">\n          {/* <input type=\"text\" name=\"name\" value={skill} readOnly /> */}\n          <div>\n            <label>{skill}</label>\n          </div>\n          <div>\n            <input type=\"checkbox\" onChange={() => {}} /> Achieved\n          </div>\n          <button onClick={() => handleAddSkill(skill)}>Add Course</button>\n          {employeeData.skills.map(\n            (empSkill, empSkillIndex) =>\n              empSkill.name === skill && (\n                <div key={empSkillIndex}>\n                  <input\n                    type=\"text\"\n                    name=\"evaluation_result\"\n                    value={empSkill.evaluation_result}\n                    onChange={(e) => handleSkillChange(e, empSkillIndex)}\n                    placeholder=\"Evaluation Result\"\n                  />\n                  {/* Add more input fields for evaluation date, etc. */}\n                  {empSkill.courses.map((course, courseIndex) => (\n                    <div key={courseIndex}>\n                      <input\n                        type=\"text\"\n                        value={course.course_name}\n                        onChange={(e) =>\n                          handleCourseChange(e, empSkillIndex, courseIndex)\n                        }\n                        placeholder=\"Course Name\"\n                      />\n                      {/* Add input fields for enrollment date, enrollment result, etc. */}\n                      {courseIndex === empSkill.courses.length - 1 && (\n                        <button onClick={() => handleAddCourse(empSkillIndex)}>\n                          +\n                        </button>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              )\n          )}\n        </div>\n      ))}\n      <button onClick={handleSave}>Save</button>\n    </div>\n  );\n};\nfunction handleAddTrainingDetails(arg0: string, id: any): void {\n  throw new Error(\"Function not implemented.\");\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}