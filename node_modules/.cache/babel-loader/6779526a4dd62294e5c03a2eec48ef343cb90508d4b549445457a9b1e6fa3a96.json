{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/dataFileUpload/FileUpload.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { postHttp } from \"../../service/APIRequest\";\nimport \"./FileUpload.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [responseText, setresponseText] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [selectedFileType, setSelectedFileType] = useState(\"\");\n  const handleItemSelect = event => {\n    console.log(event);\n    setSelectedFile(event.target.files[0]);\n    setSelectedFileType(event.target.value);\n  };\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleResponseText = () => {\n    setresponseText(null);\n  };\n\n  // const handleSubmit = (e) => {\n  //   console.log(\"handlesubmit\");\n  //   if (!selectedFileType) {\n  //     console.error(\"Please select a file type\");\n  //     return;\n  //   }\n\n  //   const formData = new FormData();\n  //   formData.append(\"file\", file);\n\n  //   // postHttp(\"upload/\" + { selectedFileType }, formData)\n  //   postHttp(\"upload\", formData)\n  //     .then((response) => {\n  //       setresponseText(response);\n  //       // handle success\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //       setresponseText(error);\n  //       // handle error\n  //     });\n  //   e.target.value = null;\n  // };\n\n  // axios\n  //   .post(\"http://localhost:8080/upload\", formData, {\n  //     headers: {\n  //       \"Content-Type\": \"multipart/form-data\",\n  //     },\n  //   })\n  //   .then((response) => {\n  //     console.log(response);\n  //     setresponseText(response.data);\n  //     // handle success\n  //   })\n  //   .catch((error) => {\n  //     console.log(error);\n  //     // handle error\n  //   });\n  //};\n\n  const handleFileUpload = () => {\n    if (!selectedFileType) {\n      console.error(\"Please select a file type\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    postHttp(\"upload\", formData).then(response => {\n      console.log(response);\n      setresponseText(response);\n      // handle success\n    }).catch(error => {\n      console.log(error);\n      setresponseText(error);\n      // handle error\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // const fileInput = document.getElementById(\"fileInput\");\n    const file = e.target.files[0];\n    handleFileUpload();\n    // Clear the file input\n    e.target.value = null;\n  };\n  var typeOfDropdown = [{\n    id: 1,\n    label: \"Employee\",\n    value: \"Employee\"\n  }, {\n    id: 2,\n    label: \"Training\",\n    value: \"Training\"\n  }, {\n    id: 3,\n    label: \"Entity\",\n    value: \"Entity\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-backgroound\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: () => handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedFileType,\n          onChange: handleItemSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select File Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"employee\",\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"training\",\n            children: \"Training\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"entity\",\n            children: \"Entity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleFileChange,\n            onClick: handleResponseText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: () => handleSubmit,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response-text\",\n      children: responseText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"fatJRRgiu1eIqKDv0xrNj+B9Qt4=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","postHttp","FileUpload","file","setFile","responseText","setresponseText","selectedFile","setSelectedFile","selectedFileType","setSelectedFileType","handleItemSelect","event","console","log","target","files","value","handleFileChange","e","handleResponseText","handleFileUpload","error","formData","FormData","append","then","response","catch","handleSubmit","preventDefault","typeOfDropdown","id","label"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/dataFileUpload/FileUpload.tsx"],"sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport DropDown from \"../../components/dropDown/DropDown\";\nimport { postHttp } from \"../../service/APIRequest\";\nimport \"./FileUpload.css\";\n\nconst FileUpload = () => {\n  const [file, setFile] = useState(null);\n  const [responseText, setresponseText] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [selectedFileType, setSelectedFileType] = useState(\"\");\n\n  const handleItemSelect = (event) => {\n    console.log(event);\n    setSelectedFile(event.target.files[0]);\n    setSelectedFileType(event.target.value);\n  };\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleResponseText = () => {\n    setresponseText(null);\n  };\n\n  // const handleSubmit = (e) => {\n  //   console.log(\"handlesubmit\");\n  //   if (!selectedFileType) {\n  //     console.error(\"Please select a file type\");\n  //     return;\n  //   }\n\n  //   const formData = new FormData();\n  //   formData.append(\"file\", file);\n\n  //   // postHttp(\"upload/\" + { selectedFileType }, formData)\n  //   postHttp(\"upload\", formData)\n  //     .then((response) => {\n  //       setresponseText(response);\n  //       // handle success\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //       setresponseText(error);\n  //       // handle error\n  //     });\n  //   e.target.value = null;\n  // };\n\n  // axios\n  //   .post(\"http://localhost:8080/upload\", formData, {\n  //     headers: {\n  //       \"Content-Type\": \"multipart/form-data\",\n  //     },\n  //   })\n  //   .then((response) => {\n  //     console.log(response);\n  //     setresponseText(response.data);\n  //     // handle success\n  //   })\n  //   .catch((error) => {\n  //     console.log(error);\n  //     // handle error\n  //   });\n  //};\n\n  const handleFileUpload = () => {\n    if (!selectedFileType) {\n      console.error(\"Please select a file type\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    postHttp(\"upload\", formData)\n      .then((response) => {\n        console.log(response);\n        setresponseText(response);\n        // handle success\n      })\n      .catch((error) => {\n        console.log(error);\n        setresponseText(error);\n        // handle error\n      });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // const fileInput = document.getElementById(\"fileInput\");\n    const file = e.target.files[0];\n    handleFileUpload();\n    // Clear the file input\n    e.target.value = null;\n  };\n\n  var typeOfDropdown = [\n    { id: 1, label: \"Employee\", value: \"Employee\" },\n    { id: 2, label: \"Training\", value: \"Training\" },\n    { id: 3, label: \"Entity\", value: \"Entity\" },\n  ];\n  return (\n    <div className=\"upload-backgroound\">\n      <div className=\"upload-container\">\n        <form onSubmit={() => handleSubmit}>\n          <select value={selectedFileType} onChange={handleItemSelect}>\n            <option value=\"\">Select File Type</option>\n            <option value=\"employee\">Employee</option>\n            <option value=\"training\">Training</option>\n            <option value=\"entity\">Entity</option>\n          </select>\n          <div>\n            {/* <DropDown\n            mainList={typeOfDropdown}\n            name=\"\"\n            onChangeDropDownItem={handleItemSelect}\n            isMulti={false}\n            classname=\"margin\"\n            placeholder={\"Select file type\"}\n          /> */}\n            <input\n              type=\"file\"\n              onChange={handleFileChange}\n              onClick={handleResponseText}\n            />\n            <button type=\"submit\" onClick={() => handleSubmit}>\n              Upload\n            </button>\n          </div>\n        </form>\n      </div>\n      <div className=\"response-text\">{responseText}</div>\n    </div>\n  );\n};\n\nexport default FileUpload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}