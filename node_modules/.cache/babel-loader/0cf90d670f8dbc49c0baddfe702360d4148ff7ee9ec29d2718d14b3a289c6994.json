{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/MyChart.tsx\";\nimport React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\"],\n  datasets: [{\n    label: \"Layer 1\",\n    data: [10, 20, 30, 40, 50],\n    backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n    borderColor: \"rgba(255, 99, 132, 1)\",\n    borderWidth: 1\n  }, {\n    label: \"Layer 2\",\n    data: [20, 30, 40, 50, 60],\n    backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n    borderColor: \"rgba(54, 162, 235, 1)\",\n    borderWidth: 1\n  }]\n};\nconst options = {\n  plugins: {\n    datalabels: {\n      display: true,\n      formatter: (value, ctx) => {\n        let label = \"\";\n        if (ctx.datasetIndex === 0) {\n          label = \"Layer 1:\";\n        } else if (ctx.datasetIndex === 1) {\n          label = \"Layer 2:\";\n        }\n        return label + value;\n      }\n    }\n  }\n};\nconst MyChart = () => {\n  return /*#__PURE__*/_jsxDEV(Doughnut, {\n    data: data,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n};\n_c = MyChart;\nexport default MyChart;\nvar _c;\n$RefreshReg$(_c, \"MyChart\");","map":{"version":3,"names":["React","Doughnut","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","plugins","datalabels","display","formatter","value","ctx","datasetIndex","MyChart"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/MyChart.tsx"],"sourcesContent":["import React from \"react\";\nimport { Bar, Doughnut } from \"react-chartjs-2\";\n\nconst data = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\"],\n  datasets: [\n    {\n      label: \"Layer 1\",\n      data: [10, 20, 30, 40, 50],\n      backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n      borderColor: \"rgba(255, 99, 132, 1)\",\n      borderWidth: 1,\n    },\n    {\n      label: \"Layer 2\",\n      data: [20, 30, 40, 50, 60],\n      backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n      borderColor: \"rgba(54, 162, 235, 1)\",\n      borderWidth: 1,\n    },\n  ],\n};\n\nconst options = {\n  plugins: {\n    datalabels: {\n      display: true,\n      formatter: (value, ctx) => {\n        let label = \"\";\n        if (ctx.datasetIndex === 0) {\n          label = \"Layer 1:\";\n        } else if (ctx.datasetIndex === 1) {\n          label = \"Layer 2:\";\n        }\n        return label + value;\n      },\n    },\n  },\n};\n\nconst MyChart = () => {\n  return <Doughnut data={data} options={options} />;\n};\n\nexport default MyChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAcC,QAAQ,QAAQ,iBAAiB;AAAC;AAEhD,MAAMC,IAAI,GAAG;EACXC,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC;EACxDC,QAAQ,EAAE,CACR;IACEC,KAAK,EAAE,SAAS;IAChBH,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC1BI,eAAe,EAAE,yBAAyB;IAC1CC,WAAW,EAAE,uBAAuB;IACpCC,WAAW,EAAE;EACf,CAAC,EACD;IACEH,KAAK,EAAE,SAAS;IAChBH,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC1BI,eAAe,EAAE,yBAAyB;IAC1CC,WAAW,EAAE,uBAAuB;IACpCC,WAAW,EAAE;EACf,CAAC;AAEL,CAAC;AAED,MAAMC,OAAO,GAAG;EACdC,OAAO,EAAE;IACPC,UAAU,EAAE;MACVC,OAAO,EAAE,IAAI;MACbC,SAAS,EAAE,CAACC,KAAK,EAAEC,GAAG,KAAK;QACzB,IAAIV,KAAK,GAAG,EAAE;QACd,IAAIU,GAAG,CAACC,YAAY,KAAK,CAAC,EAAE;UAC1BX,KAAK,GAAG,UAAU;QACpB,CAAC,MAAM,IAAIU,GAAG,CAACC,YAAY,KAAK,CAAC,EAAE;UACjCX,KAAK,GAAG,UAAU;QACpB;QACA,OAAOA,KAAK,GAAGS,KAAK;MACtB;IACF;EACF;AACF,CAAC;AAED,MAAMG,OAAO,GAAG,MAAM;EACpB,oBAAO,QAAC,QAAQ;IAAC,IAAI,EAAEf,IAAK;IAAC,OAAO,EAAEO;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAG;AACnD,CAAC;AAAC,KAFIQ,OAAO;AAIb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}