{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/dataFileUpload/FileUpload.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { DownloadExcel } from \"../../components/downloadExcel/DownloadExcel\";\nimport ErrorComponent from \"../../components/errorComponent/ErrorComponent\";\nimport DropDown from \"../../components/dropDown/DropDown\";\nimport { SubHeader } from \"../../components/subHeader/SubHeader\";\nimport { postHttp } from \"../../service/APIRequest1\";\nimport { excelUpload } from \"../../service/Config\";\nimport \"./FileUpload.css\";\nimport Store from \"../../redux/Store\";\nimport { showErrorMesaage } from \"../../redux/features/errorSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  // const [file, setFile] = useState(null);\n  // const [selectedFile, setSelectedFile] = useState(null);\n  // const [selectedFileType, setSelectedFileType] = useState(\"\");\n\n  // const handleItemSelect = (event) => {\n  //   console.log(event);\n  //   setSelectedFile(event.target.files[0]);\n  //   setSelectedFileType(event.target.value);\n  // };\n\n  // const handleFileChange = (e) => {\n  //   setFile(e.target.files[0]);\n  // };\n\n  // const handleResponseText = () => {\n  //   setresponseText(null);\n  // };\n\n  var typeOfDropdown = [{\n    id: 1,\n    label: \"Employee\",\n    value: \"Employee\"\n  }, {\n    id: 2,\n    label: \"Training\",\n    value: \"Training\"\n  }\n  // { id: 3, label: \"Entity\", value: \"Entity\" },\n  ];\n\n  const [responseText, setresponseText] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  var userDeatilsString = sessionStorage.getItem(\"userDetails\");\n  var userDetailsObj = JSON.parse(userDeatilsString); //\n\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleOptionChange = event => {\n    setSelectedOption(event);\n  };\n\n  // const resetResponseText = () => {\n  //   setTimeout(() => {\n  //     setresponseText(\"\");\n  //   }, 10000);\n  // };\n\n  const handleSubmit = async () => {\n    const entityName = userDetailsObj.entity;\n    console.log(userDetailsObj.entity);\n    let endpoint;\n    if (!selectedOption) {\n      Store.dispatch(showErrorMesaage(\"Please select an option from the dropdown\"));\n      return;\n    } else if (!selectedFile) {\n      Store.dispatch(showErrorMesaage(\"Please select one file to upload\"));\n      return;\n    }\n    var uploadType;\n    if (selectedOption.value == \"Employee\") {\n      endpoint = excelUpload + \"upload\";\n    } else if (selectedOption.value == \"Training\") {\n      endpoint = excelUpload + \"trainingNeedsUpload\";\n    }\n    if (entityName) {\n      endpoint = `${endpoint}?entityName=${entityName}`;\n      console.log(endpoint);\n    }\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    formData.append(\"option\", selectedOption.value);\n    setresponseText(\"\");\n    postHttp(endpoint, formData).then(response => {\n      // console.log(response);\n      if (response) {\n        // setresponseText(response?.message);\n        Store.dispatch(showErrorMesaage(response.data));\n      }\n      setSelectedFile(null);\n      setSelectedOption(null);\n      clearFileInput();\n    }).catch(error => {\n      console.log(error);\n      Store.dispatch(showErrorMesaage(error === null || error === void 0 ? void 0 : error.error));\n      //setresponseText(error);\n      clearFileInput();\n      // handle error\n    });\n  };\n\n  const clearFileInput = () => {\n    //resetResponseText();\n    const inputElement = document.getElementById(\"file\");\n    if (inputElement) {\n      inputElement.value = \"\"; // Clear the input value\n    }\n  };\n\n  var userDeatils = JSON.parse(sessionStorage.getItem(\"userDetails\"));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(SubHeader, {\n        pageHeadding: `File Upload ${userDeatils.entity}`,\n        showBreadcrumbs: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-area\",\n        children: [/*#__PURE__*/_jsxDEV(DropDown, {\n          mainList: typeOfDropdown,\n          name: \"\",\n          onChangeDropDownItem: handleOptionChange,\n          isMulti: false,\n          classname: \"flex\",\n          placeholder: \"Select an option\",\n          value: selectedOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-browser\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file\",\n            children: \"Select a file:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"file\",\n            onChange: handleFileChange,\n            accept: \".xls, .xlsx\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-button std unwanted text upload-button\",\n          onClick: handleSubmit,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DownloadExcel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"xbekFizCSYlfB0ZNBHAR6p/66fI=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","DownloadExcel","ErrorComponent","DropDown","SubHeader","postHttp","excelUpload","Store","showErrorMesaage","FileUpload","typeOfDropdown","id","label","value","responseText","setresponseText","selectedFile","setSelectedFile","selectedOption","setSelectedOption","userDeatilsString","sessionStorage","getItem","userDetailsObj","JSON","parse","handleFileChange","event","target","files","handleOptionChange","handleSubmit","entityName","entity","console","log","endpoint","dispatch","uploadType","formData","FormData","append","then","response","data","clearFileInput","catch","error","inputElement","document","getElementById","userDeatils"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/dataFileUpload/FileUpload.tsx"],"sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { DownloadExcel } from \"../../components/downloadExcel/DownloadExcel\";\nimport ErrorComponent from \"../../components/errorComponent/ErrorComponent\";\nimport DropDown from \"../../components/dropDown/DropDown\";\nimport { SubHeader } from \"../../components/subHeader/SubHeader\";\nimport { postHttp } from \"../../service/APIRequest1\";\nimport { excelUpload } from \"../../service/Config\";\nimport \"./FileUpload.css\";\nimport Store from \"../../redux/Store\";\nimport { showErrorMesaage } from \"../../redux/features/errorSlice\";\n\nconst FileUpload = () => {\n  // const [file, setFile] = useState(null);\n  // const [selectedFile, setSelectedFile] = useState(null);\n  // const [selectedFileType, setSelectedFileType] = useState(\"\");\n\n  // const handleItemSelect = (event) => {\n  //   console.log(event);\n  //   setSelectedFile(event.target.files[0]);\n  //   setSelectedFileType(event.target.value);\n  // };\n\n  // const handleFileChange = (e) => {\n  //   setFile(e.target.files[0]);\n  // };\n\n  // const handleResponseText = () => {\n  //   setresponseText(null);\n  // };\n\n  var typeOfDropdown = [\n    { id: 1, label: \"Employee\", value: \"Employee\" },\n    { id: 2, label: \"Training\", value: \"Training\" },\n    // { id: 3, label: \"Entity\", value: \"Entity\" },\n  ];\n  const [responseText, setresponseText] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  var userDeatilsString = sessionStorage.getItem(\"userDetails\");\n  var userDetailsObj = JSON.parse(userDeatilsString); //\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleOptionChange = (event) => {\n    setSelectedOption(event);\n  };\n\n  // const resetResponseText = () => {\n  //   setTimeout(() => {\n  //     setresponseText(\"\");\n  //   }, 10000);\n  // };\n\n  const handleSubmit = async () => {\n    const entityName = userDetailsObj.entity;\n    console.log(userDetailsObj.entity);\n\n    let endpoint;\n\n    if (!selectedOption) {\n      Store.dispatch(\n        showErrorMesaage(\"Please select an option from the dropdown\")\n      );\n      return;\n    } else if (!selectedFile) {\n      Store.dispatch(showErrorMesaage(\"Please select one file to upload\"));\n      return;\n    }\n    var uploadType;\n    if (selectedOption.value == \"Employee\") {\n      endpoint = excelUpload + \"upload\";\n    } else if (selectedOption.value == \"Training\") {\n      endpoint = excelUpload + \"trainingNeedsUpload\";\n    }\n    if (entityName) {\n      endpoint = `${endpoint}?entityName=${entityName}`;\n      console.log(endpoint);\n    }\n\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    formData.append(\"option\", selectedOption.value);\n    setresponseText(\"\");\n    postHttp(endpoint, formData)\n      .then((response) => {\n        // console.log(response);\n        if (response) {\n          // setresponseText(response?.message);\n          Store.dispatch(showErrorMesaage(response.data));\n        }\n        setSelectedFile(null);\n        setSelectedOption(null);\n        clearFileInput();\n      })\n      .catch((error) => {\n        console.log(error);\n        Store.dispatch(showErrorMesaage(error?.error));\n        //setresponseText(error);\n        clearFileInput();\n        // handle error\n      });\n  };\n\n  const clearFileInput = () => {\n    //resetResponseText();\n    const inputElement = document.getElementById(\"file\") as HTMLInputElement;\n    if (inputElement) {\n      inputElement.value = \"\"; // Clear the input value\n    }\n  };\n  var userDeatils = JSON.parse(sessionStorage.getItem(\"userDetails\"));\n\n  return (\n    <div className=\"upload-container \">\n      <div className=\"content\">\n        <SubHeader\n          pageHeadding={`File Upload ${userDeatils.entity}`}\n          showBreadcrumbs={true}\n        />\n        <div className=\"upload-area\">\n          <DropDown\n            mainList={typeOfDropdown}\n            name=\"\"\n            onChangeDropDownItem={handleOptionChange}\n            isMulti={false}\n            classname=\"flex\"\n            placeholder={\"Select an option\"}\n            value={selectedOption}\n          />\n          <div className=\"file-browser\">\n            <label htmlFor=\"file\">Select a file:</label>\n            <input\n              type=\"file\"\n              id=\"file\"\n              onChange={handleFileChange}\n              accept=\".xls, .xlsx\"\n            />\n          </div>\n          <button\n            className=\"filter-button std unwanted text upload-button\"\n            onClick={handleSubmit}\n          >\n            Upload\n          </button>\n          {/* <div className=\"response-text\">{responseText}</div> */}\n        </div>\n        <ErrorComponent />\n      </div>\n      <DownloadExcel />\n    </div>\n  );\n};\n\nexport default FileUpload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}