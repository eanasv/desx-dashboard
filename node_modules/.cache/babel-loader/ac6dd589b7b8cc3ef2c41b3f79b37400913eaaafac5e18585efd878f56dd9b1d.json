{"ast":null,"code":"import _slicedToArray from\"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import{skillMaximumScoreValue}from\"../../service/Constants\";import{alertColor,calculatePercent}from\"../../service/Service\";import{jsx as _jsx}from\"react/jsx-runtime\";var ProgressBar=function ProgressBar(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),percentage=_useState2[0],setPercentage=_useState2[1];// set initial percentage value\nuseEffect(function(){getPercentageValue();},[]);var getPercentageValue=function getPercentageValue(){setPercentage(calculatePercent(props.score,skillMaximumScoreValue));};var progressBarColor=alertColor(percentage);var progressBarStyles={width:\"\".concat(percentage,\"%\"),// set width of progress bar based on percentage\nbackground:\"\".concat(progressBarColor)};var progressBarContainer={borderColor:\"\".concat(progressBarColor)};return/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar-container\",style:progressBarContainer,children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",style:progressBarStyles})});};export default ProgressBar;","map":{"version":3,"names":["React","useEffect","useState","skillMaximumScoreValue","alertColor","calculatePercent","ProgressBar","props","percentage","setPercentage","getPercentageValue","score","progressBarColor","progressBarStyles","width","background","progressBarContainer","borderColor"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/progressCircle/ProgressBar.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { skillMaximumScoreValue } from \"../../service/Constants\";\nimport { alertColor, calculatePercent } from \"../../service/Service\";\n\nconst ProgressBar = (props) => {\n  const [percentage, setPercentage] = useState<any>(); // set initial percentage value\n\n  useEffect(() => {\n    getPercentageValue();\n  }, []);\n\n  const getPercentageValue = () => {\n    setPercentage(calculatePercent(props.score, skillMaximumScoreValue));\n  };\n\n  const progressBarColor = alertColor(percentage);\n\n  const progressBarStyles = {\n    width: `${percentage}%`, // set width of progress bar based on percentage\n    background: `${progressBarColor}`,\n  };\n  const progressBarContainer = {\n    borderColor: `${progressBarColor}`,\n  };\n\n  return (\n    <div className=\"progress-bar-container\" style={progressBarContainer}>\n      <div className=\"progress-bar\" style={progressBarStyles}></div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n"],"mappings":"yJAAA,MAAOA,MAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,sBAAsB,KAAQ,yBAAyB,CAChE,OAASC,UAAU,CAAEC,gBAAgB,KAAQ,uBAAuB,CAAC,2CAErE,GAAMC,YAAW,CAAG,QAAdA,YAAW,CAAIC,KAAK,CAAK,CAC7B,cAAoCL,QAAQ,EAAO,wCAA5CM,UAAU,eAAEC,aAAa,eAAqB;AAErDR,SAAS,CAAC,UAAM,CACdS,kBAAkB,EAAE,CACtB,CAAC,CAAE,EAAE,CAAC,CAEN,GAAMA,mBAAkB,CAAG,QAArBA,mBAAkB,EAAS,CAC/BD,aAAa,CAACJ,gBAAgB,CAACE,KAAK,CAACI,KAAK,CAAER,sBAAsB,CAAC,CAAC,CACtE,CAAC,CAED,GAAMS,iBAAgB,CAAGR,UAAU,CAACI,UAAU,CAAC,CAE/C,GAAMK,kBAAiB,CAAG,CACxBC,KAAK,WAAKN,UAAU,KAAG,CAAE;AACzBO,UAAU,WAAKH,gBAAgB,CACjC,CAAC,CACD,GAAMI,qBAAoB,CAAG,CAC3BC,WAAW,WAAKL,gBAAgB,CAClC,CAAC,CAED,mBACE,YAAK,SAAS,CAAC,wBAAwB,CAAC,KAAK,CAAEI,oBAAqB,uBAClE,YAAK,SAAS,CAAC,cAAc,CAAC,KAAK,CAAEH,iBAAkB,EAAO,EAC1D,CAEV,CAAC,CAED,cAAeP,YAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}