{"ast":null,"code":"import _defineProperty from\"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _toConsumableArray from\"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var CompetancyEvaluation=function CompetancyEvaluation(){var initialCourse={course_name:\"\",enrollment_date:\"\",enrollment_result:\"\"};var _useState=useState({technicalSkills:[],softSkills:[]}),_useState2=_slicedToArray(_useState,2),allSkills=_useState2[0],setAllSkills=_useState2[1];var _useState3=useState({employee_number:\"\",name:\"\",role:\"\",organization:\"\",total_exp:\"\",cs_exp:\"\",job_profile:\"\",skills:[]}),_useState4=_slicedToArray(_useState3,2),employeeData=_useState4[0],setEmployeeData=_useState4[1];useEffect(function(){// Fetch skills from the backend API\n// Mocking the response for demonstration purposes\nvar mockSkills={technicalSkills:[\"Statistics\",\"Applied Mathematics\",\"SQL\",\"Data Visualization\",\"Neural Networks\",\"Software Development\",\"Unsupervised Learning\",\"Natural Language Processing\",\"Project Management\",\"Strategy Implementation\"],softSkills:[\"Leadership\",\"Creative Thinking\"]};setAllSkills(mockSkills);},[]);var initialSkill=function initialSkill(skillName){return{name:skillName,evaluation_result:\"\",evaluation_date:\"\",courses:[initialCourse]};};var handleAddSkill=function handleAddSkill(skillName){setEmployeeData(function(prevData){return _objectSpread(_objectSpread({},prevData),{},{skills:[].concat(_toConsumableArray(prevData.skills),[initialSkill(skillName)])});});};var handleAddCourse=function handleAddCourse(skillIndex){setEmployeeData(function(prevData){return _objectSpread(_objectSpread({},prevData),{},{skills:prevData.skills.map(function(skill,idx){return idx===skillIndex?_objectSpread(_objectSpread({},skill),{},{courses:[].concat(_toConsumableArray(skill.courses),[_objectSpread({},initialCourse)])}):skill;})});});};var handleSkillChange=function handleSkillChange(e,skillIndex){var _e$target=e.target,name=_e$target.name,value=_e$target.value;setEmployeeData(function(prevData){return _objectSpread(_objectSpread({},prevData),{},{skills:prevData.skills.map(function(skill,idx){return idx===skillIndex?_objectSpread(_objectSpread({},skill),{},_defineProperty({},name,value)):skill;})});});};var handleCourseChange=function handleCourseChange(e,skillIndex,courseIndex){var _e$target2=e.target,name=_e$target2.name,value=_e$target2.value;setEmployeeData(function(prevData){return _objectSpread(_objectSpread({},prevData),{},{skills:prevData.skills.map(function(skill,sIdx){return sIdx===skillIndex?_objectSpread(_objectSpread({},skill),{},{courses:skill.courses.map(function(course,cIdx){return cIdx===courseIndex?_objectSpread(_objectSpread({},course),{},_defineProperty({},name,value)):course;})}):skill;})});});};var handleSave=function handleSave(){console.log(employeeData);// Send 'employeeData' to the backend API for saving\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"skill-container\",children:[allSkills.technicalSkills.map(function(skill,skillIndex){return/*#__PURE__*/_jsxs(\"div\",{className:\"each-skill-row\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"label\",{children:skill})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onChange:function onChange(){}}),\" Achieved\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleAddSkill(skill);},children:\"Add Course\"}),employeeData.skills.map(function(empSkill,empSkillIndex){return empSkill.name===skill&&/*#__PURE__*/_jsx(\"div\",{children:empSkill.courses.map(function(course,courseIndex){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:course.course_name,onChange:function onChange(e){return handleCourseChange(e,empSkillIndex,courseIndex);},placeholder:\"Course Name\"}),courseIndex===empSkill.courses.length-1&&/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleAddCourse(empSkillIndex);},children:\"+\"})]},courseIndex);})},empSkillIndex);})]},skillIndex);}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSave,children:\"Save\"})]});};function handleAddTrainingDetails(arg0,id){throw new Error(\"Function not implemented.\");}","map":{"version":3,"names":["React","useEffect","useState","CompetancyEvaluation","initialCourse","course_name","enrollment_date","enrollment_result","technicalSkills","softSkills","allSkills","setAllSkills","employee_number","name","role","organization","total_exp","cs_exp","job_profile","skills","employeeData","setEmployeeData","mockSkills","initialSkill","skillName","evaluation_result","evaluation_date","courses","handleAddSkill","prevData","handleAddCourse","skillIndex","map","skill","idx","handleSkillChange","e","target","value","handleCourseChange","courseIndex","sIdx","course","cIdx","handleSave","console","log","empSkill","empSkillIndex","length","handleAddTrainingDetails","arg0","id","Error"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/EmployeeProfile/CompetancyEvaluation.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getHttp } from \"../../service/APIRequest\";\nimport { allSkillsByRoleId } from \"../../service/Config\";\n\nexport const CompetancyEvaluation = () => {\n  const initialCourse = {\n    course_name: \"\",\n    enrollment_date: \"\",\n    enrollment_result: \"\",\n  };\n  const [allSkills, setAllSkills] = useState({\n    technicalSkills: [],\n    softSkills: [],\n  });\n  const [employeeData, setEmployeeData] = useState({\n    employee_number: \"\",\n    name: \"\",\n    role: \"\",\n    organization: \"\",\n    total_exp: \"\",\n    cs_exp: \"\",\n    job_profile: \"\",\n    skills: [],\n  });\n\n  useEffect(() => {\n    // Fetch skills from the backend API\n    // Mocking the response for demonstration purposes\n    const mockSkills = {\n      technicalSkills: [\n        \"Statistics\",\n        \"Applied Mathematics\",\n        \"SQL\",\n        \"Data Visualization\",\n        \"Neural Networks\",\n        \"Software Development\",\n        \"Unsupervised Learning\",\n        \"Natural Language Processing\",\n        \"Project Management\",\n        \"Strategy Implementation\",\n      ],\n      softSkills: [\"Leadership\", \"Creative Thinking\"],\n    };\n    setAllSkills(mockSkills);\n  }, []);\n\n  const initialSkill = (skillName) => {\n    return {\n      name: skillName,\n      evaluation_result: \"\",\n      evaluation_date: \"\",\n      courses: [initialCourse],\n    };\n  };\n\n  const handleAddSkill = (skillName) => {\n    setEmployeeData((prevData) => ({\n      ...prevData,\n      skills: [...prevData.skills, initialSkill(skillName)],\n    }));\n  };\n\n  const handleAddCourse = (skillIndex) => {\n    setEmployeeData((prevData) => ({\n      ...prevData,\n      skills: prevData.skills.map((skill, idx) =>\n        idx === skillIndex\n          ? { ...skill, courses: [...skill.courses, { ...initialCourse }] }\n          : skill\n      ),\n    }));\n  };\n\n  const handleSkillChange = (e, skillIndex) => {\n    const { name, value } = e.target;\n    setEmployeeData((prevData) => ({\n      ...prevData,\n      skills: prevData.skills.map((skill, idx) =>\n        idx === skillIndex ? { ...skill, [name]: value } : skill\n      ),\n    }));\n  };\n\n  const handleCourseChange = (e, skillIndex, courseIndex) => {\n    const { name, value } = e.target;\n    setEmployeeData((prevData) => ({\n      ...prevData,\n      skills: prevData.skills.map((skill, sIdx) =>\n        sIdx === skillIndex\n          ? {\n              ...skill,\n              courses: skill.courses.map((course, cIdx) =>\n                cIdx === courseIndex ? { ...course, [name]: value } : course\n              ),\n            }\n          : skill\n      ),\n    }));\n  };\n\n  const handleSave = () => {\n    console.log(employeeData);\n    // Send 'employeeData' to the backend API for saving\n  };\n\n  return (\n    <div className=\"skill-container\">\n      {allSkills.technicalSkills.map((skill, skillIndex) => (\n        <div key={skillIndex} className=\"each-skill-row\">\n          {/* <input type=\"text\" name=\"name\" value={skill} readOnly /> */}\n          <div>\n            <label>{skill}</label>\n          </div>\n          <div>\n            <input type=\"checkbox\" onChange={() => {}} /> Achieved\n          </div>\n          {/* <input\n            type=\"text\"\n            name=\"evaluation_result\"\n            value={skill.evaluation_result}\n            onChange={(e) => handleSkillChange(e, skillIndex)}\n            placeholder=\"Evaluation Result\"\n          /> */}\n          <button onClick={() => handleAddSkill(skill)}>Add Course</button>\n\n          {employeeData.skills.map(\n            (empSkill, empSkillIndex) =>\n              empSkill.name === skill && (\n                <div key={empSkillIndex}>\n                  {/* Add more input fields for evaluation date, etc. */}\n                  {empSkill.courses.map((course, courseIndex) => (\n                    <div key={courseIndex}>\n                      <input\n                        type=\"text\"\n                        value={course.course_name}\n                        onChange={(e) =>\n                          handleCourseChange(e, empSkillIndex, courseIndex)\n                        }\n                        placeholder=\"Course Name\"\n                      />\n                      {/* Add input fields for enrollment date, enrollment result, etc. */}\n                      {courseIndex === empSkill.courses.length - 1 && (\n                        <button onClick={() => handleAddCourse(empSkillIndex)}>\n                          +\n                        </button>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              )\n          )}\n        </div>\n      ))}\n      <button onClick={handleSave}>Save</button>\n    </div>\n  );\n};\nfunction handleAddTrainingDetails(arg0: string, id: any): void {\n  throw new Error(\"Function not implemented.\");\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}