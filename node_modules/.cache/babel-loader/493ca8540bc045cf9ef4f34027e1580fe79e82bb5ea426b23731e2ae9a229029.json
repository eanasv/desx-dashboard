{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/barChart/BarChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { getHttp } from \"../../../service/APIRequest\";\nimport { Popover } from \"../../popup/Popover\";\nimport \"../Chart.css\";\nimport \"./BarChartPopup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BarChart = _ref => {\n  _s();\n  let {\n    data,\n    xAxis,\n    title,\n    name,\n    width,\n    subTitle\n  } = _ref;\n  const [dataSeries, setdataSeries] = useState([{\n    subTitle: subTitle,\n    name: title,\n    //will be displayed on the y-axis\n    data: data\n  }]);\n  const [popupSubtitle, setpopupSubtitle] = useState(subTitle);\n  const [popupPosition, setPopupPosition] = useState(null);\n  const barRef = useRef(null);\n  const [popupData, setPopupData] = useState(null);\n  const [option, setOption] = useState({\n    legend: {\n      show: false\n    },\n    chart: {\n      events: {\n        dataPointSelection: function (event, chartContext, config) {\n          const dataPointIndex = config.dataPointIndex;\n          const selectedXValue = option.xaxis.categories[dataPointIndex];\n          const barElement = barRef.current;\n          const rect = barElement.getBoundingClientRect();\n          const popupX = rect.left + rect.width;\n          const popupY = rect.top + rect.height / 2;\n          eachBarClick(event, chartContext, config, selectedXValue, popupX, popupY);\n        }\n      }\n    },\n    xaxis: {\n      categories: xAxis\n    },\n    title: {\n      text: title,\n      style: {\n        fontSize: \"14px\",\n        fontWeight: \"bold\",\n        fontFamily: \"Bukra\",\n        color: \"black\"\n      }\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: 50,\n        colors: {\n          ranges: [{\n            from: -100,\n            to: 0,\n            color: \"#b70849\"\n          }, {\n            from: 0,\n            to: 100,\n            color: \"#1034a6\"\n          }]\n        }\n      }\n    },\n    // dataLabels: {\n    //   enabled: true,\n    //   formatter: function (val, opts) {\n    //     const isPositive = val >= 0;\n    //     return isPositive && type == \"progress\" ? `+${val}` : val.toString();\n    //   },\n    // },\n    yaxis: {\n      forceNiceScale: true,\n      labels: {\n        formatter: function (val) {\n          return Math.round(val);\n        }\n      }\n    }\n  });\n  useEffect(() => {\n    if (data) {\n      setdataSeries([{\n        name: name,\n        data: data\n      }]);\n    }\n  }, [data]);\n  useEffect(() => {\n    //setdataSeries(data);\n    //if (data) {\n    //const categories = data.map((item) => item);\n    setOption(prevState => ({\n      ...prevState,\n      title: {\n        text: title\n      },\n      xaxis: {\n        categories: xAxis\n      }\n    }));\n\n    //\n    //}\n  }, [xAxis]);\n  function eachBarClick(event, chartContext, config, value, popupX, popupY) {\n    console.log(popupSubtitle, dataSeries.subTitle);\n    const response = getHttp(\"employeeByEntityAndSubcat\", {\n      entity: value,\n      subcat: popupSubtitle\n    }).then(response => {\n      setPopupData(response);\n      setPopupPosition({\n        popupX: popupX,\n        popupY: popupY\n      });\n    }).catch(error => {\n      console.log(error);\n      // handle error\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bar-chart\",\n    onClick: () => setPopupData(null),\n    children: [/*#__PURE__*/_jsxDEV(Chart, {\n      options: option,\n      series: dataSeries,\n      type: \"bar\",\n      height: 350,\n      width: width ? 550 : \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), popupData &&\n    /*#__PURE__*/\n    // <div\n    //   className=\"popup\"\n    //   style={{ left: popupPosition.popupX, top: popupPosition.popupY }}\n    // >\n    //   {popupData.map((data, index) => (\n    //     <p key={index}>\n    //       {data.name}- {data.job}\n    //     </p>\n    //   ))}\n    //   <div className=\"popup-arrow\"></div>\n    // </div>\n    _jsxDEV(Popover, {\n      tablePopupData: popupData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: barRef,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(BarChart, \"li32QWueDEM/qXdDoP9IFyI6lSc=\");\n_c = BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chart","getHttp","Popover","BarChart","data","xAxis","title","name","width","subTitle","dataSeries","setdataSeries","popupSubtitle","setpopupSubtitle","popupPosition","setPopupPosition","barRef","popupData","setPopupData","option","setOption","legend","show","chart","events","dataPointSelection","event","chartContext","config","dataPointIndex","selectedXValue","xaxis","categories","barElement","current","rect","getBoundingClientRect","popupX","left","popupY","top","height","eachBarClick","text","style","fontSize","fontWeight","fontFamily","color","plotOptions","bar","columnWidth","colors","ranges","from","to","yaxis","forceNiceScale","labels","formatter","val","Math","round","prevState","value","console","log","response","entity","subcat","then","catch","error","display"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/barChart/BarChart.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { getHttp } from \"../../../service/APIRequest\";\nimport { Popover } from \"../../popup/Popover\";\nimport \"../Chart.css\";\nimport \"./BarChartPopup.css\";\n\ninterface BarChartInterface {\n  data;\n  xAxis;\n  title;\n  name?;\n  width?: any;\n  subTitle?: String;\n}\n\nexport const BarChart: React.FC<BarChartInterface> = ({\n  data,\n  xAxis,\n  title,\n  name,\n  width,\n  subTitle,\n}) => {\n  const [dataSeries, setdataSeries] = useState<any>([\n    {\n      subTitle: subTitle,\n      name: title, //will be displayed on the y-axis\n      data: data,\n    },\n  ]);\n\n  const [popupSubtitle, setpopupSubtitle] = useState(subTitle);\n  const [popupPosition, setPopupPosition] = useState(null);\n  const barRef = useRef(null);\n  const [popupData, setPopupData] = useState(null);\n  const [option, setOption] = useState<any>({\n    legend: {\n      show: false,\n    },\n    chart: {\n      events: {\n        dataPointSelection: function (event, chartContext, config) {\n          const dataPointIndex = config.dataPointIndex;\n\n          const selectedXValue = option.xaxis.categories[dataPointIndex];\n          const barElement = barRef.current;\n\n          const rect = barElement.getBoundingClientRect();\n          const popupX = rect.left + rect.width;\n          const popupY = rect.top + rect.height / 2;\n\n          eachBarClick(\n            event,\n            chartContext,\n            config,\n            selectedXValue,\n            popupX,\n            popupY\n          );\n        },\n      },\n    },\n    xaxis: {\n      categories: xAxis,\n    },\n    title: {\n      text: title,\n      style: {\n        fontSize: \"14px\",\n        fontWeight: \"bold\",\n        fontFamily: \"Bukra\",\n        color: \"black\",\n      },\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: 50,\n        colors: {\n          ranges: [\n            {\n              from: -100,\n              to: 0,\n              color: \"#b70849\",\n            },\n            {\n              from: 0,\n              to: 100,\n              color: \"#1034a6\",\n            },\n          ],\n        },\n      },\n    },\n    // dataLabels: {\n    //   enabled: true,\n    //   formatter: function (val, opts) {\n    //     const isPositive = val >= 0;\n    //     return isPositive && type == \"progress\" ? `+${val}` : val.toString();\n    //   },\n    // },\n    yaxis: {\n      forceNiceScale: true,\n      labels: {\n        formatter: function (val) {\n          return Math.round(val);\n        },\n      },\n    },\n  });\n\n  useEffect(() => {\n    if (data) {\n      setdataSeries([\n        {\n          name: name,\n          data: data,\n        },\n      ]);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    //setdataSeries(data);\n    //if (data) {\n    //const categories = data.map((item) => item);\n    setOption((prevState) => ({\n      ...prevState,\n      title: {\n        text: title,\n      },\n      xaxis: {\n        categories: xAxis,\n      },\n    }));\n\n    //\n    //}\n  }, [xAxis]);\n\n  function eachBarClick(event, chartContext, config, value, popupX, popupY) {\n    console.log(popupSubtitle, dataSeries.subTitle);\n    const response = getHttp(\"employeeByEntityAndSubcat\", {\n      entity: value,\n      subcat: popupSubtitle,\n    })\n      .then((response) => {\n        setPopupData(response);\n        setPopupPosition({ popupX: popupX, popupY: popupY });\n      })\n      .catch((error) => {\n        console.log(error);\n        // handle error\n      });\n  }\n\n  return (\n    <div className=\"bar-chart\" onClick={() => setPopupData(null)}>\n      <Chart\n        options={option}\n        series={dataSeries}\n        type=\"bar\"\n        height={350}\n        width={width ? 550 : \"100%\"}\n      />\n      {popupData && (\n        // <div\n        //   className=\"popup\"\n        //   style={{ left: popupPosition.popupX, top: popupPosition.popupY }}\n        // >\n        //   {popupData.map((data, index) => (\n        //     <p key={index}>\n        //       {data.name}- {data.job}\n        //     </p>\n        //   ))}\n        //   <div className=\"popup-arrow\"></div>\n        // </div>\n        <Popover tablePopupData={popupData} />\n      )}\n      <div ref={barRef} style={{ display: \"none\" }}></div>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,kBAAkB;AACpC,SAASC,OAAO,QAAQ,6BAA6B;AACrD,SAASC,OAAO,QAAQ,qBAAqB;AAC7C,OAAO,cAAc;AACrB,OAAO,qBAAqB;AAAC;AAW7B,OAAO,MAAMC,QAAqC,GAAG,QAO/C;EAAA;EAAA,IAPgD;IACpDC,IAAI;IACJC,KAAK;IACLC,KAAK;IACLC,IAAI;IACJC,KAAK;IACLC;EACF,CAAC;EACC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAM,CAChD;IACEU,QAAQ,EAAEA,QAAQ;IAClBF,IAAI,EAAED,KAAK;IAAE;IACbF,IAAI,EAAEA;EACR,CAAC,CACF,CAAC;EAEF,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAACU,QAAQ,CAAC;EAC5D,MAAM,CAACK,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAMiB,MAAM,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAM;IACxCsB,MAAM,EAAE;MACNC,IAAI,EAAE;IACR,CAAC;IACDC,KAAK,EAAE;MACLC,MAAM,EAAE;QACNC,kBAAkB,EAAE,UAAUC,KAAK,EAAEC,YAAY,EAAEC,MAAM,EAAE;UACzD,MAAMC,cAAc,GAAGD,MAAM,CAACC,cAAc;UAE5C,MAAMC,cAAc,GAAGX,MAAM,CAACY,KAAK,CAACC,UAAU,CAACH,cAAc,CAAC;UAC9D,MAAMI,UAAU,GAAGjB,MAAM,CAACkB,OAAO;UAEjC,MAAMC,IAAI,GAAGF,UAAU,CAACG,qBAAqB,EAAE;UAC/C,MAAMC,MAAM,GAAGF,IAAI,CAACG,IAAI,GAAGH,IAAI,CAAC3B,KAAK;UACrC,MAAM+B,MAAM,GAAGJ,IAAI,CAACK,GAAG,GAAGL,IAAI,CAACM,MAAM,GAAG,CAAC;UAEzCC,YAAY,CACVhB,KAAK,EACLC,YAAY,EACZC,MAAM,EACNE,cAAc,EACdO,MAAM,EACNE,MAAM,CACP;QACH;MACF;IACF,CAAC;IACDR,KAAK,EAAE;MACLC,UAAU,EAAE3B;IACd,CAAC;IACDC,KAAK,EAAE;MACLqC,IAAI,EAAErC,KAAK;MACXsC,KAAK,EAAE;QACLC,QAAQ,EAAE,MAAM;QAChBC,UAAU,EAAE,MAAM;QAClBC,UAAU,EAAE,OAAO;QACnBC,KAAK,EAAE;MACT;IACF,CAAC;IACDC,WAAW,EAAE;MACXC,GAAG,EAAE;QACHC,WAAW,EAAE,EAAE;QACfC,MAAM,EAAE;UACNC,MAAM,EAAE,CACN;YACEC,IAAI,EAAE,CAAC,GAAG;YACVC,EAAE,EAAE,CAAC;YACLP,KAAK,EAAE;UACT,CAAC,EACD;YACEM,IAAI,EAAE,CAAC;YACPC,EAAE,EAAE,GAAG;YACPP,KAAK,EAAE;UACT,CAAC;QAEL;MACF;IACF,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACAQ,KAAK,EAAE;MACLC,cAAc,EAAE,IAAI;MACpBC,MAAM,EAAE;QACNC,SAAS,EAAE,UAAUC,GAAG,EAAE;UACxB,OAAOC,IAAI,CAACC,KAAK,CAACF,GAAG,CAAC;QACxB;MACF;IACF;EACF,CAAC,CAAC;EAEF/D,SAAS,CAAC,MAAM;IACd,IAAIO,IAAI,EAAE;MACRO,aAAa,CAAC,CACZ;QACEJ,IAAI,EAAEA,IAAI;QACVH,IAAI,EAAEA;MACR,CAAC,CACF,CAAC;IACJ;EACF,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEVP,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACAuB,SAAS,CAAE2C,SAAS,KAAM;MACxB,GAAGA,SAAS;MACZzD,KAAK,EAAE;QACLqC,IAAI,EAAErC;MACR,CAAC;MACDyB,KAAK,EAAE;QACLC,UAAU,EAAE3B;MACd;IACF,CAAC,CAAC,CAAC;;IAEH;IACA;EACF,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,SAASqC,YAAY,CAAChB,KAAK,EAAEC,YAAY,EAAEC,MAAM,EAAEoC,KAAK,EAAE3B,MAAM,EAAEE,MAAM,EAAE;IACxE0B,OAAO,CAACC,GAAG,CAACtD,aAAa,EAAEF,UAAU,CAACD,QAAQ,CAAC;IAC/C,MAAM0D,QAAQ,GAAGlE,OAAO,CAAC,2BAA2B,EAAE;MACpDmE,MAAM,EAAEJ,KAAK;MACbK,MAAM,EAAEzD;IACV,CAAC,CAAC,CACC0D,IAAI,CAAEH,QAAQ,IAAK;MAClBjD,YAAY,CAACiD,QAAQ,CAAC;MACtBpD,gBAAgB,CAAC;QAAEsB,MAAM,EAAEA,MAAM;QAAEE,MAAM,EAAEA;MAAO,CAAC,CAAC;IACtD,CAAC,CAAC,CACDgC,KAAK,CAAEC,KAAK,IAAK;MAChBP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;MAClB;IACF,CAAC,CAAC;EACN;;EAEA,oBACE;IAAK,SAAS,EAAC,WAAW;IAAC,OAAO,EAAE,MAAMtD,YAAY,CAAC,IAAI,CAAE;IAAA,wBAC3D,QAAC,KAAK;MACJ,OAAO,EAAEC,MAAO;MAChB,MAAM,EAAET,UAAW;MACnB,IAAI,EAAC,KAAK;MACV,MAAM,EAAE,GAAI;MACZ,KAAK,EAAEF,KAAK,GAAG,GAAG,GAAG;IAAO;MAAA;MAAA;MAAA;IAAA,QAC5B,EACDS,SAAS;IAAA;IACR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAC,OAAO;MAAC,cAAc,EAAEA;IAAU;MAAA;MAAA;MAAA;IAAA,QACpC,eACD;MAAK,GAAG,EAAED,MAAO;MAAC,KAAK,EAAE;QAAEyD,OAAO,EAAE;MAAO;IAAE;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAChD;AAEV,CAAC;AAAC,GAtKWtE,QAAqC;AAAA,KAArCA,QAAqC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}