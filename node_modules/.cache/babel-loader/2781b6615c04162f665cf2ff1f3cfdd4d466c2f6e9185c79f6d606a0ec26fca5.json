{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/categoryList/CategoryList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n//import Table1 from \"../../components/compass/Table1\";\nimport Doughnut from \"../../components/Graph/donutChart/Doughnut\";\n//import Doughnut from \"../Graph/donutChart/Doughnut\";\n\nimport { getHttp } from \"../../service/APIRequest\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryList = _ref => {\n  _s();\n  var _subcategoryLevelList;\n  let {\n    categoryClick\n  } = _ref;\n  const [mainCategoryListByCount, setMainCategoryListByCount] = useState([]);\n  const [subcategoryLevelList1, setsubcategoryLevelList1] = useState([]);\n  const [subcategoryLevelList2, setsubcategoryLevelList2] = useState([]);\n  const [subcategoryLevelList3, setsubcategoryLevelList3] = useState([]);\n  const [overAllCountOfEmpl, setoverAllCountOfEmpl] = useState(null);\n  useEffect(() => {\n    fetchCatagoryList();\n  }, []);\n  var levelArray = new Array(9).fill(0);\n  const fetchCatagoryList = async param => {\n    const response = await getHttp(\"count-by-category\");\n    setMainCategoryListByCount(response);\n    fetchCatagoryLevelList(1);\n  };\n  const goToCategoryDetailsPage = (id, item) => {\n    categoryClick(id, item);\n  };\n  var count = 0;\n  const fetchCatagoryLevelList = param => {\n    const response = getHttp(\"categories/\" + param + \"/subcategories\").then(response => {\n      //console.log(response);\n      if (param == 1) {\n        setsubcategoryLevelList1(response); // handle success console.log(overAllCountOfEmpl);\n        // setoverAllCountOfEmpl(overAllCountOfEmpl + response[0].grantTotalEmp);\n        //setoverAllCountOfEmpl(response[0].grantTotalEmp);\n        count = count + response[0].grantTotalEmp;\n        fetchCatagoryLevelList(2);\n      } else if (param == 2) {\n        setsubcategoryLevelList2(response);\n        // console.log(overAllCountOfEmpl);\n        // setoverAllCountOfEmpl(\n        //   (prevCount) => prevCount + response[0].grantTotalEmp\n        // );\n        count = count + response[0].grantTotalEmp;\n        fetchCatagoryLevelList(3);\n      } else {\n        setsubcategoryLevelList3(response);\n        // console.log(overAllCountOfEmpl);\n        // setoverAllCountOfEmpl(\n        //   (prevCount) => prevCount + response[0].grantTotalEmp\n        // );\n        count = count + response[0].grantTotalEmp;\n        setoverAllCountOfEmpl(count);\n      }\n    }).catch(error => {\n      console.log(error);\n      // handle error\n    });\n  };\n\n  const totalCount = subcategoryLevelList1.reduce((sum, item) => sum + item.count, 0) + subcategoryLevelList2.reduce((sum, item) => sum + item.count, 0) + subcategoryLevelList3.reduce((sum, item) => sum + item.count, 0);\n\n  //console.log(totalCount);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-heading\",\n      children: \"Dubai Digital Skills\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"seperate-employee-counter\",\n      children: mainCategoryListByCount === null || mainCategoryListByCount === void 0 ? void 0 : mainCategoryListByCount.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"each-counter\",\n        onClick: () => goToCategoryDetailsPage(item.id, item),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"counter-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"# of employees \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"count\",\n            children: [\" \", item === null || item === void 0 ? void 0 : item.count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(Doughnut, {\n        details: mainCategoryListByCount,\n        heading: \"Dubai Skills %\",\n        showLegend: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"each-column-border\",\n              children: \"Category name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"each-column-border\",\n              children: \"Subcategory name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), levelArray.map((item, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"each-column-border\",\n              children: [\"Level \", index + 1]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"each-column-border\",\n              children: [\"# of employees( \", (_subcategoryLevelList = subcategoryLevelList1[0]) === null || _subcategoryLevelList === void 0 ? void 0 : _subcategoryLevelList.grantTotalEmp, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"each-column-border\",\n              children: \"Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"each-column-border\",\n            rowSpan: subcategoryLevelList1.length + 1,\n            children: \"Data Analytics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), subcategoryLevelList1 === null || subcategoryLevelList1 === void 0 ? void 0 : subcategoryLevelList1.map((item, index) =>\n          /*#__PURE__*/\n          // {catOne?.map((item, index) => (\n          _jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"each-column-border\",\n              children: item.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), item.levelCounts.map((count, num) => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"each-column-border\",\n              children: count == 0 ? \"\" : count\n            }, num, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"each-column-border\",\n              children: item.count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), index === 0 ? /*#__PURE__*/_jsxDEV(\"td\", {\n              rowSpan: subcategoryLevelList1.length,\n              className: \"each-column-border\",\n              children: subcategoryLevelList1.reduce((sum, item) => sum + item.count, 0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this) : null]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"each-column-border\",\n            rowSpan: subcategoryLevelList3.length + 1,\n            children: \"Cyber security\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), subcategoryLevelList3 === null || subcategoryLevelList3 === void 0 ? void 0 : subcategoryLevelList3.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: index % 2 === 0 ? \"even-row\" : \"odd-row\"\n            // className={selectedRow === index ? \"highlight\" : \"\"}\n            // onClick={() => clickedOnSubcategory(item, index)}\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"each-column-border\",\n              children: item.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), item.levelCounts.map((count, num) => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"each-column-border\",\n              children: count == 0 ? \"\" : count\n            }, num, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"each-column-border\",\n              children: item.count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), index === 0 ? /*#__PURE__*/_jsxDEV(\"td\", {\n              rowSpan: subcategoryLevelList3.length,\n              className: \"each-column-border\",\n              children: subcategoryLevelList3.reduce((sum, item) => sum + item.count, 0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 19\n            }, this) : null]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"each-column-border\",\n            rowSpan: subcategoryLevelList2.length + 1,\n            children: \"ICT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), subcategoryLevelList2 === null || subcategoryLevelList2 === void 0 ? void 0 : subcategoryLevelList2.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: index % 2 === 0 ? \"even-row\" : \"odd-row\"\n            // className={selectedRow === index ? \"highlight\" : \"\"}\n            // onClick={() => clickedOnSubcategory(item, index)}\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"each-column-border\",\n              children: item.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), item.levelCounts.map((count, num) => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"each-column-border\",\n              children: count == 0 ? \"\" : count\n            }, num, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"each-column-border\",\n              children: item.count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), index === 0 ? /*#__PURE__*/_jsxDEV(\"td\", {\n              rowSpan: subcategoryLevelList2.length,\n              className: \"each-column-border\",\n              children: subcategoryLevelList2.reduce((sum, item) => sum + item.count, 0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this) : null]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"each-column-border\",\n              colSpan: 11\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"each-column-border\",\n              children: \"grandTotal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"each-column-border\",\n              colSpan: 4,\n              children: totalCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(CategoryList, \"NBFndC7qXu9hQm7RSN5V3wZdCuc=\");\n_c = CategoryList;\nexport default CategoryList;\nvar _c;\n$RefreshReg$(_c, \"CategoryList\");","map":{"version":3,"names":["React","useEffect","useState","Doughnut","getHttp","CategoryList","categoryClick","mainCategoryListByCount","setMainCategoryListByCount","subcategoryLevelList1","setsubcategoryLevelList1","subcategoryLevelList2","setsubcategoryLevelList2","subcategoryLevelList3","setsubcategoryLevelList3","overAllCountOfEmpl","setoverAllCountOfEmpl","fetchCatagoryList","levelArray","Array","fill","param","response","fetchCatagoryLevelList","goToCategoryDetailsPage","id","item","count","then","grantTotalEmp","catch","error","console","log","totalCount","reduce","sum","map","index","category","length","levelCounts","num"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/categoryList/CategoryList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n//import Table1 from \"../../components/compass/Table1\";\nimport Doughnut from \"../../components/Graph/donutChart/Doughnut\";\n//import Doughnut from \"../Graph/donutChart/Doughnut\";\n\nimport { getHttp } from \"../../service/APIRequest\";\nimport { catOne, catThree, catTwo } from \"../../service/Constants\";\n\nconst CategoryList = ({ categoryClick }) => {\n  const [mainCategoryListByCount, setMainCategoryListByCount] = useState<any>(\n    []\n  );\n  const [subcategoryLevelList1, setsubcategoryLevelList1] = useState([]);\n  const [subcategoryLevelList2, setsubcategoryLevelList2] = useState([]);\n  const [subcategoryLevelList3, setsubcategoryLevelList3] = useState([]);\n  const [overAllCountOfEmpl, setoverAllCountOfEmpl] = useState(null);\n\n  useEffect(() => {\n    fetchCatagoryList();\n  }, []);\n  var levelArray = new Array(9).fill(0);\n\n  const fetchCatagoryList = async (param?) => {\n    const response = await getHttp(\"count-by-category\");\n    setMainCategoryListByCount(response);\n    fetchCatagoryLevelList(1);\n  };\n\n  const goToCategoryDetailsPage = (id, item?) => {\n    categoryClick(id, item);\n  };\n\n  var count = 0;\n\n  const fetchCatagoryLevelList = (param?) => {\n    const response = getHttp(\"categories/\" + param + \"/subcategories\")\n      .then((response) => {\n        //console.log(response);\n        if (param == 1) {\n          setsubcategoryLevelList1(response); // handle success console.log(overAllCountOfEmpl);\n          // setoverAllCountOfEmpl(overAllCountOfEmpl + response[0].grantTotalEmp);\n          //setoverAllCountOfEmpl(response[0].grantTotalEmp);\n          count = count + response[0].grantTotalEmp;\n          fetchCatagoryLevelList(2);\n        } else if (param == 2) {\n          setsubcategoryLevelList2(response);\n          // console.log(overAllCountOfEmpl);\n          // setoverAllCountOfEmpl(\n          //   (prevCount) => prevCount + response[0].grantTotalEmp\n          // );\n          count = count + response[0].grantTotalEmp;\n          fetchCatagoryLevelList(3);\n        } else {\n          setsubcategoryLevelList3(response);\n          // console.log(overAllCountOfEmpl);\n          // setoverAllCountOfEmpl(\n          //   (prevCount) => prevCount + response[0].grantTotalEmp\n          // );\n          count = count + response[0].grantTotalEmp;\n          setoverAllCountOfEmpl(count);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        // handle error\n      });\n  };\n\n  const totalCount =\n    subcategoryLevelList1.reduce((sum, item) => sum + item.count, 0) +\n    subcategoryLevelList2.reduce((sum, item) => sum + item.count, 0) +\n    subcategoryLevelList3.reduce((sum, item) => sum + item.count, 0);\n\n  //console.log(totalCount);\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"main-heading\">Dubai Digital Skills</div>\n      <div className=\"seperate-employee-counter\">\n        {mainCategoryListByCount?.map((item, index) => (\n          <div\n            className=\"each-counter\"\n            key={index}\n            onClick={() => goToCategoryDetailsPage(item.id, item)}\n          >\n            <div>{item.category}</div>\n            <div className=\"counter-details\">\n              <div># of employees </div>\n              <div className=\"count\"> {item?.count}</div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"content\">\n        <Doughnut\n          details={mainCategoryListByCount}\n          heading=\"Dubai Skills %\"\n          showLegend={true}\n        />\n      </div>\n      <div className=\"list-container\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th className=\"each-column-border\">Category name</th>\n              <th className=\"each-column-border\">Subcategory name</th>\n\n              {levelArray.map((item, index) => (\n                <th key={index} className=\"each-column-border\">\n                  Level {index + 1}\n                </th>\n              ))}\n              <th className=\"each-column-border\">\n                # of employees( {subcategoryLevelList1[0]?.grantTotalEmp})\n              </th>\n              <th className=\"each-column-border\">Group</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\" \"}\n            <td\n              className=\"each-column-border\"\n              rowSpan={subcategoryLevelList1.length + 1}\n            >\n              Data Analytics\n            </td>\n            {subcategoryLevelList1?.map((item, index) => (\n              // {catOne?.map((item, index) => (\n              <tr\n                key={index}\n                // className={index % 2 === 0 ? \"even-row\" : \"odd-row\"}\n                // className={selectedRow === index ? \"highlight\" : \"\"}\n                // onClick={() => clickedOnSubcategory(item, index)}\n              >\n                <td className=\"each-column-border\">{item.category}</td>\n                {item.levelCounts.map((count, num) => (\n                  <td key={num} className=\"each-column-border\">\n                    {count == 0 ? \"\" : count}\n                  </td>\n                ))}\n                <td className=\"each-column-border\">{item.count}</td>\n                {index === 0 ? (\n                  <td\n                    rowSpan={subcategoryLevelList1.length}\n                    className=\"each-column-border\"\n                  >\n                    {subcategoryLevelList1.reduce(\n                      (sum, item) => sum + item.count,\n                      0\n                    )}\n                    {/* {catOne.reduce((sum, item) => sum + item.count, 0)} */}\n                  </td>\n                ) : null}\n              </tr>\n            ))}\n            <td\n              className=\"each-column-border\"\n              rowSpan={subcategoryLevelList3.length + 1}\n            >\n              Cyber security\n            </td>\n            {/* {catThree?.map((item, index) => ( */}\n            {subcategoryLevelList3?.map((item, index) => (\n              <tr\n                key={index}\n                className={index % 2 === 0 ? \"even-row\" : \"odd-row\"}\n                // className={selectedRow === index ? \"highlight\" : \"\"}\n                // onClick={() => clickedOnSubcategory(item, index)}\n              >\n                <td className=\"each-column-border\">{item.category}</td>\n                {item.levelCounts.map((count, num) => (\n                  <td key={num} className=\"each-column-border\">\n                    {count == 0 ? \"\" : count}\n                  </td>\n                ))}\n                <td className=\"each-column-border\">{item.count}</td>\n                {index === 0 ? (\n                  <td\n                    rowSpan={subcategoryLevelList3.length}\n                    className=\"each-column-border\"\n                  >\n                    {/* {catThree.reduce((sum, item) => sum + item.count, 0)} */}\n                    {subcategoryLevelList3.reduce(\n                      (sum, item) => sum + item.count,\n                      0\n                    )}\n                  </td>\n                ) : null}\n              </tr>\n            ))}\n            <td\n              className=\"each-column-border\"\n              rowSpan={subcategoryLevelList2.length + 1}\n            >\n              ICT\n            </td>\n            {/* {catTwo?.map((item, index) => ( */}\n            {subcategoryLevelList2?.map((item, index) => (\n              <tr\n                key={index}\n                className={index % 2 === 0 ? \"even-row\" : \"odd-row\"}\n                // className={selectedRow === index ? \"highlight\" : \"\"}\n                // onClick={() => clickedOnSubcategory(item, index)}\n              >\n                <td className=\"each-column-border\">{item.category}</td>\n                {item.levelCounts.map((count, num) => (\n                  <td key={num} className=\"each-column-border\">\n                    {count == 0 ? \"\" : count}\n                  </td>\n                ))}\n                <td className=\"each-column-border\">{item.count}</td>\n                {index === 0 ? (\n                  <td\n                    rowSpan={subcategoryLevelList2.length}\n                    className=\"each-column-border\"\n                  >\n                    {/* {catTwo.reduce((sum, item) => sum + item.count, 0)} */}\n                    {subcategoryLevelList2.reduce(\n                      (sum, item) => sum + item.count,\n                      0\n                    )}\n                  </td>\n                ) : null}\n\n                {/* Render grand total cell only for the last row */}\n                {/* Render cell only for the last row and last column */}\n              </tr>\n            ))}\n            <tr>\n              {/* <td className=\"each-column-border\" colSpan={5}></td> */}\n              <td className=\"each-column-border\" colSpan={11}></td>\n              <td className=\"each-column-border\">{\"grandTotal\"}</td>\n              <td className=\"each-column-border\" colSpan={4}>\n                {totalCount}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        {}\n      </div>\n    </div>\n  );\n};\n\nexport default CategoryList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}