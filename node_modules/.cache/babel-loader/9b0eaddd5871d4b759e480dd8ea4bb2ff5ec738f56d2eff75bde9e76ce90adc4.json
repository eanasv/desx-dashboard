{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/barChart/BarChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { getHttp } from \"../../../service/APIRequest\";\nimport \"../Chart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BarChart = _ref => {\n  _s();\n  let {\n    data,\n    xAxis,\n    title,\n    name,\n    width,\n    subTitle\n  } = _ref;\n  const [dataSeries, setdataSeries] = useState([{\n    name: title,\n    //will be displayed on the y-axis\n    data: data\n  }]);\n  //const [dataSeries, setDataSeries] = useState(data);\n  const [popupData, setPopupData] = useState(null);\n  const [option, setOption] = useState({\n    legend: {\n      show: false\n    },\n    chart: {\n      events: {\n        dataPointSelection: function (event, chartContext, config) {\n          const dataPointIndex = config.dataPointIndex;\n          const selectedXValue = option.xaxis.categories[dataPointIndex];\n          eachBarClick(event, chartContext, config, selectedXValue);\n        }\n      }\n    },\n    xaxis: {\n      categories: xAxis\n    },\n    title: {\n      text: title,\n      style: {\n        fontSize: \"14px\",\n        fontWeight: \"bold\",\n        fontFamily: \"Bukra\",\n        color: \"black\"\n      }\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: 50,\n        colors: {\n          ranges: [{\n            from: -100,\n            to: 0,\n            color: \"#b70849\"\n          }, {\n            from: 0,\n            to: 100,\n            color: \"#1034a6\"\n          }]\n        }\n      }\n    },\n    // dataLabels: {\n    //   enabled: true,\n    //   formatter: function (val, opts) {\n    //     const isPositive = val >= 0;\n    //     return isPositive && type == \"progress\" ? `+${val}` : val.toString();\n    //   },\n    // },\n    yaxis: {\n      forceNiceScale: true,\n      labels: {\n        formatter: function (val) {\n          return Math.round(val);\n        }\n      }\n    }\n  });\n  useEffect(() => {\n    if (data) {\n      setdataSeries([{\n        name: name,\n        data: data\n      }]);\n    }\n  }, [data]);\n  useEffect(() => {\n    //setdataSeries(data);\n    //if (data) {\n    //const categories = data.map((item) => item);\n    setOption(prevState => ({\n      ...prevState,\n      title: {\n        text: title\n      },\n      xaxis: {\n        categories: xAxis\n      }\n    }));\n\n    //\n    //}\n  }, [xAxis]);\n  function eachBarClick(event, chartContext, config, value) {\n    console.log(value, subTitle);\n    const response = getHttp(\"employeeByEntityAndSubcat\", {\n      entity: value,\n      subcat: subTitle\n    }).then(response => {\n      console.log(response);\n      setPopupData(response);\n    }).catch(error => {\n      console.log(error);\n      // handle error\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bar-chart\",\n    children: [/*#__PURE__*/_jsxDEV(Chart, {\n      options: option,\n      series: dataSeries,\n      type: \"bar\",\n      height: 350,\n      width: width ? 550 : \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), popupData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      style: {\n        left: popupData.barCenterX,\n        top: popupData.barY\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", popupData.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Job: \", popupData.job]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(BarChart, \"F17OesRtiGWPMGsDuoPsl5WWtGM=\");\n_c = BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useEffect","useState","Chart","getHttp","BarChart","data","xAxis","title","name","width","subTitle","dataSeries","setdataSeries","popupData","setPopupData","option","setOption","legend","show","chart","events","dataPointSelection","event","chartContext","config","dataPointIndex","selectedXValue","xaxis","categories","eachBarClick","text","style","fontSize","fontWeight","fontFamily","color","plotOptions","bar","columnWidth","colors","ranges","from","to","yaxis","forceNiceScale","labels","formatter","val","Math","round","prevState","value","console","log","response","entity","subcat","then","catch","error","left","barCenterX","top","barY","job"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/barChart/BarChart.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { getHttp } from \"../../../service/APIRequest\";\nimport \"../Chart.css\";\n\ninterface BarChartInterface {\n  data;\n  xAxis;\n  title;\n  name?;\n  width?: any;\n  subTitle?: String;\n}\n\nexport const BarChart: React.FC<BarChartInterface> = ({\n  data,\n  xAxis,\n  title,\n  name,\n  width,\n  subTitle,\n}) => {\n  const [dataSeries, setdataSeries] = useState<any>([\n    {\n      name: title, //will be displayed on the y-axis\n      data: data,\n    },\n  ]);\n  //const [dataSeries, setDataSeries] = useState(data);\n  const [popupData, setPopupData] = useState(null);\n  const [option, setOption] = useState<any>({\n    legend: {\n      show: false,\n    },\n    chart: {\n      events: {\n        dataPointSelection: function (event, chartContext, config) {\n          const dataPointIndex = config.dataPointIndex;\n          const selectedXValue = option.xaxis.categories[dataPointIndex];\n          eachBarClick(event, chartContext, config, selectedXValue);\n        },\n      },\n    },\n    xaxis: {\n      categories: xAxis,\n    },\n    title: {\n      text: title,\n      style: {\n        fontSize: \"14px\",\n        fontWeight: \"bold\",\n        fontFamily: \"Bukra\",\n        color: \"black\",\n      },\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: 50,\n        colors: {\n          ranges: [\n            {\n              from: -100,\n              to: 0,\n              color: \"#b70849\",\n            },\n            {\n              from: 0,\n              to: 100,\n              color: \"#1034a6\",\n            },\n          ],\n        },\n      },\n    },\n    // dataLabels: {\n    //   enabled: true,\n    //   formatter: function (val, opts) {\n    //     const isPositive = val >= 0;\n    //     return isPositive && type == \"progress\" ? `+${val}` : val.toString();\n    //   },\n    // },\n    yaxis: {\n      forceNiceScale: true,\n      labels: {\n        formatter: function (val) {\n          return Math.round(val);\n        },\n      },\n    },\n  });\n\n  useEffect(() => {\n    if (data) {\n      setdataSeries([\n        {\n          name: name,\n          data: data,\n        },\n      ]);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    //setdataSeries(data);\n    //if (data) {\n    //const categories = data.map((item) => item);\n    setOption((prevState) => ({\n      ...prevState,\n      title: {\n        text: title,\n      },\n      xaxis: {\n        categories: xAxis,\n      },\n    }));\n\n    //\n    //}\n  }, [xAxis]);\n\n  function eachBarClick(event, chartContext, config, value) {\n    console.log(value, subTitle);\n    const response = getHttp(\"employeeByEntityAndSubcat\", {\n      entity: value,\n      subcat: subTitle,\n    })\n      .then((response) => {\n        console.log(response);\n        setPopupData(response);\n      })\n      .catch((error) => {\n        console.log(error);\n        // handle error\n      });\n  }\n\n  return (\n    <div className=\"bar-chart\">\n      <Chart\n        options={option}\n        series={dataSeries}\n        type=\"bar\"\n        height={350}\n        width={width ? 550 : \"100%\"}\n      />\n      {popupData && (\n        <div\n          className=\"popup\"\n          style={{ left: popupData.barCenterX, top: popupData.barY }}\n        >\n          <p>Name: {popupData.name}</p>\n          <p>Job: {popupData.job}</p>\n          <div className=\"popup-arrow\"></div>\n        </div>\n      )}\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,kBAAkB;AACpC,SAASC,OAAO,QAAQ,6BAA6B;AACrD,OAAO,cAAc;AAAC;AAWtB,OAAO,MAAMC,QAAqC,GAAG,QAO/C;EAAA;EAAA,IAPgD;IACpDC,IAAI;IACJC,KAAK;IACLC,KAAK;IACLC,IAAI;IACJC,KAAK;IACLC;EACF,CAAC;EACC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAM,CAChD;IACEO,IAAI,EAAED,KAAK;IAAE;IACbF,IAAI,EAAEA;EACR,CAAC,CACF,CAAC;EACF;EACA,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAM;IACxCgB,MAAM,EAAE;MACNC,IAAI,EAAE;IACR,CAAC;IACDC,KAAK,EAAE;MACLC,MAAM,EAAE;QACNC,kBAAkB,EAAE,UAAUC,KAAK,EAAEC,YAAY,EAAEC,MAAM,EAAE;UACzD,MAAMC,cAAc,GAAGD,MAAM,CAACC,cAAc;UAC5C,MAAMC,cAAc,GAAGX,MAAM,CAACY,KAAK,CAACC,UAAU,CAACH,cAAc,CAAC;UAC9DI,YAAY,CAACP,KAAK,EAAEC,YAAY,EAAEC,MAAM,EAAEE,cAAc,CAAC;QAC3D;MACF;IACF,CAAC;IACDC,KAAK,EAAE;MACLC,UAAU,EAAEtB;IACd,CAAC;IACDC,KAAK,EAAE;MACLuB,IAAI,EAAEvB,KAAK;MACXwB,KAAK,EAAE;QACLC,QAAQ,EAAE,MAAM;QAChBC,UAAU,EAAE,MAAM;QAClBC,UAAU,EAAE,OAAO;QACnBC,KAAK,EAAE;MACT;IACF,CAAC;IACDC,WAAW,EAAE;MACXC,GAAG,EAAE;QACHC,WAAW,EAAE,EAAE;QACfC,MAAM,EAAE;UACNC,MAAM,EAAE,CACN;YACEC,IAAI,EAAE,CAAC,GAAG;YACVC,EAAE,EAAE,CAAC;YACLP,KAAK,EAAE;UACT,CAAC,EACD;YACEM,IAAI,EAAE,CAAC;YACPC,EAAE,EAAE,GAAG;YACPP,KAAK,EAAE;UACT,CAAC;QAEL;MACF;IACF,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACAQ,KAAK,EAAE;MACLC,cAAc,EAAE,IAAI;MACpBC,MAAM,EAAE;QACNC,SAAS,EAAE,UAAUC,GAAG,EAAE;UACxB,OAAOC,IAAI,CAACC,KAAK,CAACF,GAAG,CAAC;QACxB;MACF;IACF;EACF,CAAC,CAAC;EAEF/C,SAAS,CAAC,MAAM;IACd,IAAIK,IAAI,EAAE;MACRO,aAAa,CAAC,CACZ;QACEJ,IAAI,EAAEA,IAAI;QACVH,IAAI,EAAEA;MACR,CAAC,CACF,CAAC;IACJ;EACF,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEVL,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACAgB,SAAS,CAAEkC,SAAS,KAAM;MACxB,GAAGA,SAAS;MACZ3C,KAAK,EAAE;QACLuB,IAAI,EAAEvB;MACR,CAAC;MACDoB,KAAK,EAAE;QACLC,UAAU,EAAEtB;MACd;IACF,CAAC,CAAC,CAAC;;IAEH;IACA;EACF,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,SAASuB,YAAY,CAACP,KAAK,EAAEC,YAAY,EAAEC,MAAM,EAAE2B,KAAK,EAAE;IACxDC,OAAO,CAACC,GAAG,CAACF,KAAK,EAAEzC,QAAQ,CAAC;IAC5B,MAAM4C,QAAQ,GAAGnD,OAAO,CAAC,2BAA2B,EAAE;MACpDoD,MAAM,EAAEJ,KAAK;MACbK,MAAM,EAAE9C;IACV,CAAC,CAAC,CACC+C,IAAI,CAAEH,QAAQ,IAAK;MAClBF,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;MACrBxC,YAAY,CAACwC,QAAQ,CAAC;IACxB,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAK;MAChBP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;MAClB;IACF,CAAC,CAAC;EACN;;EAEA,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB,QAAC,KAAK;MACJ,OAAO,EAAE5C,MAAO;MAChB,MAAM,EAAEJ,UAAW;MACnB,IAAI,EAAC,KAAK;MACV,MAAM,EAAE,GAAI;MACZ,KAAK,EAAEF,KAAK,GAAG,GAAG,GAAG;IAAO;MAAA;MAAA;MAAA;IAAA,QAC5B,EACDI,SAAS,iBACR;MACE,SAAS,EAAC,OAAO;MACjB,KAAK,EAAE;QAAE+C,IAAI,EAAE/C,SAAS,CAACgD,UAAU;QAAEC,GAAG,EAAEjD,SAAS,CAACkD;MAAK,CAAE;MAAA,wBAE3D;QAAA,WAAG,QAAM,EAAClD,SAAS,CAACL,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eAC7B;QAAA,WAAG,OAAK,EAACK,SAAS,CAACmD,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eAC3B;QAAK,SAAS,EAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAEtC;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GA/IW5D,QAAqC;AAAA,KAArCA,QAAqC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}