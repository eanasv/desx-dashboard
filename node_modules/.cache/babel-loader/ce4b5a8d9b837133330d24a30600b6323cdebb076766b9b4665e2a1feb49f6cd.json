{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/createUser/UserCreation.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { showErrorMesaage } from \"../../redux/features/errorSlice\";\nimport Store from \"../../redux/Store\";\nimport { getHttp, postHttp } from \"../../service/APIRequest\";\nimport { userapi } from \"../../service/Config\";\nimport { userTypes } from \"../../service/Constants\";\nimport \"./UserCreation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserCreation = () => {\n  _s();\n  const [userData, setUserData] = useState({\n    name: \"\",\n    username: \"\",\n    email: \"\",\n    role: \"main_admin\",\n    entity: \"\",\n    password: \"\"\n  });\n  const [entityList, setEntityList] = useState();\n  const [flag, setflag] = useState(true);\n  const [userType, setUserType] = useState(\"admin\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const endpoint = userapi + \"addUser\";\n    postHttp(endpoint, userData).then(response => {\n      console.log(response);\n      if (response.status >= 200 && response.status < 300) {\n        setUserData({\n          name: \"\",\n          username: \"\",\n          email: \"\",\n          role: \"\",\n          entity: \"\",\n          password: \"\"\n        });\n        Store.dispatch(showErrorMesaage(\"User created successfully\"));\n        setflag(!flag);\n      }\n    }).catch(error => {\n      console.log(error);\n      // Store.dispatch(showErrorMesaage(error.error));\n      // //setresponseText(error);\n      // clearFileInput();\n      // handle error\n    });\n  };\n\n  const handleNameChange = event => {\n    const inputValue = event.target.value;\n    const formattedName = inputValue.toLowerCase().replace(/\\s+/g, \".\");\n    console.log(formattedName);\n    setUserData({\n      ...userData,\n      name: event.target.value,\n      username: formattedName\n    });\n    //setName(inputValue);\n\n    //setUsername(formattedName);\n  };\n\n  const handleUserTypeChange = event => {\n    setUserType(event.target.value);\n    setUserData({\n      ...userData,\n      role: event.target.value\n    });\n    if (event.target.value == \"user\") {\n      getEntityList();\n    }\n  };\n  const getEntityList = async () => {\n    const response = await getHttp(\"entity/getNameDetails\"); //\n    await setEntityList(response);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-user-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-creation-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Creation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"create-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"display-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"align-center\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Name\",\n                value: userData.name,\n                onChange: e =>\n                //setUserData({ ...userData, name: e.target.value })\n                handleNameChange(e),\n                className: \"button\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"display-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"align-center\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"USERNAME\",\n                value: userData.username\n                //   style={{ textTransform: \"lowercase\" }}\n                // onChange={(e) =>\n                //setUserData({ ...userData, username: e.target.value })\n                // }\n                ,\n                readOnly: true,\n                className: \"button lowercase\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"display-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"align-center\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"Email\",\n                value: userData.email,\n                onChange: e => setUserData({\n                  ...userData,\n                  email: e.target.value\n                }),\n                className: \"button\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"display-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"align-center\",\n                children: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"new-user button\",\n                value: userType,\n                onChange: handleUserTypeChange,\n                children: userTypes.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: item.label,\n                  children: item.name\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(UserCreation, \"twMC1s14nQbWgO1wVq9SBhrBWC4=\");\n_c = UserCreation;\nvar _c;\n$RefreshReg$(_c, \"UserCreation\");","map":{"version":3,"names":["React","useState","showErrorMesaage","Store","getHttp","postHttp","userapi","userTypes","UserCreation","userData","setUserData","name","username","email","role","entity","password","entityList","setEntityList","flag","setflag","userType","setUserType","handleSubmit","e","preventDefault","endpoint","then","response","console","log","status","dispatch","catch","error","handleNameChange","event","inputValue","target","value","formattedName","toLowerCase","replace","handleUserTypeChange","getEntityList","map","item","index","label"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/createUser/UserCreation.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport DropDown from \"../../components/dropDown/DropDown\";\nimport ErrorComponent from \"../../components/errorComponent/ErrorComponent\";\nimport { UserList } from \"../../components/userList/UserList\";\nimport { showErrorMesaage } from \"../../redux/features/errorSlice\";\nimport Store from \"../../redux/Store\";\nimport { getHttp, postHttp } from \"../../service/APIRequest\";\nimport { userapi } from \"../../service/Config\";\nimport { userTypes } from \"../../service/Constants\";\nimport \"./UserCreation.css\";\n\nexport const UserCreation = () => {\n  const [userData, setUserData] = useState({\n    name: \"\",\n    username: \"\",\n    email: \"\",\n    role: \"main_admin\",\n    entity: \"\",\n    password: \"\",\n  });\n\n  const [entityList, setEntityList] = useState<any>();\n  const [flag, setflag] = useState(true);\n  const [userType, setUserType] = useState(\"admin\");\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const endpoint = userapi + \"addUser\";\n    postHttp(endpoint, userData)\n      .then((response) => {\n        console.log(response);\n\n        if (response.status >= 200 && response.status < 300) {\n          setUserData({\n            name: \"\",\n            username: \"\",\n            email: \"\",\n            role: \"\",\n            entity: \"\",\n            password: \"\",\n          });\n          Store.dispatch(showErrorMesaage(\"User created successfully\"));\n          setflag(!flag);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        // Store.dispatch(showErrorMesaage(error.error));\n        // //setresponseText(error);\n        // clearFileInput();\n        // handle error\n      });\n  };\n\n  const handleNameChange = (event) => {\n    const inputValue = event.target.value;\n    const formattedName = inputValue.toLowerCase().replace(/\\s+/g, \".\");\n    console.log(formattedName);\n    setUserData({\n      ...userData,\n      name: event.target.value,\n      username: formattedName,\n    });\n    //setName(inputValue);\n\n    //setUsername(formattedName);\n  };\n\n  const handleUserTypeChange = (event) => {\n    setUserType(event.target.value);\n    setUserData({ ...userData, role: event.target.value });\n    if (event.target.value == \"user\") {\n      getEntityList();\n    }\n  };\n\n  const getEntityList = async () => {\n    const response = await getHttp(\"entity/getNameDetails\"); //\n    await setEntityList(response);\n  };\n\n  return (\n    <div className=\"create-user-container\">\n      <div className=\"user-creation-form\">\n        <h2>User Creation</h2>\n        <form onSubmit={handleSubmit} className=\"create-container\">\n          {/* <div className=\"form-group\">\n            <div className=\"display-flex\">\n              <div className=\"align-center\">Name</div>\n              <input\n                type=\"text\"\n                placeholder=\"Name\"\n                value={userData.name}\n                onChange={(e) =>\n                  //setUserData({ ...userData, name: e.target.value })\n                  handleNameChange(e)\n                }\n                className=\"button\"\n                required\n              />\n            </div>\n            <div className=\"display-flex\">\n              <div className=\"align-center\">Username</div>\n              <input\n                type=\"text\"\n                placeholder=\"USERNAME\"\n                value={userData.username}\n                //   style={{ textTransform: \"lowercase\" }}\n                // onChange={(e) =>\n                //setUserData({ ...userData, username: e.target.value })\n                // }\n                readOnly\n                className=\"button lowercase\"\n              />\n            </div>\n            <div className=\"display-flex\">\n              <div className=\"align-center\">Email</div>\n              <input\n                type=\"email\"\n                placeholder=\"Email\"\n                value={userData.email}\n                onChange={(e) =>\n                  setUserData({ ...userData, email: e.target.value })\n                }\n                className=\"button\"\n                required\n              />\n            </div>\n            <div className=\"display-flex\">\n              <div className=\"align-center\">Role</div>\n             \n              <select\n                className=\"new-user button\"\n                value={userType}\n                onChange={handleUserTypeChange}\n              >\n                {userTypes.map((item, index) => (\n                  <option key={index} value={item.label}>\n                    {item.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n            {userType === \"user\" && (\n              <div className=\"display-flex\">\n                <div className=\"align-center\">Entity</div>\n                <select\n                  className=\"new-user button\"\n                  value={userData.entity}\n                  onChange={(e) =>\n                    setUserData({ ...userData, entity: e.target.value })\n                  }\n                >\n                  {entityList?.map((item, index) => (\n                    <option key={index} value={item.name}>\n                      {item.label}\n                    </option>\n                  ))}\n                </select>\n                \n              </div>\n            )}\n\n            <div className=\"display-flex\">\n              <div className=\"align-center\">password</div>\n              <input\n                type=\"password\"\n                placeholder=\"password\"\n                value={userData.password}\n                onChange={(e) =>\n                  setUserData({ ...userData, password: e.target.value })\n                }\n                className=\"button\"\n                required\n              />\n            </div>\n          </div>\n          <button type=\"submit\">Create User</button>\n          <ErrorComponent /> */}\n          <div className=\"login-container\">\n            <div className=\"login-form\">\n              <div className=\"display-flex\">\n                <div className=\"align-center\">Name</div>\n                <input\n                  type=\"text\"\n                  placeholder=\"Name\"\n                  value={userData.name}\n                  onChange={(e) =>\n                    //setUserData({ ...userData, name: e.target.value })\n                    handleNameChange(e)\n                  }\n                  className=\"button\"\n                  required\n                />\n              </div>\n              <div className=\"display-flex\">\n                <div className=\"align-center\">Username</div>\n                <input\n                  type=\"text\"\n                  placeholder=\"USERNAME\"\n                  value={userData.username}\n                  //   style={{ textTransform: \"lowercase\" }}\n                  // onChange={(e) =>\n                  //setUserData({ ...userData, username: e.target.value })\n                  // }\n                  readOnly\n                  className=\"button lowercase\"\n                />\n              </div>\n              <div className=\"display-flex\">\n                <div className=\"align-center\">Email</div>\n                <input\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  value={userData.email}\n                  onChange={(e) =>\n                    setUserData({ ...userData, email: e.target.value })\n                  }\n                  className=\"button\"\n                  required\n                />\n              </div>\n\n              <div className=\"display-flex\">\n                <div className=\"align-center\">Role</div>\n\n                <select\n                  className=\"new-user button\"\n                  value={userType}\n                  onChange={handleUserTypeChange}\n                >\n                  {userTypes.map((item, index) => (\n                    <option key={index} value={item.label}>\n                      {item.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n      {/* <UserList refresh={flag} /> */}\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}