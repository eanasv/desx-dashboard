{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/popup/PopupModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./PopupModal.css\";\nimport { getSkillPercentage } from \"../../service/Service\";\nimport JobChart from \"../Graph/jobChart/JobChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PopupModal = props => {\n  _s();\n  const [skillProgressValue, setskillProgressValue] = useState(0);\n  useEffect(() => {\n    getSkillValue();\n  }, []);\n  const getSkillValue = async () => {\n    var result = await getSkillPercentage(props.employeDetails.skills);\n    setskillProgressValue(result);\n  };\n  const HighlightedList = _ref => {\n    var _props$employeDetails2, _props$employeDetails3;\n    let {\n      arr1,\n      arr2\n    } = _ref;\n    const getAchievedStatus = name => {\n      var _props$employeDetails;\n      const item = (_props$employeDetails = props.employeDetails) === null || _props$employeDetails === void 0 ? void 0 : _props$employeDetails.skill.find(obj => obj.name === name);\n      return item ? item.achievedStatus : \"\";\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-overlay\",\n      onClick: props.closeModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close\",\n          onClick: props.closeModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [\" \", props.employeDetails.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(JobChart, {\n          item: props.employeDetails.subcategories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup-main-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"skill-progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup-skill-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"skill-full-width\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"skill-items\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"first-item skill-heading\",\n                  children: \"Skills\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"skill-item-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: (_props$employeDetails2 = props.employeDetails) === null || _props$employeDetails2 === void 0 ? void 0 : (_props$employeDetails3 = _props$employeDetails2.technicalSkills) === null || _props$employeDetails3 === void 0 ? void 0 : _props$employeDetails3.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: getAchievedStatus(item) === \"Achieved\" ? \"green\" : \"red\"\n                      },\n                      children: item\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: () => {\n              //console.log(\"modal closed \");\n            },\n            children: \"close modal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  };\n  //     <Popup trigger={<button className=\"button\"> Open Modal </button>} modal>\n  //       <span> Modal content </span>\n  //     </Popup>\n  //   );\n};\n_s(PopupModal, \"unbwMtnCH5cxEjlLZC/EdQ9Hhjg=\");\n_c = PopupModal;\nexport default PopupModal;\nvar _c;\n$RefreshReg$(_c, \"PopupModal\");","map":{"version":3,"names":["React","useEffect","useState","getSkillPercentage","JobChart","PopupModal","props","skillProgressValue","setskillProgressValue","getSkillValue","result","employeDetails","skills","HighlightedList","arr1","arr2","getAchievedStatus","name","item","skill","find","obj","achievedStatus","closeModal","subcategories","technicalSkills","map","index","color"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/popup/PopupModal.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./PopupModal.css\";\nimport ProgressCircle from \"../progressCircle/ProgressCircle\";\nimport { getSkillPercentage } from \"../../service/Service\";\nimport ProgressBar from \"../progressCircle/ProgressBar\";\nimport JobChart from \"../Graph/jobChart/JobChart\";\n\nconst PopupModal = (props) => {\n  const [skillProgressValue, setskillProgressValue] = useState<any>(0);\n\n  useEffect(() => {\n    getSkillValue();\n  }, []);\n\n  const getSkillValue = async () => {\n    var result = await getSkillPercentage(props.employeDetails.skills);\n    setskillProgressValue(result);\n  };\n\n  const HighlightedList = ({ arr1, arr2 }) => {\n    const getAchievedStatus = (name) => {\n      const item = props.employeDetails?.skill.find((obj) => obj.name === name);\n      return item ? item.achievedStatus : \"\";\n    };\n\n    return (\n      <div className=\"popup-overlay\" onClick={props.closeModal}>\n        <div className=\"modal\">\n          <button className=\"close\" onClick={props.closeModal}>\n            &times;\n          </button>\n          <div className=\"header\"> {props.employeDetails.name} </div>\n          <JobChart item={props.employeDetails.subcategories} />\n          <div className=\"modal-content\">\n            {\" \"}\n            <div className=\"popup-main-container\">\n              {/* <div className=\"full-width\">\n              <div className=\"items\">\n                <div className=\"first-item\">Category</div>:\n                <div className=\"second-item uppercase\">\n                  {props.employeDetails.category}\n                </div>\n              </div>\n              <div className=\"items\">\n                <div className=\"first-item\">subCategory</div>:\n                <div className=\"second-item\">\n                  {props.employeDetails.subCategory}\n                </div>\n              </div>\n              <div className=\"items\">\n                <div className=\"first-item\">Job Role</div>:\n                <div className=\"second-item\">{props.employeDetails.job}</div>\n              </div>\n            </div> */}\n              <div className=\"skill-progress\">\n                {/* <ProgressCircle\n                progress={props.employeDetails.employeeSkill}\n                size={90}\n                strokeWidth={3}\n                circleOneStroke=\"white\"\n                circleTwoStroke=\"#2b6cb0\"\n                reverse=\"false\"\n              /> */}\n              </div>\n            </div>\n            <div className=\"popup-skill-container\">\n              <div className=\"skill-full-width\">\n                <div className=\"skill-items\">\n                  <div className=\"first-item skill-heading\">Skills</div>\n                  <div className=\"skill-item-container\">\n                    <div>\n                      {props.employeDetails?.technicalSkills?.map(\n                        (item, index) => (\n                          <span\n                            key={index}\n                            style={{\n                              color:\n                                getAchievedStatus(item) === \"Achieved\"\n                                  ? \"green\"\n                                  : \"red\",\n                            }}\n                          >\n                            {item}\n                          </span>\n                        )\n                      )}\n                    </div>\n\n                    {/* {props.employeDetails.skills?.map((item, index) => (\n                    <div className=\"items\" key={index}>\n                      <div\n                        className={\n                          item.achievedStatus == \"Achieved\"\n                            ? \"green skill-first-item\"\n                            : \"red skill-first-item\"\n                        }\n                      >\n                        {item.name}\n                      </div>\n                    </div>\n                  ))} */}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <br />\n          </div>{\" \"}\n          {/* <div className=\"second-item\">\n                        <ProgressBar score={item.score} />\n                      </div> */}\n          <div className=\"actions\">\n            <button\n              className=\"button\"\n              onClick={() => {\n                //console.log(\"modal closed \");\n              }}\n            >\n              close modal\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  //     <Popup trigger={<button className=\"button\"> Open Modal </button>} modal>\n  //       <span> Modal content </span>\n  //     </Popup>\n  //   );\n};\n\nexport default PopupModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}