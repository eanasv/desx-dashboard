{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/popup/PopupModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./PopupModal.css\";\nimport { getSkillPercentage } from \"../../service/Service\";\nimport JobChart from \"../Graph/jobChart/JobChart\";\nimport Score from \"../score/Score\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PopupModal = props => {\n  _s();\n  var _props$employeDetails3, _props$employeDetails4, _props$employeDetails5, _props$employeDetails6;\n  const [skillProgressValue, setskillProgressValue] = useState(0);\n  const [expandedRows, setExpandedRows] = useState({\n    technical: [],\n    soft: []\n  });\n  useEffect(() => {\n    getSkillValue();\n  }, []);\n  const getSkillValue = async () => {\n    var result = await getSkillPercentage(props.employeDetails.skills);\n    setskillProgressValue(result);\n  };\n  const getAchievedStatus = name => {\n    var _props$employeDetails;\n    const item = (_props$employeDetails = props.employeDetails) === null || _props$employeDetails === void 0 ? void 0 : _props$employeDetails.skills.find(obj => obj.name.toLowerCase() === name.toLowerCase());\n    return item ? item.achievedStatus : \"\";\n  };\n  const getEnrollmentStatus = name => {\n    var _props$employeDetails2;\n    const item = (_props$employeDetails2 = props.employeDetails) === null || _props$employeDetails2 === void 0 ? void 0 : _props$employeDetails2.trainingNeeds.find(obj => obj.linkedCompetency.toLowerCase() === name.toLowerCase());\n    return item ? item.courses : \"\";\n    //return item;\n  };\n\n  // const toggleAccordionRow = (index) => {\n  //   // if (expandedRows.includes(index)) {\n  //   //   setExpandedRows(expandedRows.filter((row) => row !== index));\n  //   // } else {\n  //   //   setExpandedRows([...expandedRows, index]);\n  //   // }\n  // }\n  const toggleAccordionRow = (index, tableType) => {\n    setExpandedRows(prevState => {\n      const updatedRows = {\n        ...prevState\n      };\n      if (updatedRows[tableType].includes(index)) {\n        updatedRows[tableType] = updatedRows[tableType].filter(row => row !== index);\n      } else {\n        updatedRows[tableType] = [...updatedRows[tableType], index];\n      }\n      return updatedRows;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup-overlay\",\n    onClick: props.closeModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-header\",\n            children: [\" \", props.employeDetails.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-div\",\n          children: /*#__PURE__*/_jsxDEV(Score, {\n            score: props.employeDetails.employeeSkill\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(JobChart, {\n          item: props.employeDetails.subcategories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-main-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"skill-progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"two-table-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"first-table\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"each-column-border table-heading\",\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"each-column-border\",\n                    children: \"Technical Skill\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"each-column-border\",\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"each-column-border\",\n                    children: \"Training\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: (_props$employeDetails3 = props.employeDetails) === null || _props$employeDetails3 === void 0 ? void 0 : (_props$employeDetails4 = _props$employeDetails3.technicalSkills) === null || _props$employeDetails4 === void 0 ? void 0 : _props$employeDetails4.map((item, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"each-column-border skill-name\",\n                      children: item\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"each-column-border\",\n                      style: {\n                        backgroundColor: getAchievedStatus(item) === \"Achieved\" ? \"green\" : \"red\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"each-column-border\",\n                      onClick: e => {\n                        e.stopPropagation();\n                        toggleAccordionRow(index, \"technical\");\n                      },\n                      children: getEnrollmentStatus(item) ? \"Training details\" : \"NA\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 25\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 23\n                  }, this), getEnrollmentStatus(item) && expandedRows.technical.includes(index) && /*#__PURE__*/_jsxDEV(\"tr\", {\n                    className: `accordion-content ${expandedRows.technical.includes(index) ? \"open\" : \"\"}`,\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      colSpan: 4,\n                      className: \"each-column-border\",\n                      children: getEnrollmentStatus(item) && /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: getEnrollmentStatus(item).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"flex-box\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"bold-text\",\n                            children: index + 1 + \"  . \"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 220,\n                            columnNumber: 41\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"course-list\",\n                            children: item.course\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 223,\n                            columnNumber: 41\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 219,\n                          columnNumber: 39\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 216,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 27\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"first-table\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"table-heading\",\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"each-column-border\",\n                    children: \"Soft Skill\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"each-column-border\",\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"each-column-border\",\n                    children: \"Training\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: (_props$employeDetails5 = props.employeDetails) === null || _props$employeDetails5 === void 0 ? void 0 : (_props$employeDetails6 = _props$employeDetails5.softSkills) === null || _props$employeDetails6 === void 0 ? void 0 : _props$employeDetails6.map((item, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"each-column-border\",\n                      children: item\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        backgroundColor: getAchievedStatus(item) === \"Achieved\" ? \"green\" : \"red\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"each-column-border\",\n                      onClick: e => {\n                        e.stopPropagation();\n                        toggleAccordionRow(index, \"soft\");\n                      },\n                      children: getEnrollmentStatus(item) ? \"Training details\" : \"NA\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 25\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 23\n                  }, this), getEnrollmentStatus(item) && expandedRows.soft.includes(index) && /*#__PURE__*/_jsxDEV(\"tr\", {\n                    className: `accordion-content ${expandedRows.soft.includes(index) ? \"open\" : \"\"}`,\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      colSpan: 4,\n                      className: \"each-column-border\",\n                      children: getEnrollmentStatus(item) && /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: getEnrollmentStatus(item).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"flex-box\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"bold-text\",\n                            children: index + 1 + \"  . \"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 292,\n                            columnNumber: 41\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"course-list\",\n                            children: item.course\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 295,\n                            columnNumber: 41\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 291,\n                          columnNumber: 39\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 288,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 27\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => {},\n          children: \"close modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n  //     <Popup trigger={<button className=\"button\"> Open Modal </button>} modal>\n  //       <span> Modal content </span>\n  //     </Popup>\n  //   );\n};\n_s(PopupModal, \"BiiUDJGrFzGgFfd6+TWnxFcG/bk=\");\n_c = PopupModal;\nexport default PopupModal;\nvar _c;\n$RefreshReg$(_c, \"PopupModal\");","map":{"version":3,"names":["React","useEffect","useState","getSkillPercentage","JobChart","Score","PopupModal","props","skillProgressValue","setskillProgressValue","expandedRows","setExpandedRows","technical","soft","getSkillValue","result","employeDetails","skills","getAchievedStatus","name","item","find","obj","toLowerCase","achievedStatus","getEnrollmentStatus","trainingNeeds","linkedCompetency","courses","toggleAccordionRow","index","tableType","prevState","updatedRows","includes","filter","row","closeModal","employeeSkill","subcategories","technicalSkills","map","backgroundColor","e","stopPropagation","course","softSkills"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/popup/PopupModal.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./PopupModal.css\";\nimport ProgressCircle from \"../progressCircle/ProgressCircle\";\nimport { getSkillPercentage } from \"../../service/Service\";\nimport ProgressBar from \"../progressCircle/ProgressBar\";\nimport JobChart from \"../Graph/jobChart/JobChart\";\nimport Score from \"../score/Score\";\n\nconst PopupModal = (props) => {\n  const [skillProgressValue, setskillProgressValue] = useState<any>(0);\n  const [expandedRows, setExpandedRows] = useState({ technical: [], soft: [] });\n\n  useEffect(() => {\n    getSkillValue();\n  }, []);\n\n  const getSkillValue = async () => {\n    var result = await getSkillPercentage(props.employeDetails.skills);\n    setskillProgressValue(result);\n  };\n\n  const getAchievedStatus = (name) => {\n    const item = props.employeDetails?.skills.find(\n      (obj) => obj.name.toLowerCase() === name.toLowerCase()\n    );\n    return item ? item.achievedStatus : \"\";\n  };\n\n  const getEnrollmentStatus = (name) => {\n    const item = props.employeDetails?.trainingNeeds.find(\n      (obj) => obj.linkedCompetency.toLowerCase() === name.toLowerCase()\n    );\n    return item ? item.courses : \"\";\n    //return item;\n  };\n\n  // const toggleAccordionRow = (index) => {\n  //   // if (expandedRows.includes(index)) {\n  //   //   setExpandedRows(expandedRows.filter((row) => row !== index));\n  //   // } else {\n  //   //   setExpandedRows([...expandedRows, index]);\n  //   // }\n  // }\n  const toggleAccordionRow = (index, tableType) => {\n    setExpandedRows((prevState) => {\n      const updatedRows = { ...prevState };\n      if (updatedRows[tableType].includes(index)) {\n        updatedRows[tableType] = updatedRows[tableType].filter(\n          (row) => row !== index\n        );\n      } else {\n        updatedRows[tableType] = [...updatedRows[tableType], index];\n      }\n      return updatedRows;\n    });\n  };\n\n  return (\n    <div className=\"popup-overlay\" onClick={props.closeModal}>\n      <div className=\"modal\">\n        {/* <button className=\"close\" onClick={props.closeModal}>\n          &times;\n        </button> */}\n        <div>\n          <div className=\"flex-box\">\n            <div className=\"flex-header\"> {props.employeDetails.name} </div>\n          </div>\n          <div className=\"score-div\">\n            <Score score={props.employeDetails.employeeSkill} />\n          </div>\n          <JobChart item={props.employeDetails.subcategories} />\n        </div>\n        <div className=\"modal-content\">\n          {\" \"}\n          <div className=\"popup-main-container\">\n            {/* <div className=\"full-width\">\n              <div className=\"items\">\n                <div className=\"first-item\">Category</div>:\n                <div className=\"second-item uppercase\">\n                  {props.employeDetails.category}\n                </div>\n              </div>\n              <div className=\"items\">\n                <div className=\"first-item\">subCategory</div>:\n                <div className=\"second-item\">\n                  {props.employeDetails.subCategory}\n                </div>\n              </div>\n              <div className=\"items\">\n                <div className=\"first-item\">Job Role</div>:\n                <div className=\"second-item\">{props.employeDetails.job}</div>\n              </div>\n            </div> */}\n            <div className=\"skill-progress\">\n              {/* <ProgressCircle\n                progress={props.employeDetails.employeeSkill}\n                size={90}\n                strokeWidth={3}\n                circleOneStroke=\"white\"\n                circleTwoStroke=\"#2b6cb0\"\n                reverse=\"false\"\n              /> */}\n            </div>\n          </div>\n          {/* <div className=\"popup-skill-container\">\n            <div className=\"skill-full-width\">\n              <div className=\"skill-items\">\n                <div className=\"flex\">\n                  <div className=\"first-item skill-heading\">technical</div>\n                  <div className=\"first-item skill-heading\">Soft</div>\n                </div>\n                <div className=\"skill-item-container\">\n                  <div>\n                    {props.employeDetails?.technicalSkills?.map(\n                      (item, index) => (\n                        <span\n                          className=\"items\"\n                          key={index}\n                          style={{\n                            color:\n                              getAchievedStatus(item) === \"Achieved\"\n                                ? \"green\"\n                                : \"red\",\n                          }}\n                        >\n                          {item}{\" \"}\n                          {getEnrollmentStatus(item) &&\n                            `(${getEnrollmentStatus(item)})`}\n                        </span>\n                      )\n                    )}\n                  </div>\n\n                  <div className=\"skill-item-container\">\n                    <div>\n                      {props.employeDetails?.softSkills?.map((item, index) => (\n                        <span\n                          className=\"items\"\n                          key={index}\n                          style={{\n                            color:\n                              getAchievedStatus(item) === \"Achieved\"\n                                ? \"green\"\n                                : \"red\",\n                          }}\n                        >\n                          {item}{\" \"}\n                          {getEnrollmentStatus(item) &&\n                            `(${getEnrollmentStatus(item)})`}\n                        </span>\n                      ))}\n                    </div>\n                  </div>\n\n                 \n                </div>\n              </div>\n            </div>\n          </div> */}\n          <br />\n          <div className=\"two-table-container\">\n            <div className=\"first-table\">\n              <table className=\"table\">\n                <thead>\n                  <tr className=\"each-column-border table-heading\">\n                    <th className=\"each-column-border\">Technical Skill</th>\n                    <th className=\"each-column-border\">Status</th>\n                    <th className=\"each-column-border\">Training</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {props.employeDetails?.technicalSkills?.map((item, index) => (\n                    <React.Fragment key={index}>\n                      <tr\n                        key={index}\n                        // className={index % 2 === 0 ? \"even-row\" : \"odd-row\"}\n                      >\n                        <td className=\"each-column-border skill-name\">\n                          {item}\n                        </td>\n                        <td\n                          className=\"each-column-border\"\n                          style={{\n                            backgroundColor:\n                              getAchievedStatus(item) === \"Achieved\"\n                                ? \"green\"\n                                : \"red\",\n                          }}\n                        ></td>\n                        <td\n                          className=\"each-column-border\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            toggleAccordionRow(index, \"technical\");\n                          }}\n                        >\n                          {/* {getEnrollmentStatus(item) && (\n                            <span>{getEnrollmentStatus(item)}</span>\n                          )} */}\n                          {getEnrollmentStatus(item)\n                            ? \"Training details\"\n                            : \"NA\"}\n                        </td>\n                      </tr>\n                      {getEnrollmentStatus(item) &&\n                        expandedRows.technical.includes(index) && (\n                          <tr\n                            className={`accordion-content ${\n                              expandedRows.technical.includes(index)\n                                ? \"open\"\n                                : \"\"\n                            }`}\n                          >\n                            <td colSpan={4} className=\"each-column-border\">\n                              {getEnrollmentStatus(item) && (\n                                <span>\n                                  {getEnrollmentStatus(item).map(\n                                    (item, index) => (\n                                      <div className=\"flex-box\">\n                                        <div className=\"bold-text\">\n                                          {index + 1 + \"  . \"}\n                                        </div>\n                                        <div className=\"course-list\">\n                                          {item.course}\n                                        </div>\n                                      </div>\n                                    )\n                                  )}\n                                </span>\n                              )}\n                            </td>\n                          </tr>\n                        )}\n                    </React.Fragment>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            <div className=\"first-table\">\n              <table className=\"table\">\n                <thead>\n                  <tr className=\"table-heading\">\n                    <th className=\"each-column-border\">Soft Skill</th>\n                    <th className=\"each-column-border\">Status</th>\n                    <th className=\"each-column-border\">Training</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {props.employeDetails?.softSkills?.map((item, index) => (\n                    <React.Fragment key={index}>\n                      <tr\n                        key={index}\n                        // className={index % 2 === 0 ? \"even-row\" : \"odd-row\"}\n                      >\n                        <td className=\"each-column-border\">{item}</td>\n                        <td\n                          style={{\n                            backgroundColor:\n                              getAchievedStatus(item) === \"Achieved\"\n                                ? \"green\"\n                                : \"red\",\n                          }}\n                        ></td>\n                        <td\n                          className=\"each-column-border\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            toggleAccordionRow(index, \"soft\");\n                          }}\n                        >\n                          {/* {getEnrollmentStatus(item) && (\n                          <span>{getEnrollmentStatus(item)}</span>\n                        )} */}\n                          {getEnrollmentStatus(item)\n                            ? \"Training details\"\n                            : \"NA\"}\n                        </td>\n                      </tr>\n                      {getEnrollmentStatus(item) &&\n                        expandedRows.soft.includes(index) && (\n                          <tr\n                            className={`accordion-content ${\n                              expandedRows.soft.includes(index) ? \"open\" : \"\"\n                            }`}\n                          >\n                            <td colSpan={4} className=\"each-column-border\">\n                              {getEnrollmentStatus(item) && (\n                                <span>\n                                  {getEnrollmentStatus(item).map(\n                                    (item, index) => (\n                                      <div className=\"flex-box\">\n                                        <div className=\"bold-text\">\n                                          {index + 1 + \"  . \"}\n                                        </div>\n                                        <div className=\"course-list\">\n                                          {item.course}\n                                        </div>\n                                      </div>\n                                    )\n                                  )}\n                                </span>\n                              )}\n                            </td>\n                          </tr>\n                        )}\n                    </React.Fragment>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>{\" \"}\n        {/* <div className=\"second-item\">\n                        <ProgressBar score={item.score} />\n                      </div> */}\n        <div className=\"actions\">\n          <button className=\"button\" onClick={() => {}}>\n            close modal\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n  //     <Popup trigger={<button className=\"button\"> Open Modal </button>} modal>\n  //       <span> Modal content </span>\n  //     </Popup>\n  //   );\n};\n\nexport default PopupModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}