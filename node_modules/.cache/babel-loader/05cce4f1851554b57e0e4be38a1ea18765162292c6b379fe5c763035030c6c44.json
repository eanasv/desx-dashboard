{"ast":null,"code":"import React,{useEffect}from\"react\";import{useSelector}from\"react-redux\";import{hideErrorMesaage}from\"../../redux/features/errorSlice\";import Store from\"../../redux/Store\";import\"./ErrorComponent.css\";// const ErrorComponent = () => {\n//   const errorMessage = useSelector((state: any) => state.errorMessage);\n//   console.log(errorMessage);\n//   const [isLoading, setisLoading] = useState(errorMessage);\n//   return <div className=\"error\">{errorMessage}</div>;\n// };\n//\nimport{jsx as _jsx}from\"react/jsx-runtime\";var ErrorComponent=function ErrorComponent(){var errorMessage=useSelector(function(state){return state.errorMessage.errorMessage;});// console.log(errorMessage);\nuseEffect(function(){if(errorMessage){var timeoutId=setTimeout(function(){Store.dispatch(hideErrorMesaage());},20000);// Clean up the timer when the component unmounts or when a new error occurs\nreturn function(){return clearTimeout(timeoutId);};}},[Store.dispatch,errorMessage]);return/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:errorMessage!==null&&errorMessage!==void 0&&errorMessage.message?errorMessage===null||errorMessage===void 0?void 0:errorMessage.message:errorMessage});};export default ErrorComponent;","map":{"version":3,"names":["React","useEffect","useSelector","hideErrorMesaage","Store","ErrorComponent","errorMessage","state","timeoutId","setTimeout","dispatch","clearTimeout","message"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/errorComponent/ErrorComponent.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { hideErrorMesaage } from \"../../redux/features/errorSlice\";\nimport Store from \"../../redux/Store\";\nimport \"./ErrorComponent.css\";\n\n// const ErrorComponent = () => {\n//   const errorMessage = useSelector((state: any) => state.errorMessage);\n//   console.log(errorMessage);\n//   const [isLoading, setisLoading] = useState(errorMessage);\n//   return <div className=\"error\">{errorMessage}</div>;\n// };\n\n//\n\nconst ErrorComponent = () => {\n  const errorMessage = useSelector(\n    (state: any) => state.errorMessage.errorMessage\n  );\n  // console.log(errorMessage);\n  useEffect(() => {\n    if (errorMessage) {\n      const timeoutId = setTimeout(() => {\n        Store.dispatch(hideErrorMesaage());\n      }, 20000);\n\n      // Clean up the timer when the component unmounts or when a new error occurs\n      return () => clearTimeout(timeoutId);\n    }\n  }, [Store.dispatch, errorMessage]);\n  return (\n    <div className=\"error\">\n      {errorMessage?.message ? errorMessage?.message : errorMessage}\n    </div>\n  );\n};\nexport default ErrorComponent;\n"],"mappings":"AAAA,MAAOA,MAAK,EAAIC,SAAS,KAAkB,OAAO,CAClD,OAAkBC,WAAW,KAAQ,aAAa,CAClD,OAASC,gBAAgB,KAAQ,iCAAiC,CAClE,MAAOC,MAAK,KAAM,mBAAmB,CACrC,MAAO,sBAAsB,CAE7B;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA,2CAEA,GAAMC,eAAc,CAAG,QAAjBA,eAAc,EAAS,CAC3B,GAAMC,aAAY,CAAGJ,WAAW,CAC9B,SAACK,KAAU,QAAKA,MAAK,CAACD,YAAY,CAACA,YAAY,GAChD,CACD;AACAL,SAAS,CAAC,UAAM,CACd,GAAIK,YAAY,CAAE,CAChB,GAAME,UAAS,CAAGC,UAAU,CAAC,UAAM,CACjCL,KAAK,CAACM,QAAQ,CAACP,gBAAgB,EAAE,CAAC,CACpC,CAAC,CAAE,KAAK,CAAC,CAET;AACA,MAAO,kBAAMQ,aAAY,CAACH,SAAS,CAAC,GACtC,CACF,CAAC,CAAE,CAACJ,KAAK,CAACM,QAAQ,CAAEJ,YAAY,CAAC,CAAC,CAClC,mBACE,YAAK,SAAS,CAAC,OAAO,UACnBA,YAAY,SAAZA,YAAY,WAAZA,YAAY,CAAEM,OAAO,CAAGN,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAEM,OAAO,CAAGN,YAAY,EACzD,CAEV,CAAC,CACD,cAAeD,eAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}