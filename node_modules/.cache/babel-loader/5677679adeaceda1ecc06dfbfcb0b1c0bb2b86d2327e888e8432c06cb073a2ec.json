{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/dataFileUpload/FileUpload.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./FileUpload.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  // const [file, setFile] = useState(null);\n  // const [responseText, setresponseText] = useState(null);\n  // const [selectedFile, setSelectedFile] = useState(null);\n  // const [selectedFileType, setSelectedFileType] = useState(\"\");\n\n  // const handleItemSelect = (event) => {\n  //   console.log(event);\n  //   setSelectedFile(event.target.files[0]);\n  //   setSelectedFileType(event.target.value);\n  // };\n\n  // const handleFileChange = (e) => {\n  //   setFile(e.target.files[0]);\n  // };\n\n  // const handleResponseText = () => {\n  //   setresponseText(null);\n  // };\n\n  // const handleSubmit = (e) => {\n  //   console.log(\"handlesubmit\");\n  //   if (!selectedFileType) {\n  //     console.error(\"Please select a file type\");\n  //     return;\n  //   }\n  //   const formData = new FormData();\n  //   formData.append(\"file\", file);\n  //   // postHttp(\"upload/\" + { selectedFileType }, formData)\n  //   postHttp(\"upload/\" + { selectedFileType }, formData)\n  //     .then((response) => {\n  //       setresponseText(response);\n  //       // handle success\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //       setresponseText(error);\n  //       // handle error\n  //     });\n  //   e.target.value = null;\n  // };\n\n  // // axios\n  // //   .post(\"http://localhost:8080/upload\", formData, {\n  // //     headers: {\n  // //       \"Content-Type\": \"multipart/form-data\",\n  // //     },\n  // //   })\n  // //   .then((response) => {\n  // //     console.log(response);\n  // //     setresponseText(response.data);\n  // //     // handle success\n  // //   })\n  // //   .catch((error) => {\n  // //     console.log(error);\n  // //     // handle error\n  // //   });\n  // //};\n\n  // // const handleFileUpload = () => {\n  // //   if (!selectedFileType) {\n  // //     console.error(\"Please select a file type\");\n  // //     return;\n  // //   }\n\n  // //   const formData = new FormData();\n  // //   formData.append(\"file\", file);\n\n  // //   postHttp(\"upload/\" + selectedFileType, formData)\n  // //     .then((response) => {\n  // //       console.log(response);\n  // //       setresponseText(response);\n  // //       // handle success\n  // //     })\n  // //     .catch((error) => {\n  // //       console.log(error);\n  // //       setresponseText(error);\n  // //       // handle error\n  // //     });\n  // // };\n\n  // // const handleSubmit = (e) => {\n  // //   e.preventDefault();\n  // //   // const fileInput = document.getElementById(\"fileInput\");\n  // //   const file = e.target.files[0];\n  // //   handleFileUpload();\n  // //   // Clear the file input\n  // //   e.target.value = null;\n  // // };\n\n  // var typeOfDropdown = [\n  //   { id: 1, label: \"Employee\", value: \"Employee\" },\n  //   { id: 2, label: \"Training\", value: \"Training\" },\n  //   { id: 3, label: \"Entity\", value: \"Entity\" },\n  // ];\n  // return (\n  //   <div className=\"upload-backgroound\">\n  //     <div className=\"upload-container\">\n  //       <form onSubmit={() => handleSubmit}>\n  //         <select value={selectedFileType} onChange={handleItemSelect}>\n  //           <option value=\"\">Select File Type</option>\n  //           <option value=\"employee\">Employee</option>\n  //           <option value=\"training\">Training</option>\n  //           <option value=\"entity\">Entity</option>\n  //         </select>\n  //         <div>\n  {\n    /* <DropDown\n            mainList={typeOfDropdown}\n            name=\"\"\n            onChangeDropDownItem={handleItemSelect}\n            isMulti={false}\n            classname=\"margin\"\n            placeholder={\"Select file type\"}\n          /> */\n  }\n  //         <input\n  //           type=\"file\"\n  //           onChange={handleFileChange}\n  //           onClick={handleResponseText}\n  //         />\n  //         <button type=\"submit\" onClick={() => handleSubmit}>\n  //           Upload\n  //         </button>\n  //       </div>\n  //     </form>\n  //   </div>\n  //   <div className=\"response-text\">{responseText}</div>\n  // </div>\n  // );\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleOptionChange = event => {\n    setSelectedOption(event.target.value);\n  };\n  const handleSubmit = async () => {\n    if (!selectedOption) {\n      console.error(\"Please select an option from the dropdown\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    formData.append(\"option\", selectedOption);\n    try {\n      const response = await fetch(\"http://localhost:8080/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        console.log(\"File uploaded successfully\");\n        // Reset form fields\n        setSelectedFile(null);\n        setSelectedOption(\"\");\n      } else {\n        console.error(\"File upload failed\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"File Upload \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"option\",\n        children: \"Select an option:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"option\",\n        value: selectedOption,\n        onChange: handleOptionChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"employee\",\n          children: \"Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"training\",\n          children: \"Training\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        children: \"Select a file:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"filter-button std margin-left unwanted text\",\n      onClick: () => handleSubmit()\n      // onClick={filterData(startDate, endDate)}\n      ,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"XkHecNOUlUYUOe2TNfYpw2qq2Co=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","FileUpload","selectedFile","setSelectedFile","selectedOption","setSelectedOption","handleFileChange","event","target","files","handleOptionChange","value","handleSubmit","console","error","formData","FormData","append","response","fetch","method","body","ok","log"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/dataFileUpload/FileUpload.tsx"],"sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport DropDown from \"../../components/dropDown/DropDown\";\nimport { postHttp } from \"../../service/APIRequest\";\nimport \"./FileUpload.css\";\n\nconst FileUpload = () => {\n  // const [file, setFile] = useState(null);\n  // const [responseText, setresponseText] = useState(null);\n  // const [selectedFile, setSelectedFile] = useState(null);\n  // const [selectedFileType, setSelectedFileType] = useState(\"\");\n\n  // const handleItemSelect = (event) => {\n  //   console.log(event);\n  //   setSelectedFile(event.target.files[0]);\n  //   setSelectedFileType(event.target.value);\n  // };\n\n  // const handleFileChange = (e) => {\n  //   setFile(e.target.files[0]);\n  // };\n\n  // const handleResponseText = () => {\n  //   setresponseText(null);\n  // };\n\n  // const handleSubmit = (e) => {\n  //   console.log(\"handlesubmit\");\n  //   if (!selectedFileType) {\n  //     console.error(\"Please select a file type\");\n  //     return;\n  //   }\n  //   const formData = new FormData();\n  //   formData.append(\"file\", file);\n  //   // postHttp(\"upload/\" + { selectedFileType }, formData)\n  //   postHttp(\"upload/\" + { selectedFileType }, formData)\n  //     .then((response) => {\n  //       setresponseText(response);\n  //       // handle success\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //       setresponseText(error);\n  //       // handle error\n  //     });\n  //   e.target.value = null;\n  // };\n\n  // // axios\n  // //   .post(\"http://localhost:8080/upload\", formData, {\n  // //     headers: {\n  // //       \"Content-Type\": \"multipart/form-data\",\n  // //     },\n  // //   })\n  // //   .then((response) => {\n  // //     console.log(response);\n  // //     setresponseText(response.data);\n  // //     // handle success\n  // //   })\n  // //   .catch((error) => {\n  // //     console.log(error);\n  // //     // handle error\n  // //   });\n  // //};\n\n  // // const handleFileUpload = () => {\n  // //   if (!selectedFileType) {\n  // //     console.error(\"Please select a file type\");\n  // //     return;\n  // //   }\n\n  // //   const formData = new FormData();\n  // //   formData.append(\"file\", file);\n\n  // //   postHttp(\"upload/\" + selectedFileType, formData)\n  // //     .then((response) => {\n  // //       console.log(response);\n  // //       setresponseText(response);\n  // //       // handle success\n  // //     })\n  // //     .catch((error) => {\n  // //       console.log(error);\n  // //       setresponseText(error);\n  // //       // handle error\n  // //     });\n  // // };\n\n  // // const handleSubmit = (e) => {\n  // //   e.preventDefault();\n  // //   // const fileInput = document.getElementById(\"fileInput\");\n  // //   const file = e.target.files[0];\n  // //   handleFileUpload();\n  // //   // Clear the file input\n  // //   e.target.value = null;\n  // // };\n\n  // var typeOfDropdown = [\n  //   { id: 1, label: \"Employee\", value: \"Employee\" },\n  //   { id: 2, label: \"Training\", value: \"Training\" },\n  //   { id: 3, label: \"Entity\", value: \"Entity\" },\n  // ];\n  // return (\n  //   <div className=\"upload-backgroound\">\n  //     <div className=\"upload-container\">\n  //       <form onSubmit={() => handleSubmit}>\n  //         <select value={selectedFileType} onChange={handleItemSelect}>\n  //           <option value=\"\">Select File Type</option>\n  //           <option value=\"employee\">Employee</option>\n  //           <option value=\"training\">Training</option>\n  //           <option value=\"entity\">Entity</option>\n  //         </select>\n  //         <div>\n  {\n    /* <DropDown\n            mainList={typeOfDropdown}\n            name=\"\"\n            onChangeDropDownItem={handleItemSelect}\n            isMulti={false}\n            classname=\"margin\"\n            placeholder={\"Select file type\"}\n          /> */\n  }\n  //         <input\n  //           type=\"file\"\n  //           onChange={handleFileChange}\n  //           onClick={handleResponseText}\n  //         />\n  //         <button type=\"submit\" onClick={() => handleSubmit}>\n  //           Upload\n  //         </button>\n  //       </div>\n  //     </form>\n  //   </div>\n  //   <div className=\"response-text\">{responseText}</div>\n  // </div>\n  // );\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleOptionChange = (event) => {\n    setSelectedOption(event.target.value);\n  };\n\n  const handleSubmit = async () => {\n    if (!selectedOption) {\n      console.error(\"Please select an option from the dropdown\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    formData.append(\"option\", selectedOption);\n\n    try {\n      const response = await fetch(\"http://localhost:8080/upload\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (response.ok) {\n        console.log(\"File uploaded successfully\");\n        // Reset form fields\n        setSelectedFile(null);\n        setSelectedOption(\"\");\n      } else {\n        console.error(\"File upload failed\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n    }\n  };\n\n  return (\n    <div className=\"upload-container\">\n      <h1>File Upload </h1>\n      <div>\n        <label htmlFor=\"option\">Select an option:</label>\n        <select\n          id=\"option\"\n          value={selectedOption}\n          onChange={handleOptionChange}\n        >\n          <option value=\"employee\">Employee</option>\n          <option value=\"training\">Training</option>\n          {/* <option value=\"option3\">Option 3</option> */}\n        </select>\n      </div>\n      <div>\n        <label htmlFor=\"file\">Select a file:</label>\n        <input type=\"file\" id=\"file\" onChange={handleFileChange} />\n      </div>\n      {/* <button onClick={handleSubmit}>Submit</button> */}\n      <button\n        className=\"filter-button std margin-left unwanted text\"\n        onClick={() => handleSubmit()}\n        // onClick={filterData(startDate, endDate)}\n      >\n        Upload\n      </button>\n    </div>\n  );\n};\n\nexport default FileUpload;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAGvC,OAAO,kBAAkB;AAAC;AAE1B,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;IACE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EAPI;EASF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGH,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACI,cAAc,EAAEC,iBAAiB,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMM,gBAAgB,GAAIC,KAAK,IAAK;IAClCJ,eAAe,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,kBAAkB,GAAIH,KAAK,IAAK;IACpCF,iBAAiB,CAACE,KAAK,CAACC,MAAM,CAACG,KAAK,CAAC;EACvC,CAAC;EAED,MAAMC,YAAY,GAAG,YAAY;IAC/B,IAAI,CAACR,cAAc,EAAE;MACnBS,OAAO,CAACC,KAAK,CAAC,2CAA2C,CAAC;MAC1D;IACF;IACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEf,YAAY,CAAC;IACrCa,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEb,cAAc,CAAC;IAEzC,IAAI;MACF,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;QACfT,OAAO,CAACU,GAAG,CAAC,4BAA4B,CAAC;QACzC;QACApB,eAAe,CAAC,IAAI,CAAC;QACrBE,iBAAiB,CAAC,EAAE,CAAC;MACvB,CAAC,MAAM;QACLQ,OAAO,CAACC,KAAK,CAAC,oBAAoB,CAAC;MACrC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,kBAAkB;IAAA,wBAC/B;MAAA,UAAI;IAAY;MAAA;MAAA;MAAA;IAAA,QAAK,eACrB;MAAA,wBACE;QAAO,OAAO,EAAC,QAAQ;QAAA,UAAC;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAQ,eACjD;QACE,EAAE,EAAC,QAAQ;QACX,KAAK,EAAEV,cAAe;QACtB,QAAQ,EAAEM,kBAAmB;QAAA,wBAE7B;UAAQ,KAAK,EAAC,UAAU;UAAA,UAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAS,eAC1C;UAAQ,KAAK,EAAC,UAAU;UAAA,UAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QAEnC;IAAA;MAAA;MAAA;MAAA;IAAA,QACL,eACN;MAAA,wBACE;QAAO,OAAO,EAAC,MAAM;QAAA,UAAC;MAAc;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC5C;QAAO,IAAI,EAAC,MAAM;QAAC,EAAE,EAAC,MAAM;QAAC,QAAQ,EAAEJ;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACvD,eAEN;MACE,SAAS,EAAC,6CAA6C;MACvD,OAAO,EAAE,MAAMM,YAAY;MAC3B;MAAA;MAAA,UACD;IAED;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAC,GAvMIX,UAAU;AAAA,KAAVA,UAAU;AAyMhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}