{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/dateRangeFilter/DateRangeFilter.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport DateInput from \"../datePicker/DateInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DateRangeFilter = () => {\n  _s();\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState(null);\n  const [endCalendarVisible, setEndCalendarVisible] = useState(false);\n  useEffect(() => {\n    const today = new Date();\n    const defaultStartDate = today.toISOString().slice(0, 10);\n    setStartDate(defaultStartDate);\n  }, []);\n  const handleStartChange = date => {\n    setStartDate(date);\n    setEndCalendarVisible(true);\n  };\n  const handleEndChange = date => {\n    setEndDate(date);\n  };\n\n  //   const filterData = () => {\n  //     console.log(startDate, endDate);\n  //     if (startDate && endDate) {\n  //       const filteredData = data.filter(\n  //         (item) =>\n  //           new Date(item.date) >= new Date(startDate) &&\n  //           new Date(item.date) <= new Date(endDate)\n  //       );\n  //       console.log(filteredData);\n  //     }\n  //   };\n\n  const filterData = () => {\n    if (startDate && endDate) {\n      console.log(startDate, \"----------\", endDate);\n      return {\n        startDate,\n        endDate\n      };\n    }\n    return null;\n  };\n  function changeFilterStartDate(startDate) {\n    setEndCalendarVisible(true);\n    setEndDate(startDate);\n    console.log(startDate);\n  }\n  function changeFilterEndDate(enddate) {\n    console.log(enddate);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DateInput, {\n        maxDate: new Date().toISOString().substr(0, 10),\n        value: startDate,\n        dateChangeEvent: changeFilterStartDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), endCalendarVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DateInput, {\n        maxDate: startDate,\n        value: startDate,\n        dateChangeEvent: changeFilterEndDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: filterData,\n      children: \"Filter Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(DateRangeFilter, \"uZh02fIQaAEOEBx6nzN78QzRgvM=\");\n_c = DateRangeFilter;\nvar _c;\n$RefreshReg$(_c, \"DateRangeFilter\");","map":{"version":3,"names":["React","useEffect","useState","DateInput","DateRangeFilter","startDate","setStartDate","endDate","setEndDate","endCalendarVisible","setEndCalendarVisible","today","Date","defaultStartDate","toISOString","slice","handleStartChange","date","handleEndChange","filterData","console","log","changeFilterStartDate","changeFilterEndDate","enddate","substr"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/dateRangeFilter/DateRangeFilter.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport DateInput from \"../datePicker/DateInput\";\n\nexport const DateRangeFilter = () => {\n  const [startDate, setStartDate] = useState<any>();\n  const [endDate, setEndDate] = useState(null);\n  const [endCalendarVisible, setEndCalendarVisible] = useState(false);\n\n  useEffect(() => {\n    const today = new Date();\n    const defaultStartDate = today.toISOString().slice(0, 10);\n    setStartDate(defaultStartDate);\n  }, []);\n\n  const handleStartChange = (date) => {\n    setStartDate(date);\n    setEndCalendarVisible(true);\n  };\n\n  const handleEndChange = (date) => {\n    setEndDate(date);\n  };\n\n  //   const filterData = () => {\n  //     console.log(startDate, endDate);\n  //     if (startDate && endDate) {\n  //       const filteredData = data.filter(\n  //         (item) =>\n  //           new Date(item.date) >= new Date(startDate) &&\n  //           new Date(item.date) <= new Date(endDate)\n  //       );\n  //       console.log(filteredData);\n  //     }\n  //   };\n\n  const filterData = () => {\n    if (startDate && endDate) {\n      console.log(startDate, \"----------\", endDate);\n      return { startDate, endDate };\n    }\n    return null;\n  };\n\n  function changeFilterStartDate(startDate) {\n    setEndCalendarVisible(true);\n    setEndDate(startDate);\n    console.log(startDate);\n  }\n\n  function changeFilterEndDate(enddate) {\n    console.log(enddate);\n  }\n\n  return (\n    <div>\n      <div>\n        <label>Start Date:</label>\n        <DateInput\n          maxDate={new Date().toISOString().substr(0, 10)}\n          value={startDate}\n          dateChangeEvent={changeFilterStartDate}\n        />\n      </div>\n      {endCalendarVisible && (\n        <div>\n          <label>End Date:</label>\n          <DateInput\n            maxDate={startDate}\n            value={startDate}\n            dateChangeEvent={changeFilterEndDate}\n          />\n        </div>\n      )}\n      <button onClick={filterData}>Filter Data</button>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,yBAAyB;AAAC;AAEhD,OAAO,MAAMC,eAAe,GAAG,MAAM;EAAA;EACnC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,EAAO;EACjD,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACO,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEnED,SAAS,CAAC,MAAM;IACd,MAAMU,KAAK,GAAG,IAAIC,IAAI,EAAE;IACxB,MAAMC,gBAAgB,GAAGF,KAAK,CAACG,WAAW,EAAE,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IACzDT,YAAY,CAACO,gBAAgB,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,iBAAiB,GAAIC,IAAI,IAAK;IAClCX,YAAY,CAACW,IAAI,CAAC;IAClBP,qBAAqB,CAAC,IAAI,CAAC;EAC7B,CAAC;EAED,MAAMQ,eAAe,GAAID,IAAI,IAAK;IAChCT,UAAU,CAACS,IAAI,CAAC;EAClB,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAME,UAAU,GAAG,MAAM;IACvB,IAAId,SAAS,IAAIE,OAAO,EAAE;MACxBa,OAAO,CAACC,GAAG,CAAChB,SAAS,EAAE,YAAY,EAAEE,OAAO,CAAC;MAC7C,OAAO;QAAEF,SAAS;QAAEE;MAAQ,CAAC;IAC/B;IACA,OAAO,IAAI;EACb,CAAC;EAED,SAASe,qBAAqB,CAACjB,SAAS,EAAE;IACxCK,qBAAqB,CAAC,IAAI,CAAC;IAC3BF,UAAU,CAACH,SAAS,CAAC;IACrBe,OAAO,CAACC,GAAG,CAAChB,SAAS,CAAC;EACxB;EAEA,SAASkB,mBAAmB,CAACC,OAAO,EAAE;IACpCJ,OAAO,CAACC,GAAG,CAACG,OAAO,CAAC;EACtB;EAEA,oBACE;IAAA,wBACE;MAAA,wBACE;QAAA,UAAO;MAAW;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC1B,QAAC,SAAS;QACR,OAAO,EAAE,IAAIZ,IAAI,EAAE,CAACE,WAAW,EAAE,CAACW,MAAM,CAAC,CAAC,EAAE,EAAE,CAAE;QAChD,KAAK,EAAEpB,SAAU;QACjB,eAAe,EAAEiB;MAAsB;QAAA;QAAA;QAAA;MAAA,QACvC;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,EACLb,kBAAkB,iBACjB;MAAA,wBACE;QAAA,UAAO;MAAS;QAAA;QAAA;QAAA;MAAA,QAAQ,eACxB,QAAC,SAAS;QACR,OAAO,EAAEJ,SAAU;QACnB,KAAK,EAAEA,SAAU;QACjB,eAAe,EAAEkB;MAAoB;QAAA;QAAA;QAAA;MAAA,QACrC;IAAA;MAAA;MAAA;MAAA;IAAA,QAEL,eACD;MAAQ,OAAO,EAAEJ,UAAW;MAAA,UAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC7C;AAEV,CAAC;AAAC,GAzEWf,eAAe;AAAA,KAAfA,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}