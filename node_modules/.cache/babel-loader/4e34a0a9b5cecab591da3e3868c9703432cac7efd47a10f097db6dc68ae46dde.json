{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab3/Chart4.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { BarChart } from \"../../../components/Graph/barChart/BarChart\";\nimport { getHttp } from \"../../../service/APIRequest1\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Chart4 = _ref => {\n  _s();\n  let {\n    selectedEntityList,\n    entityList,\n    fetchChart4Data\n  } = _ref;\n  const [chartData, setchartData] = useState();\n  const [xAxis, setxAxis] = useState([]);\n  const [selectedEntities, setselectedEntities] = useState(selectedEntityList);\n  const [allEntityList, setallEntityList] = useState(entityList);\n  useEffect(() => {\n    setallEntityList(allEntityList);\n    setselectedEntities(selectedEntityList);\n    getScoreOfEntityLatestDate(selectedEntityList);\n  }, [selectedEntityList]);\n  const getScoreOfEntityLatestDate = async selectedEntities => {\n    var _entityLists, _entityLists2;\n    var entityLists = selectedEntities;\n    if (((_entityLists = entityLists) === null || _entityLists === void 0 ? void 0 : _entityLists.length) == 0) {\n      entityLists = entityList === null || entityList === void 0 ? void 0 : entityList.map(item => item.label);\n    }\n    if (((_entityLists2 = entityLists) === null || _entityLists2 === void 0 ? void 0 : _entityLists2.length) > 0) {\n      var _entityLists3;\n      getHttp(\"skills/latestScore\", {\n        entityNames: (_entityLists3 = entityLists) === null || _entityLists3 === void 0 ? void 0 : _entityLists3.join(\",\")\n      }).then(response => {\n        drawChart(response);\n        fetchChart4Data(response);\n\n        // handle success\n      }).catch(error => {\n        console.log(error);\n        // handle error\n      });\n    }\n  };\n\n  const drawChart = responseData => {\n    var xAxisdata = responseData === null || responseData === void 0 ? void 0 : responseData.map(company => company.companyName);\n    setxAxis(xAxisdata);\n    setchartData(responseData === null || responseData === void 0 ? void 0 : responseData.map(company => company.monthlyAverages[0].averageScore));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-bg\",\n    children: /*#__PURE__*/_jsxDEV(BarChart, {\n      data: chartData,\n      xAxis: xAxis,\n      title: \"Latest Score\",\n      name: \"Latest Score\",\n      width: 550\n      //yAxis={\"Latest score of \" + responseData[0].monthlyAverages[0].month}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Chart4, \"0RCBFTHtbaaoxDzDelnsN2VW/CI=\");\n_c = Chart4;\nvar _c;\n$RefreshReg$(_c, \"Chart4\");","map":{"version":3,"names":["React","useEffect","useState","BarChart","getHttp","Chart4","selectedEntityList","entityList","fetchChart4Data","chartData","setchartData","xAxis","setxAxis","selectedEntities","setselectedEntities","allEntityList","setallEntityList","getScoreOfEntityLatestDate","entityLists","length","map","item","label","entityNames","join","then","response","drawChart","catch","error","console","log","responseData","xAxisdata","company","companyName","monthlyAverages","averageScore"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab3/Chart4.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BarChart } from \"../../../components/Graph/barChart/BarChart\";\nimport { getHttp } from \"../../../service/APIRequest1\";\n\ninterface Chart4Props {\n  selectedEntityList?: any;\n  entityList?: any;\n  fetchChart4Data?: any;\n}\nexport const Chart4: React.FC<Chart4Props> = ({\n  selectedEntityList,\n  entityList,\n  fetchChart4Data,\n}) => {\n  const [chartData, setchartData] = useState<any>();\n  const [xAxis, setxAxis] = useState([]);\n  const [selectedEntities, setselectedEntities] = useState(selectedEntityList);\n  const [allEntityList, setallEntityList] = useState(entityList);\n\n  useEffect(() => {\n    setallEntityList(allEntityList);\n    setselectedEntities(selectedEntityList);\n    getScoreOfEntityLatestDate(selectedEntityList);\n  }, [selectedEntityList]);\n\n  const getScoreOfEntityLatestDate = async (selectedEntities?) => {\n    var entityLists = selectedEntities;\n    if (entityLists?.length == 0) {\n      entityLists = entityList?.map((item) => item.label);\n    }\n    if (entityLists?.length > 0) {\n      getHttp(\"skills/latestScore\", {\n        entityNames: entityLists?.join(\",\"),\n      })\n        .then((response) => {\n          drawChart(response);\n          fetchChart4Data(response);\n\n          // handle success\n        })\n        .catch((error) => {\n          console.log(error);\n          // handle error\n        });\n    }\n  };\n\n  const drawChart = (responseData?) => {\n    var xAxisdata = responseData?.map((company) => company.companyName);\n    setxAxis(xAxisdata);\n    setchartData(\n      responseData?.map((company) => company.monthlyAverages[0].averageScore)\n    );\n  };\n\n  return (\n    <div className=\"chart-bg\">\n      <BarChart\n        data={chartData}\n        xAxis={xAxis}\n        title={\"Latest Score\"}\n        name=\"Latest Score\"\n        width={550}\n        //yAxis={\"Latest score of \" + responseData[0].monthlyAverages[0].month}\n      />\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,6CAA6C;AACtE,SAASC,OAAO,QAAQ,8BAA8B;AAAC;AAOvD,OAAO,MAAMC,MAA6B,GAAG,QAIvC;EAAA;EAAA,IAJwC;IAC5CC,kBAAkB;IAClBC,UAAU;IACVC;EACF,CAAC;EACC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,EAAO;EACjD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAACI,kBAAkB,CAAC;EAC5E,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAACK,UAAU,CAAC;EAE9DN,SAAS,CAAC,MAAM;IACde,gBAAgB,CAACD,aAAa,CAAC;IAC/BD,mBAAmB,CAACR,kBAAkB,CAAC;IACvCW,0BAA0B,CAACX,kBAAkB,CAAC;EAChD,CAAC,EAAE,CAACA,kBAAkB,CAAC,CAAC;EAExB,MAAMW,0BAA0B,GAAG,MAAOJ,gBAAiB,IAAK;IAAA;IAC9D,IAAIK,WAAW,GAAGL,gBAAgB;IAClC,IAAI,iBAAAK,WAAW,iDAAX,aAAaC,MAAM,KAAI,CAAC,EAAE;MAC5BD,WAAW,GAAGX,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEa,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,KAAK,CAAC;IACrD;IACA,IAAI,kBAAAJ,WAAW,kDAAX,cAAaC,MAAM,IAAG,CAAC,EAAE;MAAA;MAC3Bf,OAAO,CAAC,oBAAoB,EAAE;QAC5BmB,WAAW,mBAAEL,WAAW,kDAAX,cAAaM,IAAI,CAAC,GAAG;MACpC,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAK;QAClBC,SAAS,CAACD,QAAQ,CAAC;QACnBlB,eAAe,CAACkB,QAAQ,CAAC;;QAEzB;MACF,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClB;MACF,CAAC,CAAC;IACN;EACF,CAAC;;EAED,MAAMF,SAAS,GAAIK,YAAa,IAAK;IACnC,IAAIC,SAAS,GAAGD,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEZ,GAAG,CAAEc,OAAO,IAAKA,OAAO,CAACC,WAAW,CAAC;IACnEvB,QAAQ,CAACqB,SAAS,CAAC;IACnBvB,YAAY,CACVsB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEZ,GAAG,CAAEc,OAAO,IAAKA,OAAO,CAACE,eAAe,CAAC,CAAC,CAAC,CAACC,YAAY,CAAC,CACxE;EACH,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,UAAU;IAAA,uBACvB,QAAC,QAAQ;MACP,IAAI,EAAE5B,SAAU;MAChB,KAAK,EAAEE,KAAM;MACb,KAAK,EAAE,cAAe;MACtB,IAAI,EAAC,cAAc;MACnB,KAAK,EAAE;MACP;IAAA;MAAA;MAAA;MAAA;IAAA;EACA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GA1DWN,MAA6B;AAAA,KAA7BA,MAA6B;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}