{"ast":null,"code":"import _regeneratorRuntime from\"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import{BarChart}from\"../../../components/Graph/barChart/BarChart\";import{getHttp}from\"../../../service/APIRequest\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Chart3=function Chart3(_ref){var selectedEntityList=_ref.selectedEntityList,entityList=_ref.entityList;var _useState=useState(),_useState2=_slicedToArray(_useState,2),chartData=_useState2[0],setchartData=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),xAxis=_useState4[0],setxAxis=_useState4[1];// const [dateRangeProps, setdateRangeProps] = useState({\n//   fromDate: startDate,\n//   toDate: endDate,\n// });\nvar _useState5=useState(selectedEntityList),_useState6=_slicedToArray(_useState5,2),selectedEntities=_useState6[0],setselectedEntities=_useState6[1];var _useState7=useState(entityList),_useState8=_slicedToArray(_useState7,2),allEntityList=_useState8[0],setallEntityList=_useState8[1];var _useState9=useState(selectedEntityList.map(function(item){return item;})),_useState10=_slicedToArray(_useState9,2),title=_useState10[0],setTitle=_useState10[1];useEffect(function(){setallEntityList(allEntityList);setselectedEntities(selectedEntityList);getScoreOfSelectedEntity(selectedEntityList);setTitle(selectedEntityList.map(function(item){return item;}));},[selectedEntityList]);useEffect(function(){getScoreOfSelectedEntity();},[]);// useEffect(() => {\n//   const today = new Date();\n//   const defaultEndDate = today.toISOString().slice(0, 10);\n//   const oneYearAgo = new Date(\n//     today.getFullYear() - 1,\n//     today.getMonth(),\n//     today.getDate()\n//   );\n//   const defaultStartDate = oneYearAgo.toISOString().slice(0, 10);\n//   setTimeout(() => {\n//     setStartDate(defaultStartDate);\n//     setEndDate(defaultEndDate);\n//   }, 110);\n// }, []);\nvar getScoreOfSelectedEntity=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(selectedEntities){var _entityLists,_entityLists2;var entityLists,response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:entityLists=selectedEntities;if(((_entityLists=entityLists)===null||_entityLists===void 0?void 0:_entityLists.length)==0){entityLists=entityList===null||entityList===void 0?void 0:entityList.map(function(item){return item.label;});}if(((_entityLists2=entityLists)===null||_entityLists2===void 0?void 0:_entityLists2.length)>1){}_context.next=5;return getHttp(\"skills/skill-ranks\",{entityNames:entityLists.join(\",\")});case 5:response=_context.sent;_context.next=8;return drawChart(response);case 8:case\"end\":return _context.stop();}},_callee);}));return function getScoreOfSelectedEntity(_x){return _ref2.apply(this,arguments);};}();function drawChart(_x2){return _drawChart.apply(this,arguments);}function _drawChart(){_drawChart=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(responseData){var xAxisdata;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:// var dataOfChart = [\n//   {\n//     name: \"Improvement over last year\", //chartData?.map((company) => company.entityName),\n//     data: responseData?.map((company) => company.avg_score_diff),\n//   },\n// ];\nxAxisdata=responseData===null||responseData===void 0?void 0:responseData.map(function(company){return company.year;});setxAxis(xAxisdata);setchartData(responseData===null||responseData===void 0?void 0:responseData.map(function(company){return company.score;}));case 3:case\"end\":return _context2.stop();}},_callee2);}));return _drawChart.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{children:[(selectedEntities===null||selectedEntities===void 0?void 0:selectedEntities.length)==(entityList===null||entityList===void 0?void 0:entityList.length)?\"All\":selectedEntities.map(function(item){return item+\", \";}),/*#__PURE__*/_jsx(BarChart,{data:chartData,xAxis:xAxis,title:\"Analysis of score for last years\"+title,type:\"progress\"})]});};","map":{"version":3,"names":["React","useEffect","useState","BarChart","getHttp","Chart3","selectedEntityList","entityList","chartData","setchartData","xAxis","setxAxis","selectedEntities","setselectedEntities","allEntityList","setallEntityList","map","item","title","setTitle","getScoreOfSelectedEntity","entityLists","length","label","entityNames","join","response","drawChart","responseData","xAxisdata","company","year","score"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab3/Chart3.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BarChart } from \"../../../components/Graph/barChart/BarChart\";\nimport Component1 from \"../../../components/test/Component1\";\nimport { getHttp } from \"../../../service/APIRequest\";\n\ninterface Chart3Props {\n  startDate: any;\n  endDate: any;\n  selectedEntityList?: any;\n  entityList?: any;\n  //fetchChart3Data?: any;\n}\nexport const Chart3: React.FC<Chart3Props> = ({\n  // startDate,\n  // endDate,\n  selectedEntityList,\n  entityList,\n  // fetchChart3Data,\n}) => {\n  const [chartData, setchartData] = useState<any>();\n  const [xAxis, setxAxis] = useState([]);\n  // const [dateRangeProps, setdateRangeProps] = useState({\n  //   fromDate: startDate,\n  //   toDate: endDate,\n  // });\n\n  const [selectedEntities, setselectedEntities] =\n    useState<any>(selectedEntityList);\n  const [allEntityList, setallEntityList] = useState(entityList);\n\n  const [title, setTitle] = useState(selectedEntityList.map((item) => item));\n\n  useEffect(() => {\n    setallEntityList(allEntityList);\n    setselectedEntities(selectedEntityList);\n    getScoreOfSelectedEntity(selectedEntityList);\n    setTitle(selectedEntityList.map((item) => item));\n  }, [selectedEntityList]);\n\n  useEffect(() => {\n    getScoreOfSelectedEntity();\n  }, []);\n\n  // useEffect(() => {\n  //   const today = new Date();\n  //   const defaultEndDate = today.toISOString().slice(0, 10);\n  //   const oneYearAgo = new Date(\n  //     today.getFullYear() - 1,\n  //     today.getMonth(),\n  //     today.getDate()\n  //   );\n  //   const defaultStartDate = oneYearAgo.toISOString().slice(0, 10);\n  //   setTimeout(() => {\n  //     setStartDate(defaultStartDate);\n  //     setEndDate(defaultEndDate);\n  //   }, 110);\n  // }, []);\n\n  const getScoreOfSelectedEntity = async (selectedEntities?) => {\n    var entityLists = selectedEntities;\n    if (entityLists?.length == 0) {\n      entityLists = entityList?.map((item) => item.label);\n    }\n    if (entityLists?.length > 1) {\n    }\n    const response = await getHttp(\"skills/skill-ranks\", {\n      entityNames: entityLists.join(\",\"),\n    });\n    await drawChart(response);\n    //fetchChart3Data(response);\n  };\n\n  async function drawChart(responseData?) {\n    // var dataOfChart = [\n    //   {\n    //     name: \"Improvement over last year\", //chartData?.map((company) => company.entityName),\n    //     data: responseData?.map((company) => company.avg_score_diff),\n    //   },\n    // ];\n    var xAxisdata = responseData?.map((company) => company.year);\n    setxAxis(xAxisdata);\n    setchartData(responseData?.map((company) => company.score));\n  }\n\n  return (\n    <div>\n      {selectedEntities?.length == entityList?.length\n        ? \"All\"\n        : selectedEntities.map((item) => item + \", \")}\n      <BarChart\n        data={chartData}\n        xAxis={xAxis}\n        title={\"Analysis of score for last years\" + title}\n        type=\"progress\"\n      />\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}