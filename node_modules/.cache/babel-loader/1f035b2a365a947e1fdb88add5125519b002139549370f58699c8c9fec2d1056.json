{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab3/Chart2.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport DropDown from \"../../../components/dropDown/DropDown\";\nimport LineChart from \"../../../components/Graph/lineChart/LineChart\";\nimport { getHttp } from \"../../../service/APIRequest\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chart2 = _ref => {\n  _s();\n  let {\n    startDate,\n    endDate\n  } = _ref;\n  console.log(startDate, endDate);\n  const [selectList1Entity, setSelectList1Entity] = useState();\n  const [selectList2Entity, setSelectList2Entity] = useState();\n  const [chartData, setchartData] = useState([]);\n  const [xAxis, setxAxis] = useState([]);\n  const [selectedOption1, setSelectedOption1] = useState(null);\n  const [selectedOption2, setSelectedOption2] = useState(null);\n  const [dateRangeProps, setdateRangeProps] = useState({\n    fromDate: startDate,\n    toDate: endDate\n  });\n  useEffect(() => {\n    console.log(\"-===\", dateRangeProps);\n  }, [startDate, endDate, dateRangeProps]);\n  useEffect(() => {\n    getEntityList();\n  }, []);\n  const getEntityList = async () => {\n    const response = await getHttp(\"entity/getAll\");\n    await setSelectList1Entity(response);\n    await setSelectList2Entity(response);\n    //setentityListForDropDown(response);\n  };\n\n  function handleChange1Value(selectedOption) {\n    console.log(selectedOption);\n    // setSelectedOption1(selectedOption);\n    // setSelectedOption2((prevSelectedOption2) => {\n    //   if (\n    //     selectedOption &&\n    //     selectedOption.value === prevSelectedOption2?.value\n    //   ) {\n    //     return null;\n    //   }\n    //   return prevSelectedOption2;\n    // });\n    getScoreOfSelectedEntity(selectedOption.label);\n  }\n  function handleChange2Value(selectedOption) {\n    console.log(selectedOption);\n    getScoreOfSelectedEntity(selectedOption.label);\n    // setSelectedOption2(selectedOption);\n    // // Disable or hide the selected option in the first dropdown\n    // setSelectedOption1((prevSelectedOption1) => {\n    //   if (\n    //     selectedOption &&\n    //     selectedOption.value === prevSelectedOption1?.value\n    //   ) {\n    //     return null;\n    //   }\n    //   return prevSelectedOption1;\n    // });\n  }\n\n  async function drawChart(responseData) {\n    var dataOfOneChart = {\n      name: responseData[0].companyName,\n      data: responseData[0].monthlyAverages.map(monthlyAverage => {\n        return monthlyAverage.averageScore;\n      })\n    };\n    var xAxisdata = responseData[0].monthlyAverages.map(monthlyAverage => {\n      return monthlyAverage.month;\n    });\n    setxAxis(xAxisdata);\n    console.log(dataOfOneChart);\n    setchartData(prevState => [...prevState, dataOfOneChart]);\n  }\n  const getScoreOfSelectedEntity = async entityName => {\n    console.log(dateRangeProps);\n    const response = await getHttp(\"skills/averageScoreOfEntity\", {\n      startDate: startDate,\n      endDate: endDate,\n      entityName: entityName\n    });\n    console.log(response);\n    drawChart(response);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DropDown, {\n      value: selectedOption1,\n      mainList: selectList1Entity,\n      name: \"First Entity\",\n      onChangeDropDownItem: handleChange1Value,\n      isMulti: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n      value: selectedOption2,\n      mainList: selectList2Entity,\n      name: \"Second Entity\",\n      onChangeDropDownItem: handleChange2Value,\n      isMulti: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n      data: chartData,\n      xAxis: xAxis\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(Chart2, \"hfi1DS1A2sfZSaNRAPUIzAYgcgc=\");\n_c = Chart2;\nexport default Chart2;\nvar _c;\n$RefreshReg$(_c, \"Chart2\");","map":{"version":3,"names":["React","useEffect","useState","DropDown","LineChart","getHttp","Chart2","startDate","endDate","console","log","selectList1Entity","setSelectList1Entity","selectList2Entity","setSelectList2Entity","chartData","setchartData","xAxis","setxAxis","selectedOption1","setSelectedOption1","selectedOption2","setSelectedOption2","dateRangeProps","setdateRangeProps","fromDate","toDate","getEntityList","response","handleChange1Value","selectedOption","getScoreOfSelectedEntity","label","handleChange2Value","drawChart","responseData","dataOfOneChart","name","companyName","data","monthlyAverages","map","monthlyAverage","averageScore","xAxisdata","month","prevState","entityName"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab3/Chart2.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport DropDown from \"../../../components/dropDown/DropDown\";\nimport LineChart from \"../../../components/Graph/lineChart/LineChart\";\nimport { getHttp } from \"../../../service/APIRequest\";\n\ninterface Chart2Props {\n  startDate: any;\n  endDate: any;\n}\nconst Chart2: React.FC<Chart2Props> = ({ startDate, endDate }) => {\n  console.log(startDate, endDate);\n  const [selectList1Entity, setSelectList1Entity] = useState();\n  const [selectList2Entity, setSelectList2Entity] = useState();\n  const [chartData, setchartData] = useState([]);\n  const [xAxis, setxAxis] = useState([]);\n  const [selectedOption1, setSelectedOption1] = useState(null);\n  const [selectedOption2, setSelectedOption2] = useState(null);\n  const [dateRangeProps, setdateRangeProps] = useState({\n    fromDate: startDate,\n    toDate: endDate,\n  });\n\n  useEffect(() => {\n    console.log(\"-===\", dateRangeProps);\n  }, [startDate, endDate, dateRangeProps]);\n\n  useEffect(() => {\n    getEntityList();\n  }, []);\n\n  const getEntityList = async () => {\n    const response = await getHttp(\"entity/getAll\");\n    await setSelectList1Entity(response);\n    await setSelectList2Entity(response);\n    //setentityListForDropDown(response);\n  };\n\n  function handleChange1Value(selectedOption) {\n    console.log(selectedOption);\n    // setSelectedOption1(selectedOption);\n    // setSelectedOption2((prevSelectedOption2) => {\n    //   if (\n    //     selectedOption &&\n    //     selectedOption.value === prevSelectedOption2?.value\n    //   ) {\n    //     return null;\n    //   }\n    //   return prevSelectedOption2;\n    // });\n    getScoreOfSelectedEntity(selectedOption.label);\n  }\n\n  function handleChange2Value(selectedOption) {\n    console.log(selectedOption);\n    getScoreOfSelectedEntity(selectedOption.label);\n    // setSelectedOption2(selectedOption);\n    // // Disable or hide the selected option in the first dropdown\n    // setSelectedOption1((prevSelectedOption1) => {\n    //   if (\n    //     selectedOption &&\n    //     selectedOption.value === prevSelectedOption1?.value\n    //   ) {\n    //     return null;\n    //   }\n    //   return prevSelectedOption1;\n    // });\n  }\n\n  async function drawChart(responseData) {\n    var dataOfOneChart = {\n      name: responseData[0].companyName,\n      data: responseData[0].monthlyAverages.map((monthlyAverage) => {\n        return monthlyAverage.averageScore;\n      }),\n    };\n    var xAxisdata = responseData[0].monthlyAverages.map((monthlyAverage) => {\n      return monthlyAverage.month;\n    });\n    setxAxis(xAxisdata);\n    console.log(dataOfOneChart);\n    setchartData((prevState) => [...prevState, dataOfOneChart]);\n  }\n\n  const getScoreOfSelectedEntity = async (entityName) => {\n    console.log(dateRangeProps);\n    const response = await getHttp(\"skills/averageScoreOfEntity\", {\n      startDate: startDate,\n      endDate: endDate,\n      entityName: entityName,\n    });\n    console.log(response);\n    drawChart(response);\n  };\n\n  return (\n    <div>\n      <DropDown\n        value={selectedOption1}\n        mainList={selectList1Entity}\n        name=\"First Entity\"\n        onChangeDropDownItem={handleChange1Value}\n        isMulti={false}\n      />\n      <DropDown\n        value={selectedOption2}\n        mainList={selectList2Entity}\n        name=\"Second Entity\"\n        onChangeDropDownItem={handleChange2Value}\n        isMulti={false}\n      />\n      <LineChart data={chartData} xAxis={xAxis} />\n    </div>\n  );\n};\n\nexport default Chart2;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}