{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/login/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./Login.css\";\nimport { getHttp, postHttp } from \"../../service/APIRequest\";\nimport { useHistory } from \"react-router-dom\";\nimport ErrorComponent from \"../../components/errorComponent/ErrorComponent\";\nimport { getUserApi, loginApi } from \"../../service/Config\";\nimport Store from \"../../redux/Store\";\nimport { createUserDetails } from \"../../redux/features/userDetailsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const history = useHistory();\n  const [loginFormData, setloginFormData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const textBoxRef = useRef(null);\n  useEffect(() => {\n    if (textBoxRef.current) {\n      textBoxRef.current.focus();\n    }\n  }, []);\n  const handleLogin = async () => {\n    if (!username || !password) {\n      // Display an error message for empty fields\n      setErrorMessage(\"Username and password are required.\");\n      return;\n    }\n    setErrorMessage(\"\");\n    try {\n      const response = await postHttp(loginApi, {\n        username,\n        password\n      }).then();\n      console.log(response);\n      if (response) {\n        console.log(response);\n        if ((response === null || response === void 0 ? void 0 : response.status) >= 200 && (response === null || response === void 0 ? void 0 : response.status) < 300) {\n          getUserDetails(username);\n        } else if ((response === null || response === void 0 ? void 0 : response.status) == 403) {\n          console.log(\"-------\");\n          setErrorMessage(\"jsdk\");\n        }\n      }\n      // }\n    } catch (error) {\n      console.error(\"Login failed\", error);\n      setErrorMessage(error);\n    }\n  };\n  const getUserDetails = async user => {\n    const userResponse = await getHttp(getUserApi + user);\n    if (userResponse) {\n      sessionStorage.setItem(\"userDetails\", JSON.stringify(userResponse.data));\n      Store.dispatch(createUserDetails(JSON.stringify(userResponse.data)));\n      sessionStorage.setItem(\"loginStatus\", \"true\");\n      history.push(\"/\", userResponse.data);\n    }\n  };\n\n  // const handleUserTypeChange = (event) => {\n  //   setUserType(event.target.value);\n  //   if (event.target.value == \"user\") {\n  //     getEntityList();\n  //   }\n  // };\n\n  // const handleEntityChange = (event) => {\n  //   setSelectedEntity(event.target.value);\n\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"align-center\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          className: \"button\",\n          ref: textBoxRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"align-center\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-button\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(ErrorComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this)\n  // <UserLogin />\n  ;\n}\n_s(Login, \"3QiJbXLTCK6wEZ97PdQuR4p3Tr4=\", false, function () {\n  return [useHistory];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useRef","useState","getHttp","postHttp","useHistory","ErrorComponent","getUserApi","loginApi","Store","createUserDetails","Login","history","loginFormData","setloginFormData","username","password","setUsername","setPassword","errorMessage","setErrorMessage","textBoxRef","current","focus","handleLogin","response","then","console","log","status","getUserDetails","error","user","userResponse","sessionStorage","setItem","JSON","stringify","data","dispatch","push","e","target","value"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/login/Login.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\n\nimport \"./Login.css\";\nimport { getHttp, postHttp } from \"../../service/APIRequest\";\nimport { useHistory } from \"react-router-dom\";\nimport ErrorComponent from \"../../components/errorComponent/ErrorComponent\";\nimport { getUserApi, loginApi } from \"../../service/Config\";\nimport Store from \"../../redux/Store\";\nimport { createUserDetails } from \"../../redux/features/userDetailsSlice\";\n\nfunction Login() {\n  const history = useHistory();\n  const [loginFormData, setloginFormData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const textBoxRef = useRef(null);\n\n  useEffect(() => {\n    if (textBoxRef.current) {\n      textBoxRef.current.focus();\n    }\n  }, []);\n\n  const handleLogin = async () => {\n    if (!username || !password) {\n      // Display an error message for empty fields\n      setErrorMessage(\"Username and password are required.\");\n      return;\n    }\n\n    setErrorMessage(\"\");\n    try {\n      const response = await postHttp(loginApi, {\n        username,\n        password,\n      }).then();\n      console.log(response);\n\n      if (response) {\n        console.log(response);\n        if (response?.status >= 200 && response?.status < 300) {\n          getUserDetails(username);\n        } else if (response?.status == 403) {\n          console.log(\"-------\");\n          setErrorMessage(\"jsdk\");\n        }\n      }\n      // }\n    } catch (error) {\n      console.error(\"Login failed\", error);\n      setErrorMessage(error);\n    }\n  };\n\n  const getUserDetails = async (user) => {\n    const userResponse = await getHttp(getUserApi + user);\n    if (userResponse) {\n      sessionStorage.setItem(\"userDetails\", JSON.stringify(userResponse.data));\n      Store.dispatch(createUserDetails(JSON.stringify(userResponse.data)));\n      sessionStorage.setItem(\"loginStatus\", \"true\");\n      history.push(\"/\", userResponse.data);\n    }\n  };\n\n  // const handleUserTypeChange = (event) => {\n  //   setUserType(event.target.value);\n  //   if (event.target.value == \"user\") {\n  //     getEntityList();\n  //   }\n  // };\n\n  // const handleEntityChange = (event) => {\n  //   setSelectedEntity(event.target.value);\n\n  // };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-form\">\n        <div className=\"display-flex\">\n          <div className=\"align-center\">Username</div>\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            className=\"button\"\n            ref={textBoxRef}\n          />\n        </div>\n        <div className=\"display-flex\">\n          <div className=\"align-center\">Password</div>\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"button\"\n          />\n        </div>\n\n        {/* <div className=\"display-flex\">\n          <div className=\"align-center\">User Type</div>\n\n          \n          <select\n            value={userType}\n            onChange={handleUserTypeChange}\n            className=\"new-user button\"\n          >\n            {userTypes.map((item, index) => (\n              <option key={index} value={item.label}>\n                {item.name}\n              </option>\n            ))}\n          </select>\n        </div> */}\n        {/* {userType === \"admin\" && (\n          <div className=\"display-flex\">\n            <div className=\"align-center\">Admin Type</div>\n            <select value={adminType} onChange={handleAdminTypeChange}>\n              <option value=\"main_admin\">Main Admin</option>\n              <option value=\"desc_admin\">Desc Admin</option>\n            </select>\n          </div>\n        )} */}\n\n        {/* {userType === \"user\" && (\n          <div className=\"display-flex\">\n            <div className=\"align-center\">Entity</div>\n            <select\n              value={selectedEntity}\n              onChange={handleEntityChange}\n              className=\"new-user button\"\n            >\n              {entityList?.map((item, index) => (\n                <option key={index} value={item.name}>\n                  {item.label}\n                </option>\n              ))}\n            </select>\n            \n          </div>\n        )} */}\n\n        <button className=\"login-button\" onClick={handleLogin}>\n          Login\n        </button>\n        {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n        <ErrorComponent />\n      </div>\n    </div>\n    // <UserLogin />\n  );\n}\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}