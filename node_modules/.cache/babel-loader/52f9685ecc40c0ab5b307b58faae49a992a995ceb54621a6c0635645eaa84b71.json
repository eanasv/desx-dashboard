{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/dateRangeFilter/DateRangeFilter.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getHttp } from \"../../service/APIRequest\";\nimport DateInput from \"../datePicker/DateInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DateRangeFilter = _ref => {\n  _s();\n  let {\n    FetchChartData\n  } = _ref;\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState(null);\n  const [endCalendarVisible, setEndCalendarVisible] = useState(false);\n  useEffect(() => {\n    const today = new Date();\n    const defaultStartDate = today.toISOString().slice(0, 10);\n    const oneYearAgo = new Date(today.getFullYear() - 1, today.getMonth(), today.getDate());\n    const defaultEndDate = oneYearAgo.toISOString().slice(0, 10);\n    setStartDate(defaultStartDate);\n    setEndDate(defaultStartDate);\n  }, []);\n  const filterData = async () => {\n    if (startDate && endDate) {\n      const response = await getHttp(\"skills/companyAverageScore\", {\n        startDate: startDate,\n        endDate: endDate\n      });\n      FetchChartData(response);\n      //await setMainCategoryListByCount(response);\n\n      return {\n        startDate,\n        endDate\n      };\n    }\n    return null;\n  };\n  function changeFilterStartDate(changeInStartDate) {\n    setEndCalendarVisible(true);\n    setStartDate(changeInStartDate);\n    setEndDate(changeInStartDate);\n  }\n  function changeFilterEndDate(changeInEndDate) {\n    setEndDate(changeInEndDate);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DateInput, {\n        maxDate: new Date().toISOString().substr(0, 10),\n        value: startDate,\n        dateChangeEvent: changeFilterStartDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), endCalendarVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DateInput, {\n        maxDate: new Date().toISOString().substr(0, 10),\n        value: endDate,\n        dateChangeEvent: changeFilterEndDate,\n        minDate: startDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: filterData,\n      children: \"Filter Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(DateRangeFilter, \"uZh02fIQaAEOEBx6nzN78QzRgvM=\");\n_c = DateRangeFilter;\nvar _c;\n$RefreshReg$(_c, \"DateRangeFilter\");","map":{"version":3,"names":["React","useEffect","useState","getHttp","DateInput","DateRangeFilter","FetchChartData","startDate","setStartDate","endDate","setEndDate","endCalendarVisible","setEndCalendarVisible","today","Date","defaultStartDate","toISOString","slice","oneYearAgo","getFullYear","getMonth","getDate","defaultEndDate","filterData","response","changeFilterStartDate","changeInStartDate","changeFilterEndDate","changeInEndDate","substr"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/dateRangeFilter/DateRangeFilter.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getHttp } from \"../../service/APIRequest\";\nimport DateInput from \"../datePicker/DateInput\";\n\ninterface DateRangeFilterProps {\n  FetchChartData: any;\n}\nexport const DateRangeFilter: React.FC<DateRangeFilterProps> = ({\n  FetchChartData,\n}) => {\n  const [startDate, setStartDate] = useState<any>();\n  const [endDate, setEndDate] = useState(null);\n  const [endCalendarVisible, setEndCalendarVisible] = useState(false);\n\n  useEffect(() => {\n    const today = new Date();\n    const defaultStartDate = today.toISOString().slice(0, 10);\n    const oneYearAgo = new Date(\n      today.getFullYear() - 1,\n      today.getMonth(),\n      today.getDate()\n    );\n    const defaultEndDate = oneYearAgo.toISOString().slice(0, 10);\n    setStartDate(defaultStartDate);\n    setEndDate(defaultStartDate);\n  }, []);\n\n  const filterData = async () => {\n    if (startDate && endDate) {\n      const response = await getHttp(\"skills/companyAverageScore\", {\n        startDate: startDate,\n        endDate: endDate,\n      });\n      FetchChartData(response);\n      //await setMainCategoryListByCount(response);\n\n      return { startDate, endDate };\n    }\n    return null;\n  };\n\n  function changeFilterStartDate(changeInStartDate) {\n    setEndCalendarVisible(true);\n    setStartDate(changeInStartDate);\n    setEndDate(changeInStartDate);\n  }\n\n  function changeFilterEndDate(changeInEndDate) {\n    setEndDate(changeInEndDate);\n  }\n\n  return (\n    <div>\n      <div>\n        <label>Start Date:</label>\n        <DateInput\n          maxDate={new Date().toISOString().substr(0, 10)}\n          value={startDate}\n          dateChangeEvent={changeFilterStartDate}\n        />\n      </div>\n      {endCalendarVisible && (\n        <div>\n          <label>End Date:</label>\n          <DateInput\n            maxDate={new Date().toISOString().substr(0, 10)}\n            value={endDate}\n            dateChangeEvent={changeFilterEndDate}\n            minDate={startDate}\n          />\n        </div>\n      )}\n      <button onClick={filterData}>Filter Data</button>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}