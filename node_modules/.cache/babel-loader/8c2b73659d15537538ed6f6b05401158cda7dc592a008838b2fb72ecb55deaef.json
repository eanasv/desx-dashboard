{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/barChart/BarChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { getHttp } from \"../../../service/APIRequest\";\nimport \"../Chart.css\";\nimport \"./BarChartPopup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const BarChart = _ref => {\n  _s();\n  let {\n    data,\n    xAxis,\n    title,\n    name,\n    width,\n    subTitle\n  } = _ref;\n  const [dataSeries, setdataSeries] = useState([{\n    name: title,\n    //will be displayed on the y-axis\n    data: data\n  }]);\n  const [popupPosition, setPopupPosition] = useState(null);\n  const [popupData, setPopupData] = useState(null);\n  const [option, setOption] = useState({\n    legend: {\n      show: false\n    },\n    chart: {\n      events: {\n        dataPointSelection: function (event, chartContext, config) {\n          const dataPointIndex = config.dataPointIndex;\n          const chartContainer = document.querySelector(\".bar-chart\");\n          const containerRect = chartContainer.getBoundingClientRect();\n          const selectedXValue = option.xaxis.categories[dataPointIndex];\n          // const barElement = chartContext.globals.series.bars[dataPointIndex];\n\n          // const barCenterX =\n          //   barElement.x.baseVal.value + barElement.width.baseVal.value / 2;\n          // const barY = barElement.y.baseVal.value;\n          // const popupX = barCenterX + containerRect.left;\n          // const popupY = barY + containerRect.top;\n          eachBarClick(event, chartContext, config, selectedXValue\n          // popupX,\n          // popupY\n          );\n        }\n      }\n    },\n\n    xaxis: {\n      categories: xAxis\n    },\n    title: {\n      text: title,\n      style: {\n        fontSize: \"14px\",\n        fontWeight: \"bold\",\n        fontFamily: \"Bukra\",\n        color: \"black\"\n      }\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: 50,\n        colors: {\n          ranges: [{\n            from: -100,\n            to: 0,\n            color: \"#b70849\"\n          }, {\n            from: 0,\n            to: 100,\n            color: \"#1034a6\"\n          }]\n        }\n      }\n    },\n    // dataLabels: {\n    //   enabled: true,\n    //   formatter: function (val, opts) {\n    //     const isPositive = val >= 0;\n    //     return isPositive && type == \"progress\" ? `+${val}` : val.toString();\n    //   },\n    // },\n    yaxis: {\n      forceNiceScale: true,\n      labels: {\n        formatter: function (val) {\n          return Math.round(val);\n        }\n      }\n    }\n  });\n  useEffect(() => {\n    if (data) {\n      setdataSeries([{\n        name: name,\n        data: data\n      }]);\n    }\n  }, [data]);\n  useEffect(() => {\n    //setdataSeries(data);\n    //if (data) {\n    //const categories = data.map((item) => item);\n    setOption(prevState => ({\n      ...prevState,\n      title: {\n        text: title\n      },\n      xaxis: {\n        categories: xAxis\n      }\n    }));\n\n    //\n    //}\n  }, [xAxis]);\n  function eachBarClick(event, chartContext, config, value) {\n    console.log(value, subTitle);\n    const response = getHttp(\"employeeByEntityAndSubcat\", {\n      entity: value,\n      subcat: subTitle\n    }).then(response => {\n      console.log(response);\n      setPopupData(response);\n      //setPopupPosition({ popupX: popupX, popupY: popupY });\n    }).catch(error => {\n      console.log(error);\n      // handle error\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bar-chart\",\n    children: [/*#__PURE__*/_jsxDEV(Chart, {\n      options: option,\n      series: dataSeries,\n      type: \"bar\",\n      height: 350,\n      width: width ? 550 : \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), popupData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\"\n      // style={{ left: popupPosition.popupX, top: popupPosition.popupY }}\n      ,\n      children: [popupData.map((data, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [data.name, \"- \", data.job]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(BarChart, \"HgeZXMvJsGnlnAPRRsmmCgpfYcI=\");\n_c = BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useEffect","useState","Chart","getHttp","BarChart","data","xAxis","title","name","width","subTitle","dataSeries","setdataSeries","popupPosition","setPopupPosition","popupData","setPopupData","option","setOption","legend","show","chart","events","dataPointSelection","event","chartContext","config","dataPointIndex","chartContainer","document","querySelector","containerRect","getBoundingClientRect","selectedXValue","xaxis","categories","eachBarClick","text","style","fontSize","fontWeight","fontFamily","color","plotOptions","bar","columnWidth","colors","ranges","from","to","yaxis","forceNiceScale","labels","formatter","val","Math","round","prevState","value","console","log","response","entity","subcat","then","catch","error","map","index","job"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/barChart/BarChart.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { getHttp } from \"../../../service/APIRequest\";\nimport \"../Chart.css\";\nimport \"./BarChartPopup.css\";\n\ninterface BarChartInterface {\n  data;\n  xAxis;\n  title;\n  name?;\n  width?: any;\n  subTitle?: String;\n}\n\nexport const BarChart: React.FC<BarChartInterface> = ({\n  data,\n  xAxis,\n  title,\n  name,\n  width,\n  subTitle,\n}) => {\n  const [dataSeries, setdataSeries] = useState<any>([\n    {\n      name: title, //will be displayed on the y-axis\n      data: data,\n    },\n  ]);\n  const [popupPosition, setPopupPosition] = useState(null);\n  const [popupData, setPopupData] = useState(null);\n  const [option, setOption] = useState<any>({\n    legend: {\n      show: false,\n    },\n    chart: {\n      events: {\n        dataPointSelection: function (event, chartContext, config) {\n          const dataPointIndex = config.dataPointIndex;\n          const chartContainer = document.querySelector(\".bar-chart\");\n\n          const containerRect = chartContainer.getBoundingClientRect();\n\n          const selectedXValue = option.xaxis.categories[dataPointIndex];\n          // const barElement = chartContext.globals.series.bars[dataPointIndex];\n\n          // const barCenterX =\n          //   barElement.x.baseVal.value + barElement.width.baseVal.value / 2;\n          // const barY = barElement.y.baseVal.value;\n          // const popupX = barCenterX + containerRect.left;\n          // const popupY = barY + containerRect.top;\n          eachBarClick(\n            event,\n            chartContext,\n            config,\n            selectedXValue\n            // popupX,\n            // popupY\n          );\n        },\n      },\n    },\n    xaxis: {\n      categories: xAxis,\n    },\n    title: {\n      text: title,\n      style: {\n        fontSize: \"14px\",\n        fontWeight: \"bold\",\n        fontFamily: \"Bukra\",\n        color: \"black\",\n      },\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: 50,\n        colors: {\n          ranges: [\n            {\n              from: -100,\n              to: 0,\n              color: \"#b70849\",\n            },\n            {\n              from: 0,\n              to: 100,\n              color: \"#1034a6\",\n            },\n          ],\n        },\n      },\n    },\n    // dataLabels: {\n    //   enabled: true,\n    //   formatter: function (val, opts) {\n    //     const isPositive = val >= 0;\n    //     return isPositive && type == \"progress\" ? `+${val}` : val.toString();\n    //   },\n    // },\n    yaxis: {\n      forceNiceScale: true,\n      labels: {\n        formatter: function (val) {\n          return Math.round(val);\n        },\n      },\n    },\n  });\n\n  useEffect(() => {\n    if (data) {\n      setdataSeries([\n        {\n          name: name,\n          data: data,\n        },\n      ]);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    //setdataSeries(data);\n    //if (data) {\n    //const categories = data.map((item) => item);\n    setOption((prevState) => ({\n      ...prevState,\n      title: {\n        text: title,\n      },\n      xaxis: {\n        categories: xAxis,\n      },\n    }));\n\n    //\n    //}\n  }, [xAxis]);\n\n  function eachBarClick(event, chartContext, config, value) {\n    console.log(value, subTitle);\n    const response = getHttp(\"employeeByEntityAndSubcat\", {\n      entity: value,\n      subcat: subTitle,\n    })\n      .then((response) => {\n        console.log(response);\n        setPopupData(response);\n        //setPopupPosition({ popupX: popupX, popupY: popupY });\n      })\n      .catch((error) => {\n        console.log(error);\n        // handle error\n      });\n  }\n\n  return (\n    <div className=\"bar-chart\">\n      <Chart\n        options={option}\n        series={dataSeries}\n        type=\"bar\"\n        height={350}\n        width={width ? 550 : \"100%\"}\n      />\n      {popupData && (\n        <div\n          className=\"popup\"\n          // style={{ left: popupPosition.popupX, top: popupPosition.popupY }}\n        >\n          {popupData.map((data, index) => (\n            <>\n              <p>\n                {data.name}- {data.job}\n              </p>\n            </>\n          ))}\n          <div className=\"popup-arrow\"></div>\n        </div>\n      )}\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}