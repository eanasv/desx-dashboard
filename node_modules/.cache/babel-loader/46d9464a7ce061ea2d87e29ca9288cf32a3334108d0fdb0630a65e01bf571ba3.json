{"ast":null,"code":"import _regeneratorRuntime from\"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _objectSpread from\"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import DropDown from\"../../../components/dropDown/DropDown\";import LineChart from\"../../../components/Graph/lineChart/LineChart\";import{getHttp}from\"../../../service/APIRequest\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Chart2=function Chart2(_ref){var startDate=_ref.startDate,endDate=_ref.endDate,entityListForDropDown=_ref.entityListForDropDown;var _useState=useState(entityListForDropDown),_useState2=_slicedToArray(_useState,2),selectList1Entity=_useState2[0],setSelectList1Entity=_useState2[1];var _useState3=useState(entityListForDropDown),_useState4=_slicedToArray(_useState3,2),selectList2Entity=_useState4[0],setSelectList2Entity=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),chartData=_useState6[0],setchartData=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),xAxis=_useState8[0],setxAxis=_useState8[1];var _useState9=useState({fromDate:startDate,toDate:endDate}),_useState10=_slicedToArray(_useState9,2),dateRangeProps=_useState10[0],setdateRangeProps=_useState10[1];var _useState11=useState({firstDValue:\"\",//firstDropDownValue,\nsecondDValue:\"\"//secondDropDownValue,\n}),_useState12=_slicedToArray(_useState11,2),dropdownValues=_useState12[0],setdropdownValues=_useState12[1];useEffect(function(){setSelectList1Entity(entityListForDropDown);setSelectList2Entity(entityListForDropDown);getScoreOfSelectedEntities(dropdownValues.firstDValue,dropdownValues.secondDValue);getScoreOfSelectedEntities(dropdownValues.secondDValue,dropdownValues.secondDValue);},[startDate,endDate,dateRangeProps]);useEffect(function(){setSelectList1Entity(entityListForDropDown);setSelectList2Entity(entityListForDropDown);},[entityListForDropDown]);// const getEntityList = async () => {\n//   const response = await getHttp(\"entity/getAll\");\n//   await setSelectList1Entity(response);\n//   await setSelectList2Entity(response);\n//   //setentityListForDropDown(response);\n// };\nfunction handleChange1Value(selectedOption){setdropdownValues(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{firstDValue:selectedOption.label});});if(dropdownValues.secondDValue){getScoreOfSelectedEntities(selectedOption.label,dropdownValues.secondDValue);}//getScoreOfSelectedEntity(selectedOption.label);\n}function handleChange2Value(selectedOption){setdropdownValues(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{secondDValue:selectedOption.label});});if(dropdownValues.firstDValue){getScoreOfSelectedEntities(dropdownValues.firstDValue,selectedOption.label);}//getScoreOfSelectedEntity(selectedOption.label);\n}// async function drawChart(responseData?) {\n//   var dataOfOneChart = {\n//     name: responseData[0]?.companyName,\n//     data: responseData[0]?.monthlyAverages?.map((monthlyAverage) => {\n//       return monthlyAverage.averageScore;\n//     }),\n//   };\n//   var xAxisdata = responseData[0].monthlyAverages?.map((monthlyAverage) => {\n//     return monthlyAverage.month;\n//   });\n//   setxAxis(xAxisdata);\n//   setchartData((prevState) => [...prevState, dataOfOneChart]);\n// }\nfunction drawChart(responseData1,responseData2){var _responseData1$,_responseData1$2,_responseData1$2$mont,_responseData2$,_responseData2$2,_responseData2$2$mont,_responseData1$0$mont;var dataOfOneChart1={name:(_responseData1$=responseData1[0])===null||_responseData1$===void 0?void 0:_responseData1$.companyName,data:(_responseData1$2=responseData1[0])===null||_responseData1$2===void 0?void 0:(_responseData1$2$mont=_responseData1$2.monthlyAverages)===null||_responseData1$2$mont===void 0?void 0:_responseData1$2$mont.map(function(monthlyAverage){return monthlyAverage.averageScore;})};var dataOfOneChart2={name:(_responseData2$=responseData2[0])===null||_responseData2$===void 0?void 0:_responseData2$.companyName,data:(_responseData2$2=responseData2[0])===null||_responseData2$2===void 0?void 0:(_responseData2$2$mont=_responseData2$2.monthlyAverages)===null||_responseData2$2$mont===void 0?void 0:_responseData2$2$mont.map(function(monthlyAverage){return monthlyAverage.averageScore;})};var xAxisData=(_responseData1$0$mont=responseData1[0].monthlyAverages)===null||_responseData1$0$mont===void 0?void 0:_responseData1$0$mont.map(function(monthlyAverage){return monthlyAverage.month;});setxAxis(xAxisData);setchartData([dataOfOneChart1,dataOfOneChart2]);}var getScoreOfSelectedEntities=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(entity1,entity2){var response1,response2;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:if(!(entity1&&entity2)){_context.next=8;break;}_context.next=3;return getHttp(\"skills/averageScoreOfEntity\",{startDate:startDate,endDate:endDate,entityName:entity1});case 3:response1=_context.sent;_context.next=6;return getHttp(\"skills/averageScoreOfEntity\",{startDate:startDate,endDate:endDate,entityName:entity2});case 6:response2=_context.sent;drawChart(response1,response2);case 8:case\"end\":return _context.stop();}},_callee);}));return function getScoreOfSelectedEntities(_x,_x2){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"drop-down-tab3\",children:[/*#__PURE__*/_jsx(DropDown,{mainList:selectList1Entity,name:\"First Entity\",onChangeDropDownItem:handleChange1Value,isMulti:false}),/*#__PURE__*/_jsx(DropDown,{mainList:selectList2Entity,name:\"Second Entity\",onChangeDropDownItem:handleChange2Value,isMulti:false})]}),/*#__PURE__*/_jsx(LineChart,{data:chartData,xAxis:xAxis,title:\"Compare 2 entities\"})]});};export default Chart2;","map":{"version":3,"names":["React","useEffect","useState","DropDown","LineChart","getHttp","Chart2","startDate","endDate","entityListForDropDown","selectList1Entity","setSelectList1Entity","selectList2Entity","setSelectList2Entity","chartData","setchartData","xAxis","setxAxis","fromDate","toDate","dateRangeProps","setdateRangeProps","firstDValue","secondDValue","dropdownValues","setdropdownValues","getScoreOfSelectedEntities","handleChange1Value","selectedOption","prevState","label","handleChange2Value","drawChart","responseData1","responseData2","dataOfOneChart1","name","companyName","data","monthlyAverages","map","monthlyAverage","averageScore","dataOfOneChart2","xAxisData","month","entity1","entity2","entityName","response1","response2"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab3/Chart2.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport DropDown from \"../../../components/dropDown/DropDown\";\nimport LineChart from \"../../../components/Graph/lineChart/LineChart\";\nimport { getHttp } from \"../../../service/APIRequest\";\n\ninterface Chart2Props {\n  startDate: any;\n  endDate: any;\n  entityListForDropDown: any;\n}\nconst Chart2: React.FC<Chart2Props> = ({\n  startDate,\n  endDate,\n  entityListForDropDown,\n}) => {\n  const [selectList1Entity, setSelectList1Entity] = useState(\n    entityListForDropDown\n  );\n  const [selectList2Entity, setSelectList2Entity] = useState(\n    entityListForDropDown\n  );\n  const [chartData, setchartData] = useState([]);\n  const [xAxis, setxAxis] = useState([]);\n  const [dateRangeProps, setdateRangeProps] = useState({\n    fromDate: startDate,\n    toDate: endDate,\n  });\n  const [dropdownValues, setdropdownValues] = useState({\n    firstDValue: \"\", //firstDropDownValue,\n    secondDValue: \"\", //secondDropDownValue,\n  });\n\n  useEffect(() => {\n    setSelectList1Entity(entityListForDropDown);\n    setSelectList2Entity(entityListForDropDown);\n    getScoreOfSelectedEntities(\n      dropdownValues.firstDValue,\n      dropdownValues.secondDValue\n    );\n    getScoreOfSelectedEntities(\n      dropdownValues.secondDValue,\n      dropdownValues.secondDValue\n    );\n  }, [startDate, endDate, dateRangeProps]);\n\n  useEffect(() => {\n    setSelectList1Entity(entityListForDropDown);\n    setSelectList2Entity(entityListForDropDown);\n  }, [entityListForDropDown]);\n\n  // const getEntityList = async () => {\n  //   const response = await getHttp(\"entity/getAll\");\n  //   await setSelectList1Entity(response);\n  //   await setSelectList2Entity(response);\n  //   //setentityListForDropDown(response);\n  // };\n\n  function handleChange1Value(selectedOption) {\n    setdropdownValues((prevState) => ({\n      ...prevState,\n      firstDValue: selectedOption.label,\n    }));\n    if (dropdownValues.secondDValue) {\n      getScoreOfSelectedEntities(\n        selectedOption.label,\n        dropdownValues.secondDValue\n      );\n    }\n    //getScoreOfSelectedEntity(selectedOption.label);\n  }\n\n  function handleChange2Value(selectedOption) {\n    setdropdownValues((prevState) => ({\n      ...prevState,\n      secondDValue: selectedOption.label,\n    }));\n    if (dropdownValues.firstDValue) {\n      getScoreOfSelectedEntities(\n        dropdownValues.firstDValue,\n        selectedOption.label\n      );\n    }\n    //getScoreOfSelectedEntity(selectedOption.label);\n  }\n\n  // async function drawChart(responseData?) {\n  //   var dataOfOneChart = {\n  //     name: responseData[0]?.companyName,\n  //     data: responseData[0]?.monthlyAverages?.map((monthlyAverage) => {\n  //       return monthlyAverage.averageScore;\n  //     }),\n  //   };\n  //   var xAxisdata = responseData[0].monthlyAverages?.map((monthlyAverage) => {\n  //     return monthlyAverage.month;\n  //   });\n  //   setxAxis(xAxisdata);\n  //   setchartData((prevState) => [...prevState, dataOfOneChart]);\n  // }\n\n  function drawChart(responseData1, responseData2) {\n    const dataOfOneChart1 = {\n      name: responseData1[0]?.companyName,\n      data: responseData1[0]?.monthlyAverages?.map((monthlyAverage) => {\n        return monthlyAverage.averageScore;\n      }),\n    };\n    const dataOfOneChart2 = {\n      name: responseData2[0]?.companyName,\n      data: responseData2[0]?.monthlyAverages?.map((monthlyAverage) => {\n        return monthlyAverage.averageScore;\n      }),\n    };\n    const xAxisData = responseData1[0].monthlyAverages?.map(\n      (monthlyAverage) => {\n        return monthlyAverage.month;\n      }\n    );\n    setxAxis(xAxisData);\n    setchartData([dataOfOneChart1, dataOfOneChart2]);\n  }\n\n  const getScoreOfSelectedEntities = async (entity1, entity2) => {\n    // if (entityName) {\n    //   const response = await getHttp(\"skills/averageScoreOfEntity\", {\n    //     startDate: startDate,\n    //     endDate: endDate,\n    //     entityName: entityName,\n    //   });\n    //   drawChart(response);\n    // } else {\n    //   drawChart();\n    // }\n\n    if (entity1 && entity2) {\n      const response1 = await getHttp(\"skills/averageScoreOfEntity\", {\n        startDate: startDate,\n        endDate: endDate,\n        entityName: entity1,\n      });\n      const response2 = await getHttp(\"skills/averageScoreOfEntity\", {\n        startDate: startDate,\n        endDate: endDate,\n        entityName: entity2,\n      });\n      drawChart(response1, response2);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"drop-down-tab3\">\n        <DropDown\n          mainList={selectList1Entity}\n          name=\"First Entity\"\n          onChangeDropDownItem={handleChange1Value}\n          isMulti={false}\n        />\n        <DropDown\n          mainList={selectList2Entity}\n          name=\"Second Entity\"\n          onChangeDropDownItem={handleChange2Value}\n          isMulti={false}\n        />\n      </div>\n      <LineChart data={chartData} xAxis={xAxis} title=\"Compare 2 entities\" />\n    </div>\n  );\n};\n\nexport default Chart2;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}