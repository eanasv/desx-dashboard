{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/donutChart/DonutChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport \"../Chart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DonutChart = _ref => {\n  _s();\n  let {\n    details,\n    heading\n  } = _ref;\n  var data1 = {\n    labels: details === null || details === void 0 ? void 0 : details.map(item => item.category),\n    datasets: [{\n      label: \"# of Employees\",\n      data: details === null || details === void 0 ? void 0 : details.map(item => item.count),\n      backgroundColor: [\"#a2d6c4\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\"],\n      borderColor: [\"white\", \"white\", \"white\"],\n      borderWidth: 3\n    }]\n    // options: {\n    //   plugins: {\n    //     datalabels: {\n    //       formatter: (value) => {\n    //         console.log(value);\n    //         return value + \"%\";\n    //       },\n    //     },\n    //   },\n    // },\n  };\n\n  const [display, setDisplay] = useState(false);\n  const data = {\n    options: {\n      labels: details === null || details === void 0 ? void 0 : details.map(item => \"\" + item.category),\n      tooltip: {\n        custom: function (_ref2) {\n          let {\n            series,\n            seriesIndex,\n            dataPointIndex,\n            w\n          } = _ref2;\n          return '<div class=\"custom-tooltip\">' + \"<span># of Employees<br/>\" + w.config.labels[seriesIndex] + \" - </span>\" + \"<span>\" + series[seriesIndex] + \"</span>\" + \"</div>\";\n        }\n      },\n      responsive: [{\n        breakpoint: 480,\n        options: {\n          chart: {\n            width: 200\n          },\n          legend: {\n            show: true,\n            position: \"bottom\"\n          }\n        }\n      }]\n    },\n    series: details === null || details === void 0 ? void 0 : details.map(item => item.count)\n  };\n  const [series, setSeries] = useState(details === null || details === void 0 ? void 0 : details.map(item => item.count));\n  const [options, setOptions] = useState({\n    labels: [],\n    tooltip: {},\n    responsive: [{\n      breakpoint: 480,\n      options: {\n        chart: {\n          width: 200\n        },\n        legend: {\n          show: true,\n          position: \"bottom\"\n        }\n      }\n    }]\n  });\n  useEffect(() => {\n    setOptions({\n      labels: details === null || details === void 0 ? void 0 : details.map(item => \"\" + item.category),\n      tooltip: {\n        custom: function (_ref3) {\n          let {\n            series,\n            seriesIndex,\n            dataPointIndex,\n            w\n          } = _ref3;\n          return '<div class=\"custom-tooltip\">' + \"<span># of Employees<br/>\" + w.config.labels[seriesIndex] + \" - </span>\" + \"<span>\" + series[seriesIndex] + \"</span>\" + \"</div>\";\n        }\n      },\n      responsive: [{\n        breakpoint: 480,\n        options: {\n          chart: {\n            width: 200\n          },\n          legend: {\n            show: true,\n            position: \"bottom\"\n          }\n        }\n      }]\n    });\n  }, [details]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      hidden: (details === null || details === void 0 ? void 0 : details.length) <= 0\n      //className={multiLayer ? \"center-heading\" : \"\"}\n      ,\n      children: heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mixed-chart\",\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        options: options,\n        series: series,\n        type: \"donut\",\n        width: \"500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(DonutChart, \"cMw9jWlT2GTYqUpSWRsXtpA63ns=\");\n_c = DonutChart;\nexport default DonutChart;\nvar _c;\n$RefreshReg$(_c, \"DonutChart\");","map":{"version":3,"names":["React","useEffect","useState","Chart","DonutChart","details","heading","data1","labels","map","item","category","datasets","label","data","count","backgroundColor","borderColor","borderWidth","display","setDisplay","options","tooltip","custom","series","seriesIndex","dataPointIndex","w","config","responsive","breakpoint","chart","width","legend","show","position","setSeries","setOptions","length"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/donutChart/DonutChart.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\nimport \"../Chart.css\";\n\ninterface donutChartInterface {\n  details?: any;\n  heading: String;\n}\n\nconst DonutChart: React.FC<donutChartInterface> = ({ details, heading }) => {\n  var data1 = {\n    labels: details?.map((item) => item.category),\n    datasets: [\n      {\n        label: \"# of Employees\",\n        data: details?.map((item) => item.count),\n        backgroundColor: [\n          \"#a2d6c4\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n        ],\n        borderColor: [\"white\", \"white\", \"white\"],\n        borderWidth: 3,\n      },\n    ],\n    // options: {\n    //   plugins: {\n    //     datalabels: {\n    //       formatter: (value) => {\n    //         console.log(value);\n    //         return value + \"%\";\n    //       },\n    //     },\n    //   },\n    // },\n  };\n\n  const [display, setDisplay] = useState(false);\n  const data = {\n    options: {\n      labels: details?.map((item) => \"\" + item.category),\n      tooltip: {\n        custom: function ({ series, seriesIndex, dataPointIndex, w }) {\n          return (\n            '<div class=\"custom-tooltip\">' +\n            \"<span># of Employees<br/>\" +\n            w.config.labels[seriesIndex] +\n            \" - </span>\" +\n            \"<span>\" +\n            series[seriesIndex] +\n            \"</span>\" +\n            \"</div>\"\n          );\n        },\n      },\n      responsive: [\n        {\n          breakpoint: 480,\n          options: {\n            chart: {\n              width: 200,\n            },\n            legend: {\n              show: true,\n              position: \"bottom\",\n            },\n          },\n        },\n      ],\n    },\n    series: details?.map((item) => item.count),\n  };\n\n  const [series, setSeries] = useState(details?.map((item) => item.count));\n  const [options, setOptions] = useState({\n    labels: [],\n    tooltip: {},\n    responsive: [\n      {\n        breakpoint: 480,\n        options: {\n          chart: {\n            width: 200,\n          },\n          legend: {\n            show: true,\n            position: \"bottom\",\n          },\n        },\n      },\n    ],\n  });\n\n  useEffect(() => {\n    setOptions({\n      labels: details?.map((item) => \"\" + item.category),\n      tooltip: {\n        custom: function ({ series, seriesIndex, dataPointIndex, w }) {\n          return (\n            '<div class=\"custom-tooltip\">' +\n            \"<span># of Employees<br/>\" +\n            w.config.labels[seriesIndex] +\n            \" - </span>\" +\n            \"<span>\" +\n            series[seriesIndex] +\n            \"</span>\" +\n            \"</div>\"\n          );\n        },\n      },\n      responsive: [\n        {\n          breakpoint: 480,\n          options: {\n            chart: {\n              width: 200,\n            },\n            legend: {\n              show: true,\n              position: \"bottom\",\n            },\n          },\n        },\n      ],\n    });\n  }, [details]);\n\n  return (\n    <div>\n      <div\n        hidden={details?.length <= 0}\n        //className={multiLayer ? \"center-heading\" : \"\"}\n      >\n        {heading}\n      </div>\n\n      <div className=\"mixed-chart\">\n        <Chart options={options} series={series} type=\"donut\" width=\"500\" />\n      </div>\n    </div>\n  );\n};\n\nexport default DonutChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}