{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab3/Chart3.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { BarChart } from \"../../../components/Graph/barChart/BarChart\";\nimport { getHttp } from \"../../../service/APIRequest\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Chart3 = _ref => {\n  _s();\n  let {\n    // startDate,\n    // endDate,\n    selectedEntityList,\n    entityList\n    // fetchChart3Data,\n  } = _ref;\n  const [chartData, setchartData] = useState();\n  const [xAxis, setxAxis] = useState([]);\n  // const [dateRangeProps, setdateRangeProps] = useState({\n  //   fromDate: startDate,\n  //   toDate: endDate,\n  // });\n\n  const [selectedEntities, setselectedEntities] = useState(selectedEntityList);\n  const [allEntityList, setallEntityList] = useState(entityList);\n  const [title, setTitle] = useState(selectedEntityList.map(item => item));\n  useEffect(() => {\n    setallEntityList(allEntityList);\n    setselectedEntities(selectedEntityList);\n    getScoreOfSelectedEntity(selectedEntityList);\n    setTitle(selectedEntityList.map(item => item));\n  }, [selectedEntityList]);\n  useEffect(() => {\n    getScoreOfSelectedEntity();\n  }, []);\n\n  // useEffect(() => {\n  //   const today = new Date();\n  //   const defaultEndDate = today.toISOString().slice(0, 10);\n  //   const oneYearAgo = new Date(\n  //     today.getFullYear() - 1,\n  //     today.getMonth(),\n  //     today.getDate()\n  //   );\n  //   const defaultStartDate = oneYearAgo.toISOString().slice(0, 10);\n  //   setTimeout(() => {\n  //     setStartDate(defaultStartDate);\n  //     setEndDate(defaultEndDate);\n  //   }, 110);\n  // }, []);\n\n  const getScoreOfSelectedEntity = async selectedEntities => {\n    var _entityLists, _entityLists2;\n    var entityLists = selectedEntities;\n    if (((_entityLists = entityLists) === null || _entityLists === void 0 ? void 0 : _entityLists.length) == 0) {\n      entityLists = entityList === null || entityList === void 0 ? void 0 : entityList.map(item => item.label);\n    }\n    if (((_entityLists2 = entityLists) === null || _entityLists2 === void 0 ? void 0 : _entityLists2.length) > 1) {}\n    const response = await getHttp(\"skills/skill-ranks\", {\n      entityNames: entityLists.join(\",\")\n    });\n    await drawChart(response);\n    //fetchChart3Data(response);\n  };\n\n  async function drawChart(responseData) {\n    // var dataOfChart = [\n    //   {\n    //     name: \"Improvement over last year\", //chartData?.map((company) => company.entityName),\n    //     data: responseData?.map((company) => company.avg_score_diff),\n    //   },\n    // ];\n    var xAxisdata = responseData === null || responseData === void 0 ? void 0 : responseData.map(company => company.year);\n    setxAxis(xAxisdata);\n    setchartData(responseData === null || responseData === void 0 ? void 0 : responseData.map(company => company.score));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [(selectedEntities === null || selectedEntities === void 0 ? void 0 : selectedEntities.length) == (entityList === null || entityList === void 0 ? void 0 : entityList.length) ? \"All\" : selectedEntities.map(item => item + \", \"), /*#__PURE__*/_jsxDEV(BarChart, {\n      data: chartData,\n      xAxis: xAxis,\n      title: \"Analysis of score for last years\",\n      name: \"Improvement over last year\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Chart3, \"omLdBttt3K4O/YDWzIpUq9nRAQ4=\");\n_c = Chart3;\nvar _c;\n$RefreshReg$(_c, \"Chart3\");","map":{"version":3,"names":["React","useEffect","useState","BarChart","getHttp","Chart3","selectedEntityList","entityList","chartData","setchartData","xAxis","setxAxis","selectedEntities","setselectedEntities","allEntityList","setallEntityList","title","setTitle","map","item","getScoreOfSelectedEntity","entityLists","length","label","response","entityNames","join","drawChart","responseData","xAxisdata","company","year","score"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab3/Chart3.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BarChart } from \"../../../components/Graph/barChart/BarChart\";\nimport Component1 from \"../../../components/test/Component1\";\nimport { getHttp } from \"../../../service/APIRequest\";\n\ninterface Chart3Props {\n  startDate: any;\n  endDate: any;\n  selectedEntityList?: any;\n  entityList?: any;\n  //fetchChart3Data?: any;\n}\nexport const Chart3: React.FC<Chart3Props> = ({\n  // startDate,\n  // endDate,\n  selectedEntityList,\n  entityList,\n  // fetchChart3Data,\n}) => {\n  const [chartData, setchartData] = useState<any>();\n  const [xAxis, setxAxis] = useState([]);\n  // const [dateRangeProps, setdateRangeProps] = useState({\n  //   fromDate: startDate,\n  //   toDate: endDate,\n  // });\n\n  const [selectedEntities, setselectedEntities] =\n    useState<any>(selectedEntityList);\n  const [allEntityList, setallEntityList] = useState(entityList);\n\n  const [title, setTitle] = useState(selectedEntityList.map((item) => item));\n\n  useEffect(() => {\n    setallEntityList(allEntityList);\n    setselectedEntities(selectedEntityList);\n    getScoreOfSelectedEntity(selectedEntityList);\n    setTitle(selectedEntityList.map((item) => item));\n  }, [selectedEntityList]);\n\n  useEffect(() => {\n    getScoreOfSelectedEntity();\n  }, []);\n\n  // useEffect(() => {\n  //   const today = new Date();\n  //   const defaultEndDate = today.toISOString().slice(0, 10);\n  //   const oneYearAgo = new Date(\n  //     today.getFullYear() - 1,\n  //     today.getMonth(),\n  //     today.getDate()\n  //   );\n  //   const defaultStartDate = oneYearAgo.toISOString().slice(0, 10);\n  //   setTimeout(() => {\n  //     setStartDate(defaultStartDate);\n  //     setEndDate(defaultEndDate);\n  //   }, 110);\n  // }, []);\n\n  const getScoreOfSelectedEntity = async (selectedEntities?) => {\n    var entityLists = selectedEntities;\n    if (entityLists?.length == 0) {\n      entityLists = entityList?.map((item) => item.label);\n    }\n    if (entityLists?.length > 1) {\n    }\n    const response = await getHttp(\"skills/skill-ranks\", {\n      entityNames: entityLists.join(\",\"),\n    });\n    await drawChart(response);\n    //fetchChart3Data(response);\n  };\n\n  async function drawChart(responseData?) {\n    // var dataOfChart = [\n    //   {\n    //     name: \"Improvement over last year\", //chartData?.map((company) => company.entityName),\n    //     data: responseData?.map((company) => company.avg_score_diff),\n    //   },\n    // ];\n    var xAxisdata = responseData?.map((company) => company.year);\n    setxAxis(xAxisdata);\n    setchartData(responseData?.map((company) => company.score));\n  }\n\n  return (\n    <div>\n      {selectedEntities?.length == entityList?.length\n        ? \"All\"\n        : selectedEntities.map((item) => item + \", \")}\n      <BarChart\n        data={chartData}\n        xAxis={xAxis}\n        title={\"Analysis of score for last years\"}\n        name=\"Improvement over last year\"\n      />\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,6CAA6C;AAEtE,SAASC,OAAO,QAAQ,6BAA6B;AAAC;AAStD,OAAO,MAAMC,MAA6B,GAAG,QAMvC;EAAA;EAAA,IANwC;IAC5C;IACA;IACAC,kBAAkB;IAClBC;IACA;EACF,CAAC;EACC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,EAAO;EACjD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC;EACA;EACA;EACA;;EAEA,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAC3CX,QAAQ,CAAMI,kBAAkB,CAAC;EACnC,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAACK,UAAU,CAAC;EAE9D,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAACI,kBAAkB,CAACY,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAAC,CAAC;EAE1ElB,SAAS,CAAC,MAAM;IACdc,gBAAgB,CAACD,aAAa,CAAC;IAC/BD,mBAAmB,CAACP,kBAAkB,CAAC;IACvCc,wBAAwB,CAACd,kBAAkB,CAAC;IAC5CW,QAAQ,CAACX,kBAAkB,CAACY,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAAC,CAAC;EAClD,CAAC,EAAE,CAACb,kBAAkB,CAAC,CAAC;EAExBL,SAAS,CAAC,MAAM;IACdmB,wBAAwB,EAAE;EAC5B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMA,wBAAwB,GAAG,MAAOR,gBAAiB,IAAK;IAAA;IAC5D,IAAIS,WAAW,GAAGT,gBAAgB;IAClC,IAAI,iBAAAS,WAAW,iDAAX,aAAaC,MAAM,KAAI,CAAC,EAAE;MAC5BD,WAAW,GAAGd,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEW,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACI,KAAK,CAAC;IACrD;IACA,IAAI,kBAAAF,WAAW,kDAAX,cAAaC,MAAM,IAAG,CAAC,EAAE,CAC7B;IACA,MAAME,QAAQ,GAAG,MAAMpB,OAAO,CAAC,oBAAoB,EAAE;MACnDqB,WAAW,EAAEJ,WAAW,CAACK,IAAI,CAAC,GAAG;IACnC,CAAC,CAAC;IACF,MAAMC,SAAS,CAACH,QAAQ,CAAC;IACzB;EACF,CAAC;;EAED,eAAeG,SAAS,CAACC,YAAa,EAAE;IACtC;IACA;IACA;IACA;IACA;IACA;IACA,IAAIC,SAAS,GAAGD,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEV,GAAG,CAAEY,OAAO,IAAKA,OAAO,CAACC,IAAI,CAAC;IAC5DpB,QAAQ,CAACkB,SAAS,CAAC;IACnBpB,YAAY,CAACmB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEV,GAAG,CAAEY,OAAO,IAAKA,OAAO,CAACE,KAAK,CAAC,CAAC;EAC7D;EAEA,oBACE;IAAA,WACG,CAAApB,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEU,MAAM,MAAIf,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEe,MAAM,IAC3C,KAAK,GACLV,gBAAgB,CAACM,GAAG,CAAEC,IAAI,IAAKA,IAAI,GAAG,IAAI,CAAC,eAC/C,QAAC,QAAQ;MACP,IAAI,EAAEX,SAAU;MAChB,KAAK,EAAEE,KAAM;MACb,KAAK,EAAE,kCAAmC;MAC1C,IAAI,EAAC;IAA4B;MAAA;MAAA;MAAA;IAAA,QACjC;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GArFWL,MAA6B;AAAA,KAA7BA,MAA6B;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}