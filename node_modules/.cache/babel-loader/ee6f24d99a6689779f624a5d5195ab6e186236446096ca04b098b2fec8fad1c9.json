{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/dateRangeFilter/DateRangeFilter.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport DateInput from \"../datePicker/DateInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DateRangeFilter = () => {\n  _s();\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState(null);\n  const [endCalendarVisible, setEndCalendarVisible] = useState(false);\n  useEffect(() => {\n    const today = new Date();\n    const defaultStartDate = today.toISOString().slice(0, 10);\n    setStartDate(defaultStartDate);\n  }, []);\n  const handleStartChange = date => {\n    setStartDate(date);\n    setEndCalendarVisible(true);\n  };\n  const handleEndChange = date => {\n    setEndDate(date);\n  };\n\n  //   const filterData = () => {\n  //     console.log(startDate, endDate);\n  //     if (startDate && endDate) {\n  //       const filteredData = data.filter(\n  //         (item) =>\n  //           new Date(item.date) >= new Date(startDate) &&\n  //           new Date(item.date) <= new Date(endDate)\n  //       );\n  //       console.log(filteredData);\n  //     }\n  //   };\n\n  const filterData = () => {\n    if (startDate && endDate) {\n      console.log(startDate, \"----------\", endDate);\n      return {\n        startDate,\n        endDate\n      };\n    }\n    return null;\n  };\n  const data = [{\n    id: 1,\n    date: \"2022-12-01\"\n  }, {\n    id: 2,\n    date: \"2023-02-01\"\n  }, {\n    id: 3,\n    date: \"2023-03-01\"\n  }, {\n    id: 4,\n    date: \"2023-04-01\"\n  }, {\n    id: 5,\n    date: \"2023-01-01\"\n  }];\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const renderCustomHeader = _ref => {\n    let {\n      date,\n      decreaseMonth,\n      increaseMonth\n    } = _ref;\n    const month = monthNames[date.getMonth()];\n    const year = date.getFullYear();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"prev\",\n        onClick: decreaseMonth,\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current\",\n        children: [month, \" \", year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next\",\n        onClick: increaseMonth,\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DateInput, {\n        maxDate: new Date().toISOString().substr(0, 10),\n        value: startDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: startDate\n        //value={new Date().toISOString().substr(0, 10)}\n        ,\n        onChange: event => {\n          setStartDate(event.target.value);\n          console.log(\"====\", event.target.value);\n        },\n        max: new Date().toISOString().substr(0, 10)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), endCalendarVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: filterData,\n      children: \"Filter Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(DateRangeFilter, \"uZh02fIQaAEOEBx6nzN78QzRgvM=\");\n_c = DateRangeFilter;\nvar _c;\n$RefreshReg$(_c, \"DateRangeFilter\");","map":{"version":3,"names":["React","useEffect","useState","DateInput","DateRangeFilter","startDate","setStartDate","endDate","setEndDate","endCalendarVisible","setEndCalendarVisible","today","Date","defaultStartDate","toISOString","slice","handleStartChange","date","handleEndChange","filterData","console","log","data","id","monthNames","renderCustomHeader","decreaseMonth","increaseMonth","month","getMonth","year","getFullYear","substr","event","target","value"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/dateRangeFilter/DateRangeFilter.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport DateInput from \"../datePicker/DateInput\";\n\nexport const DateRangeFilter = () => {\n  const [startDate, setStartDate] = useState<any>();\n  const [endDate, setEndDate] = useState(null);\n  const [endCalendarVisible, setEndCalendarVisible] = useState(false);\n\n  useEffect(() => {\n    const today = new Date();\n    const defaultStartDate = today.toISOString().slice(0, 10);\n    setStartDate(defaultStartDate);\n  }, []);\n\n  const handleStartChange = (date) => {\n    setStartDate(date);\n    setEndCalendarVisible(true);\n  };\n\n  const handleEndChange = (date) => {\n    setEndDate(date);\n  };\n\n  //   const filterData = () => {\n  //     console.log(startDate, endDate);\n  //     if (startDate && endDate) {\n  //       const filteredData = data.filter(\n  //         (item) =>\n  //           new Date(item.date) >= new Date(startDate) &&\n  //           new Date(item.date) <= new Date(endDate)\n  //       );\n  //       console.log(filteredData);\n  //     }\n  //   };\n\n  const filterData = () => {\n    if (startDate && endDate) {\n      console.log(startDate, \"----------\", endDate);\n      return { startDate, endDate };\n    }\n    return null;\n  };\n\n  const data = [\n    { id: 1, date: \"2022-12-01\" },\n    { id: 2, date: \"2023-02-01\" },\n    { id: 3, date: \"2023-03-01\" },\n    { id: 4, date: \"2023-04-01\" },\n    { id: 5, date: \"2023-01-01\" },\n  ];\n\n  const monthNames = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const renderCustomHeader = ({ date, decreaseMonth, increaseMonth }) => {\n    const month = monthNames[date.getMonth()];\n    const year = date.getFullYear();\n    return (\n      <div className=\"header\">\n        <button className=\"prev\" onClick={decreaseMonth}>\n          {\"<\"}\n        </button>\n        <div className=\"current\">\n          {month} {year}\n        </div>\n        <button className=\"next\" onClick={increaseMonth}>\n          {\">\"}\n        </button>\n      </div>\n    );\n  };\n  return (\n    <div>\n      <div>\n        <label>Start Date:</label>\n        <DateInput\n          maxDate={new Date().toISOString().substr(0, 10)}\n          value={startDate}\n        />\n        <input\n          type=\"date\"\n          value={startDate}\n          //value={new Date().toISOString().substr(0, 10)}\n          onChange={(event) => {\n            setStartDate(event.target.value);\n            console.log(\"====\", event.target.value);\n          }}\n          max={new Date().toISOString().substr(0, 10)}\n        />\n      </div>\n      {endCalendarVisible && (\n        <div>\n          <label>End Date:</label>\n          {/* <DatePicker\n            selected={endDate}\n            onChange={handleEndChange}\n            showMonthYearPicker\n            renderCustomHeader={renderCustomHeader}\n            minDate={startDate}\n            disabledMonths={disabledMonths}\n            maxDate={new Date(currentYear, currentMonth)}\n            dateFormat=\"MMM yyyy\"\n          /> */}\n        </div>\n      )}\n      <button onClick={filterData}>Filter Data</button>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,yBAAyB;AAAC;AAEhD,OAAO,MAAMC,eAAe,GAAG,MAAM;EAAA;EACnC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,EAAO;EACjD,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACO,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEnED,SAAS,CAAC,MAAM;IACd,MAAMU,KAAK,GAAG,IAAIC,IAAI,EAAE;IACxB,MAAMC,gBAAgB,GAAGF,KAAK,CAACG,WAAW,EAAE,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IACzDT,YAAY,CAACO,gBAAgB,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,iBAAiB,GAAIC,IAAI,IAAK;IAClCX,YAAY,CAACW,IAAI,CAAC;IAClBP,qBAAqB,CAAC,IAAI,CAAC;EAC7B,CAAC;EAED,MAAMQ,eAAe,GAAID,IAAI,IAAK;IAChCT,UAAU,CAACS,IAAI,CAAC;EAClB,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAME,UAAU,GAAG,MAAM;IACvB,IAAId,SAAS,IAAIE,OAAO,EAAE;MACxBa,OAAO,CAACC,GAAG,CAAChB,SAAS,EAAE,YAAY,EAAEE,OAAO,CAAC;MAC7C,OAAO;QAAEF,SAAS;QAAEE;MAAQ,CAAC;IAC/B;IACA,OAAO,IAAI;EACb,CAAC;EAED,MAAMe,IAAI,GAAG,CACX;IAAEC,EAAE,EAAE,CAAC;IAAEN,IAAI,EAAE;EAAa,CAAC,EAC7B;IAAEM,EAAE,EAAE,CAAC;IAAEN,IAAI,EAAE;EAAa,CAAC,EAC7B;IAAEM,EAAE,EAAE,CAAC;IAAEN,IAAI,EAAE;EAAa,CAAC,EAC7B;IAAEM,EAAE,EAAE,CAAC;IAAEN,IAAI,EAAE;EAAa,CAAC,EAC7B;IAAEM,EAAE,EAAE,CAAC;IAAEN,IAAI,EAAE;EAAa,CAAC,CAC9B;EAED,MAAMO,UAAU,GAAG,CACjB,SAAS,EACT,UAAU,EACV,OAAO,EACP,OAAO,EACP,KAAK,EACL,MAAM,EACN,MAAM,EACN,QAAQ,EACR,WAAW,EACX,SAAS,EACT,UAAU,EACV,UAAU,CACX;EAED,MAAMC,kBAAkB,GAAG,QAA4C;IAAA,IAA3C;MAAER,IAAI;MAAES,aAAa;MAAEC;IAAc,CAAC;IAChE,MAAMC,KAAK,GAAGJ,UAAU,CAACP,IAAI,CAACY,QAAQ,EAAE,CAAC;IACzC,MAAMC,IAAI,GAAGb,IAAI,CAACc,WAAW,EAAE;IAC/B,oBACE;MAAK,SAAS,EAAC,QAAQ;MAAA,wBACrB;QAAQ,SAAS,EAAC,MAAM;QAAC,OAAO,EAAEL,aAAc;QAAA,UAC7C;MAAG;QAAA;QAAA;QAAA;MAAA,QACG,eACT;QAAK,SAAS,EAAC,SAAS;QAAA,WACrBE,KAAK,EAAC,GAAC,EAACE,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QACT,eACN;QAAQ,SAAS,EAAC,MAAM;QAAC,OAAO,EAAEH,aAAc;QAAA,UAC7C;MAAG;QAAA;QAAA;QAAA;MAAA,QACG;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAEV,CAAC;EACD,oBACE;IAAA,wBACE;MAAA,wBACE;QAAA,UAAO;MAAW;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC1B,QAAC,SAAS;QACR,OAAO,EAAE,IAAIf,IAAI,EAAE,CAACE,WAAW,EAAE,CAACkB,MAAM,CAAC,CAAC,EAAE,EAAE,CAAE;QAChD,KAAK,EAAE3B;MAAU;QAAA;QAAA;QAAA;MAAA,QACjB,eACF;QACE,IAAI,EAAC,MAAM;QACX,KAAK,EAAEA;QACP;QAAA;QACA,QAAQ,EAAG4B,KAAK,IAAK;UACnB3B,YAAY,CAAC2B,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;UAChCf,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEY,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;QACzC,CAAE;QACF,GAAG,EAAE,IAAIvB,IAAI,EAAE,CAACE,WAAW,EAAE,CAACkB,MAAM,CAAC,CAAC,EAAE,EAAE;MAAE;QAAA;QAAA;QAAA;MAAA,QAC5C;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,EACLvB,kBAAkB,iBACjB;MAAA,uBACE;QAAA,UAAO;MAAS;QAAA;QAAA;QAAA;MAAA;IAAQ;MAAA;MAAA;MAAA;IAAA,QAY3B,eACD;MAAQ,OAAO,EAAEU,UAAW;MAAA,UAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC7C;AAEV,CAAC;AAAC,GArHWf,eAAe;AAAA,KAAfA,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}