{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/login/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./Login.css\";\nimport { getHttp, postHttp } from \"../../service/APIRequest\";\nimport { useHistory } from \"react-router-dom\";\nimport ErrorComponent from \"../../components/errorComponent/ErrorComponent\";\nimport { getUserApi, loginApi } from \"../../service/Config\";\nimport Store from \"../../redux/Store\";\nimport { createUserDetails } from \"../../redux/features/userDetailsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userType, setUserType] = useState(\"admin\"); // Default value\n  const [selectedEntity, setSelectedEntity] = useState(\"\"); // Default value\n  const [entityList, setEntityList] = useState();\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [adminType, setAdminType] = useState(\"main_admin\");\n  const textBoxRef = useRef(null);\n  useEffect(() => {\n    // getEntityList();\n    if (textBoxRef.current) {\n      textBoxRef.current.focus();\n    }\n  }, []);\n  const handleLogin = async () => {\n    if (!username || !password) {\n      // Display an error message for empty fields\n      setErrorMessage(\"Username and password are required.\");\n      return;\n    }\n    setErrorMessage(\"\");\n    try {\n      const response = await postHttp(loginApi, {\n        username,\n        password\n      }).then();\n      console.log(response);\n      if (response) {\n        console.log(response);\n        if ((response === null || response === void 0 ? void 0 : response.status) >= 200 && (response === null || response === void 0 ? void 0 : response.status) < 300) {\n          getUserDetails(username);\n          // sessionStorage.setItem(\"userDetails\", JSON.stringify(response.data));\n          // sessionStorage.setItem(\"loginStatus\", \"true\");\n          // history.push(\"/\", response.data);\n        } else if ((response === null || response === void 0 ? void 0 : response.status) == 403) {\n          console.log(\"-------\");\n          setErrorMessage(\"jsdk\");\n        }\n      }\n      // }\n    } catch (error) {\n      console.error(\"Login failed\", error);\n      setErrorMessage(error);\n    }\n  };\n  const getUserDetails = async user => {\n    const userResponse = await getHttp(getUserApi + user);\n    if (userResponse) {\n      sessionStorage.setItem(\"userDetails\", JSON.stringify(userResponse.data));\n      Store.dispatch(createUserDetails(JSON.stringify(userResponse.data)));\n      sessionStorage.setItem(\"loginStatus\", \"true\");\n      history.push(\"/\", userResponse.data);\n    }\n  };\n\n  // const handleUserTypeChange = (event) => {\n  //   setUserType(event.target.value);\n  //   if (event.target.value == \"user\") {\n  //     getEntityList();\n  //   }\n  // };\n\n  const handleEntityChange = event => {\n    setSelectedEntity(event.target.value);\n    //console.log(selectedValue);\n    //setSelectedEntity(selectedValue.label);\n  };\n\n  // const getEntityList = async () => {\n  //   const response = await getHttp(\"entity/getNameDetails\"); //\n  //   await setEntityList(response);\n  // };\n\n  const handleAdminTypeChange = event => {\n    setAdminType(event.target.value);\n    //setSelectedEntity(selectedValue.label);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"align-center\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          className: \"button\",\n          ref: textBoxRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"align-center\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), userType === \"user\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"align-center\",\n          children: \"Entity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedEntity,\n          onChange: handleEntityChange,\n          className: \"new-user button\",\n          children: entityList === null || entityList === void 0 ? void 0 : entityList.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.name,\n            children: item.label\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-button\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(ErrorComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this)\n  // <UserLogin />\n  ;\n}\n_s(Login, \"54NniSaPqVpvaDJqazLd72mBcVw=\", false, function () {\n  return [useHistory];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useRef","useState","getHttp","postHttp","useHistory","ErrorComponent","getUserApi","loginApi","Store","createUserDetails","Login","history","username","setUsername","password","setPassword","userType","setUserType","selectedEntity","setSelectedEntity","entityList","setEntityList","errorMessage","setErrorMessage","adminType","setAdminType","textBoxRef","current","focus","handleLogin","response","then","console","log","status","getUserDetails","error","user","userResponse","sessionStorage","setItem","JSON","stringify","data","dispatch","push","handleEntityChange","event","target","value","handleAdminTypeChange","e","map","item","index","name","label"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/login/Login.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\n\nimport \"./Login.css\";\nimport { getHttp, postHttp } from \"../../service/APIRequest\";\nimport { useHistory } from \"react-router-dom\";\nimport ErrorComponent from \"../../components/errorComponent/ErrorComponent\";\nimport { getUserApi, loginApi } from \"../../service/Config\";\nimport Store from \"../../redux/Store\";\nimport { createUserDetails } from \"../../redux/features/userDetailsSlice\";\n\nfunction Login() {\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userType, setUserType] = useState(\"admin\"); // Default value\n  const [selectedEntity, setSelectedEntity] = useState(\"\"); // Default value\n  const [entityList, setEntityList] = useState<any>();\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [adminType, setAdminType] = useState(\"main_admin\");\n\n  const textBoxRef = useRef(null);\n\n  useEffect(() => {\n    // getEntityList();\n    if (textBoxRef.current) {\n      textBoxRef.current.focus();\n    }\n  }, []);\n\n  const handleLogin = async () => {\n    if (!username || !password) {\n      // Display an error message for empty fields\n      setErrorMessage(\"Username and password are required.\");\n      return;\n    }\n\n    setErrorMessage(\"\");\n    try {\n      const response = await postHttp(loginApi, {\n        username,\n        password,\n      }).then();\n      console.log(response);\n\n      if (response) {\n        console.log(response);\n        if (response?.status >= 200 && response?.status < 300) {\n          getUserDetails(username);\n          // sessionStorage.setItem(\"userDetails\", JSON.stringify(response.data));\n          // sessionStorage.setItem(\"loginStatus\", \"true\");\n          // history.push(\"/\", response.data);\n        } else if (response?.status == 403) {\n          console.log(\"-------\");\n          setErrorMessage(\"jsdk\");\n        }\n      }\n      // }\n    } catch (error) {\n      console.error(\"Login failed\", error);\n      setErrorMessage(error);\n    }\n  };\n\n  const getUserDetails = async (user) => {\n    const userResponse = await getHttp(getUserApi + user);\n    if (userResponse) {\n      sessionStorage.setItem(\"userDetails\", JSON.stringify(userResponse.data));\n      Store.dispatch(createUserDetails(JSON.stringify(userResponse.data)));\n      sessionStorage.setItem(\"loginStatus\", \"true\");\n      history.push(\"/\", userResponse.data);\n    }\n  };\n\n  // const handleUserTypeChange = (event) => {\n  //   setUserType(event.target.value);\n  //   if (event.target.value == \"user\") {\n  //     getEntityList();\n  //   }\n  // };\n\n  const handleEntityChange = (event) => {\n    setSelectedEntity(event.target.value);\n    //console.log(selectedValue);\n    //setSelectedEntity(selectedValue.label);\n  };\n\n  // const getEntityList = async () => {\n  //   const response = await getHttp(\"entity/getNameDetails\"); //\n  //   await setEntityList(response);\n  // };\n\n  const handleAdminTypeChange = (event) => {\n    setAdminType(event.target.value);\n    //setSelectedEntity(selectedValue.label);\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-form\">\n        <div className=\"display-flex\">\n          <div className=\"align-center\">Username</div>\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            className=\"button\"\n            ref={textBoxRef}\n          />\n        </div>\n        <div className=\"display-flex\">\n          <div className=\"align-center\">Password</div>\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"button\"\n          />\n        </div>\n\n        {/* <div className=\"display-flex\">\n          <div className=\"align-center\">User Type</div>\n\n          \n          <select\n            value={userType}\n            onChange={handleUserTypeChange}\n            className=\"new-user button\"\n          >\n            {userTypes.map((item, index) => (\n              <option key={index} value={item.label}>\n                {item.name}\n              </option>\n            ))}\n          </select>\n        </div> */}\n        {/* {userType === \"admin\" && (\n          <div className=\"display-flex\">\n            <div className=\"align-center\">Admin Type</div>\n            <select value={adminType} onChange={handleAdminTypeChange}>\n              <option value=\"main_admin\">Main Admin</option>\n              <option value=\"desc_admin\">Desc Admin</option>\n            </select>\n          </div>\n        )} */}\n\n        {userType === \"user\" && (\n          <div className=\"display-flex\">\n            <div className=\"align-center\">Entity</div>\n            <select\n              value={selectedEntity}\n              onChange={handleEntityChange}\n              className=\"new-user button\"\n            >\n              {entityList?.map((item, index) => (\n                <option key={index} value={item.name}>\n                  {item.label}\n                </option>\n              ))}\n            </select>\n            {/* <DropDown\n              mainList={entityList}\n              //name=\"Filter\"\n              onChangeDropDownItem={handleEntityChange}\n              isMulti={false}\n            /> */}\n          </div>\n        )}\n\n        <button className=\"login-button\" onClick={handleLogin}>\n          Login\n        </button>\n        {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n        <ErrorComponent />\n      </div>\n    </div>\n    // <UserLogin />\n  );\n}\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}