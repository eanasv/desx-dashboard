{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/entityList/EntityList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./EntityList.css\";\nimport EntityBox from \"../../components/entityBox/EntityBox\";\nimport { getHttp } from \"../../service/APIRequest\";\nimport Accordion from \"../../components/accordion/Accordion\";\nimport { SubHeader } from \"../../components/subHeader/SubHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EntityList = props => {\n  _s();\n  console.log(props.location.state);\n  const [view, setview] = useState(props.location.state);\n  const [updatedAllEntityList, setupdatedAllEntityList] = useState();\n  const [entityListForDropDown, setentityListForDropDown] = useState();\n  const [filterByName, setfilterByName] = useState(\"asc\");\n  const history = useHistory();\n  useEffect(() => {\n    getEntityList(filterByName);\n  }, []);\n  const getEntityList = async filterByName => {\n    const response = await getHttp(\"entity/getAll\", {\n      filter: filterByName,\n      entityName: \"\"\n    }); //\n    // const response = await getHttp(\"auth/welcome\");\n    await setupdatedAllEntityList(response);\n    //getDropdownEntityList();\n    setentityListForDropDown(response);\n  };\n  //\n\n  const filterEntity = (filterBy, item) => {\n    if (item == \"name\") {\n      if (filterBy) {\n        getEntityList(\"asc\");\n      } else {\n        getEntityList(\"desc\");\n      }\n    } else {\n      if (filterBy) {\n        getEntityList(\"ascScore\");\n      } else {\n        getEntityList(\"descScore\");\n      }\n    }\n  };\n  const changeDisplaySetData = data => {\n    setupdatedAllEntityList(data);\n  };\n  const goToEntityDetails = (entityName, score, logo) => {\n    //props.onEntityClick(entityName, score, logo);\n    history.push(\"/entitiesIndex/\" + entityName, {\n      name: entityName,\n      scoreValue: score,\n      logo: logo\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-top-margin\",\n    children: !updatedAllEntityList ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SubHeader, {\n        pageHeadding: \"Entities index\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content-top-margin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"entity-container\",\n          children: updatedAllEntityList === null || updatedAllEntityList === void 0 ? void 0 : updatedAllEntityList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"each-entity-container\",\n            onClick: () => goToEntityDetails(item.label, Math.round(updatedAllEntityList[index].totalSkillPercentage), updatedAllEntityList[index].image),\n            children: /*#__PURE__*/_jsxDEV(EntityBox, {\n              logo: updatedAllEntityList[index].image,\n              name: updatedAllEntityList[index].label,\n              totalEntityScore: Math.round(updatedAllEntityList[index].totalSkillPercentage)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"accordion-filter\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"each-accordion\",\n            children: /*#__PURE__*/_jsxDEV(Accordion, {\n              onSelectedFilterValueChange: changeDisplaySetData,\n              allEntities: entityListForDropDown,\n              changeFilter: filterEntity,\n              name: \"filter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Accordion, {\n              onSelectedFilterValueChange: changeDisplaySetData,\n              allEntities: entityListForDropDown,\n              changeFilter: filterEntity,\n              name: \"sort\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(EntityList, \"0Z01BUr9p/xRSDomzK8oLXFzXY8=\", false, function () {\n  return [useHistory];\n});\n_c = EntityList;\nvar _c;\n$RefreshReg$(_c, \"EntityList\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","EntityBox","getHttp","Accordion","SubHeader","EntityList","props","console","log","location","state","view","setview","updatedAllEntityList","setupdatedAllEntityList","entityListForDropDown","setentityListForDropDown","filterByName","setfilterByName","history","getEntityList","response","filter","entityName","filterEntity","filterBy","item","changeDisplaySetData","data","goToEntityDetails","score","logo","push","name","scoreValue","map","index","label","Math","round","totalSkillPercentage","image"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/entityList/EntityList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./EntityList.css\";\nimport EntityBox from \"../../components/entityBox/EntityBox\";\nimport FilterSection from \"../../components/filterSection/FilterSection\";\nimport { getHttp } from \"../../service/APIRequest\";\nimport Accordion from \"../../components/accordion/Accordion\";\nimport { SubHeader } from \"../../components/subHeader/SubHeader\";\n\nexport const EntityList = (props) => {\n  console.log(props.location.state);\n\n  const [view, setview] = useState(props.location.state);\n  const [updatedAllEntityList, setupdatedAllEntityList] = useState<any>();\n  const [entityListForDropDown, setentityListForDropDown] = useState<any>();\n  const [filterByName, setfilterByName] = useState(\"asc\");\n\n  const history = useHistory();\n\n  useEffect(() => {\n    getEntityList(filterByName);\n  }, []);\n\n  const getEntityList = async (filterByName?) => {\n    const response = await getHttp(\"entity/getAll\", {\n      filter: filterByName,\n      entityName: \"\",\n    }); //\n    // const response = await getHttp(\"auth/welcome\");\n    await setupdatedAllEntityList(response);\n    //getDropdownEntityList();\n    setentityListForDropDown(response);\n  };\n  //\n\n  const filterEntity = (filterBy, item) => {\n    if (item == \"name\")\n      if (filterBy) {\n        getEntityList(\"asc\");\n      } else {\n        getEntityList(\"desc\");\n      }\n    else {\n      if (filterBy) {\n        getEntityList(\"ascScore\");\n      } else {\n        getEntityList(\"descScore\");\n      }\n    }\n  };\n\n  const changeDisplaySetData = (data) => {\n    setupdatedAllEntityList(data);\n  };\n\n  const goToEntityDetails = (entityName, score, logo) => {\n    //props.onEntityClick(entityName, score, logo);\n    history.push(\"/entitiesIndex/\" + entityName, {\n      name: entityName,\n      scoreValue: score,\n      logo: logo,\n    });\n  };\n  return (\n    <div className=\"content-top-margin\">\n      {!updatedAllEntityList ? (\n        <div className=\"loader\"></div>\n      ) : (\n        <div>\n          {/* <FilterSection\n            onSelectedValueChange={changeDisplaySetData}\n            allEntities={entityListForDropDown}\n            changeFilter={filterEntity}\n          /> */}\n          <SubHeader pageHeadding=\"Entities index\" />\n          <div className=\"main-content-top-margin\"></div>\n          <div className=\"content-container\">\n            <div className=\"entity-container\">\n              {updatedAllEntityList?.map((item, index) => (\n                <div\n                  key={index}\n                  className=\"each-entity-container\"\n                  onClick={() =>\n                    goToEntityDetails(\n                      item.label,\n                      Math.round(\n                        updatedAllEntityList[index].totalSkillPercentage\n                      ),\n                      updatedAllEntityList[index].image\n                    )\n                  }\n                >\n                  <EntityBox\n                    logo={updatedAllEntityList[index].image}\n                    name={updatedAllEntityList[index].label}\n                    totalEntityScore={Math.round(\n                      updatedAllEntityList[index].totalSkillPercentage\n                    )}\n                  />\n                </div>\n              ))}\n            </div>\n            <div className=\"accordion-filter\">\n              <div className=\"each-accordion\">\n                <Accordion\n                  onSelectedFilterValueChange={changeDisplaySetData}\n                  allEntities={entityListForDropDown}\n                  changeFilter={filterEntity}\n                  name=\"filter\"\n                />\n              </div>\n              <div>\n                <Accordion\n                  onSelectedFilterValueChange={changeDisplaySetData}\n                  allEntities={entityListForDropDown}\n                  changeFilter={filterEntity}\n                  name=\"sort\"\n                />\n              </div>\n              {/* <FilterSection\n                onSelectedValueChange={changeDisplaySetData}\n                allEntities={entityListForDropDown}\n                changeFilter={filterEntity}\n              /> */}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,kBAAkB;AAE7C,OAAO,kBAAkB;AACzB,OAAOC,SAAS,MAAM,sCAAsC;AAE5D,SAASC,OAAO,QAAQ,0BAA0B;AAClD,OAAOC,SAAS,MAAM,sCAAsC;AAC5D,SAASC,SAAS,QAAQ,sCAAsC;AAAC;AAEjE,OAAO,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAA;EACnCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,QAAQ,CAACC,KAAK,CAAC;EAEjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAACO,KAAK,CAACG,QAAQ,CAACC,KAAK,CAAC;EACtD,MAAM,CAACG,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGf,QAAQ,EAAO;EACvE,MAAM,CAACgB,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGjB,QAAQ,EAAO;EACzE,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMoB,OAAO,GAAGnB,UAAU,EAAE;EAE5BF,SAAS,CAAC,MAAM;IACdsB,aAAa,CAACH,YAAY,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,aAAa,GAAG,MAAOH,YAAa,IAAK;IAC7C,MAAMI,QAAQ,GAAG,MAAMnB,OAAO,CAAC,eAAe,EAAE;MAC9CoB,MAAM,EAAEL,YAAY;MACpBM,UAAU,EAAE;IACd,CAAC,CAAC,CAAC,CAAC;IACJ;IACA,MAAMT,uBAAuB,CAACO,QAAQ,CAAC;IACvC;IACAL,wBAAwB,CAACK,QAAQ,CAAC;EACpC,CAAC;EACD;;EAEA,MAAMG,YAAY,GAAG,CAACC,QAAQ,EAAEC,IAAI,KAAK;IACvC,IAAIA,IAAI,IAAI,MAAM;MAChB,IAAID,QAAQ,EAAE;QACZL,aAAa,CAAC,KAAK,CAAC;MACtB,CAAC,MAAM;QACLA,aAAa,CAAC,MAAM,CAAC;MACvB;IAAC,OACE;MACH,IAAIK,QAAQ,EAAE;QACZL,aAAa,CAAC,UAAU,CAAC;MAC3B,CAAC,MAAM;QACLA,aAAa,CAAC,WAAW,CAAC;MAC5B;IACF;EACF,CAAC;EAED,MAAMO,oBAAoB,GAAIC,IAAI,IAAK;IACrCd,uBAAuB,CAACc,IAAI,CAAC;EAC/B,CAAC;EAED,MAAMC,iBAAiB,GAAG,CAACN,UAAU,EAAEO,KAAK,EAAEC,IAAI,KAAK;IACrD;IACAZ,OAAO,CAACa,IAAI,CAAC,iBAAiB,GAAGT,UAAU,EAAE;MAC3CU,IAAI,EAAEV,UAAU;MAChBW,UAAU,EAAEJ,KAAK;MACjBC,IAAI,EAAEA;IACR,CAAC,CAAC;EACJ,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,oBAAoB;IAAA,UAChC,CAAClB,oBAAoB,gBACpB;MAAK,SAAS,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAO,gBAE9B;MAAA,wBAME,QAAC,SAAS;QAAC,YAAY,EAAC;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAG,eAC3C;QAAK,SAAS,EAAC;MAAyB;QAAA;QAAA;QAAA;MAAA,QAAO,eAC/C;QAAK,SAAS,EAAC,mBAAmB;QAAA,wBAChC;UAAK,SAAS,EAAC,kBAAkB;UAAA,UAC9BA,oBAAoB,aAApBA,oBAAoB,uBAApBA,oBAAoB,CAAEsB,GAAG,CAAC,CAACT,IAAI,EAAEU,KAAK,kBACrC;YAEE,SAAS,EAAC,uBAAuB;YACjC,OAAO,EAAE,MACPP,iBAAiB,CACfH,IAAI,CAACW,KAAK,EACVC,IAAI,CAACC,KAAK,CACR1B,oBAAoB,CAACuB,KAAK,CAAC,CAACI,oBAAoB,CACjD,EACD3B,oBAAoB,CAACuB,KAAK,CAAC,CAACK,KAAK,CAEpC;YAAA,uBAED,QAAC,SAAS;cACR,IAAI,EAAE5B,oBAAoB,CAACuB,KAAK,CAAC,CAACK,KAAM;cACxC,IAAI,EAAE5B,oBAAoB,CAACuB,KAAK,CAAC,CAACC,KAAM;cACxC,gBAAgB,EAAEC,IAAI,CAACC,KAAK,CAC1B1B,oBAAoB,CAACuB,KAAK,CAAC,CAACI,oBAAoB;YAChD;cAAA;cAAA;cAAA;YAAA;UACF,GAlBGJ,KAAK;YAAA;YAAA;YAAA;UAAA,QAoBb;QAAC;UAAA;UAAA;UAAA;QAAA,QACE,eACN;UAAK,SAAS,EAAC,kBAAkB;UAAA,wBAC/B;YAAK,SAAS,EAAC,gBAAgB;YAAA,uBAC7B,QAAC,SAAS;cACR,2BAA2B,EAAET,oBAAqB;cAClD,WAAW,EAAEZ,qBAAsB;cACnC,YAAY,EAAES,YAAa;cAC3B,IAAI,EAAC;YAAQ;cAAA;cAAA;cAAA;YAAA;UACb;YAAA;YAAA;YAAA;UAAA,QACE,eACN;YAAA,uBACE,QAAC,SAAS;cACR,2BAA2B,EAAEG,oBAAqB;cAClD,WAAW,EAAEZ,qBAAsB;cACnC,YAAY,EAAES,YAAa;cAC3B,IAAI,EAAC;YAAM;cAAA;cAAA;cAAA;YAAA;UACX;YAAA;YAAA;YAAA;UAAA,QACE;QAAA;UAAA;UAAA;UAAA;QAAA,QAMF;MAAA;QAAA;QAAA;QAAA;MAAA,QACF;IAAA;MAAA;MAAA;MAAA;IAAA;EAET;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GAzHWnB,UAAU;EAAA,QAQLL,UAAU;AAAA;AAAA,KARfK,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}