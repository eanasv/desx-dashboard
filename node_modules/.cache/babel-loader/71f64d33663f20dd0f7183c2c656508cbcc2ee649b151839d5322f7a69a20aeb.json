{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/dataFileUpload/FileUpload.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { DownloadExcel } from \"../../components/downloadExcel/DownloadExcel\";\nimport ErrorComponent from \"../../components/errorComponent/ErrorComponent\";\nimport DropDown from \"../../components/dropDown/DropDown\";\nimport { SubHeader } from \"../../components/subHeader/SubHeader\";\nimport { postHttp } from \"../../service/APIRequest\";\nimport { excelUpload } from \"../../service/Config\";\nimport \"./FileUpload.css\";\nimport Store from \"../../redux/Store\";\nimport { showErrorMesaage } from \"../../redux/features/errorSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  // const [file, setFile] = useState(null);\n  // const [selectedFile, setSelectedFile] = useState(null);\n  // const [selectedFileType, setSelectedFileType] = useState(\"\");\n\n  // const handleItemSelect = (event) => {\n  //   console.log(event);\n  //   setSelectedFile(event.target.files[0]);\n  //   setSelectedFileType(event.target.value);\n  // };\n\n  // const handleFileChange = (e) => {\n  //   setFile(e.target.files[0]);\n  // };\n\n  // const handleResponseText = () => {\n  //   setresponseText(null);\n  // };\n\n  var typeOfDropdown = [{\n    id: 1,\n    label: \"Employee\",\n    value: \"Employee\"\n  }, {\n    id: 2,\n    label: \"Training\",\n    value: \"Training\"\n  }, {\n    id: 3,\n    label: \"Entity\",\n    value: \"Entity\"\n  }];\n  const [responseText, setresponseText] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleOptionChange = event => {\n    setSelectedOption(event);\n  };\n\n  // const resetResponseText = () => {\n  //   setTimeout(() => {\n  //     setresponseText(\"\");\n  //   }, 10000);\n  // };\n\n  const handleSubmit = async () => {\n    if (!selectedOption) {\n      Store.dispatch(showErrorMesaage(\"Please select an option from the dropdown\"));\n      return;\n    } else if (!selectedFile) {\n      Store.dispatch(showErrorMesaage(\"Please select one file to upload\"));\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    formData.append(\"option\", selectedOption.value);\n    setresponseText(\"\");\n    postHttp(excelUpload + \"upload?entityName=\" + \"Dubai Airports\", formData).then(response => {\n      // console.log(response);\n      setresponseText(response);\n      setSelectedFile(null);\n      setSelectedOption(null);\n      clearFileInput();\n    }).catch(error => {\n      console.log(error);\n      Store.dispatch(showErrorMesaage(error));\n      //setresponseText(error);\n      clearFileInput();\n      // handle error\n    });\n  };\n\n  const clearFileInput = () => {\n    //resetResponseText();\n    const inputElement = document.getElementById(\"file\");\n    if (inputElement) {\n      inputElement.value = \"\"; // Clear the input value\n    }\n  };\n\n  var userDeatils = JSON.parse(sessionStorage.getItem(\"userDetails\"));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(SubHeader, {\n        pageHeadding: `File Upload ${userDeatils.entity}`,\n        showBreadcrumbs: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n        mainList: typeOfDropdown,\n        name: \"\",\n        onChangeDropDownItem: handleOptionChange,\n        isMulti: false,\n        classname: \"flex\",\n        placeholder: \"Select an option\",\n        value: selectedOption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-browser\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          children: \"Select a file:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file\",\n          onChange: handleFileChange,\n          accept: \".xls, .xlsx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"filter-button std unwanted text\",\n        onClick: handleSubmit,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"response-text\",\n        children: responseText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DownloadExcel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"xbekFizCSYlfB0ZNBHAR6p/66fI=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","DownloadExcel","ErrorComponent","DropDown","SubHeader","postHttp","excelUpload","Store","showErrorMesaage","FileUpload","typeOfDropdown","id","label","value","responseText","setresponseText","selectedFile","setSelectedFile","selectedOption","setSelectedOption","handleFileChange","event","target","files","handleOptionChange","handleSubmit","dispatch","formData","FormData","append","then","response","clearFileInput","catch","error","console","log","inputElement","document","getElementById","userDeatils","JSON","parse","sessionStorage","getItem","entity"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/dataFileUpload/FileUpload.tsx"],"sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { DownloadExcel } from \"../../components/downloadExcel/DownloadExcel\";\nimport ErrorComponent from \"../../components/errorComponent/ErrorComponent\";\nimport DropDown from \"../../components/dropDown/DropDown\";\nimport { SubHeader } from \"../../components/subHeader/SubHeader\";\nimport { postHttp } from \"../../service/APIRequest\";\nimport { excelUpload } from \"../../service/Config\";\nimport \"./FileUpload.css\";\nimport Store from \"../../redux/Store\";\nimport { showErrorMesaage } from \"../../redux/features/errorSlice\";\n\nconst FileUpload = () => {\n  // const [file, setFile] = useState(null);\n  // const [selectedFile, setSelectedFile] = useState(null);\n  // const [selectedFileType, setSelectedFileType] = useState(\"\");\n\n  // const handleItemSelect = (event) => {\n  //   console.log(event);\n  //   setSelectedFile(event.target.files[0]);\n  //   setSelectedFileType(event.target.value);\n  // };\n\n  // const handleFileChange = (e) => {\n  //   setFile(e.target.files[0]);\n  // };\n\n  // const handleResponseText = () => {\n  //   setresponseText(null);\n  // };\n\n  var typeOfDropdown = [\n    { id: 1, label: \"Employee\", value: \"Employee\" },\n    { id: 2, label: \"Training\", value: \"Training\" },\n    { id: 3, label: \"Entity\", value: \"Entity\" },\n  ];\n  const [responseText, setresponseText] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleOptionChange = (event) => {\n    setSelectedOption(event);\n  };\n\n  // const resetResponseText = () => {\n  //   setTimeout(() => {\n  //     setresponseText(\"\");\n  //   }, 10000);\n  // };\n\n  const handleSubmit = async () => {\n    if (!selectedOption) {\n      Store.dispatch(\n        showErrorMesaage(\"Please select an option from the dropdown\")\n      );\n      return;\n    } else if (!selectedFile) {\n      Store.dispatch(showErrorMesaage(\"Please select one file to upload\"));\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    formData.append(\"option\", selectedOption.value);\n    setresponseText(\"\");\n    postHttp(excelUpload + \"upload?entityName=\" + \"Dubai Airports\", formData)\n      .then((response) => {\n        // console.log(response);\n        setresponseText(response);\n        setSelectedFile(null);\n        setSelectedOption(null);\n        clearFileInput();\n      })\n      .catch((error) => {\n        console.log(error);\n        Store.dispatch(showErrorMesaage(error));\n        //setresponseText(error);\n        clearFileInput();\n        // handle error\n      });\n  };\n\n  const clearFileInput = () => {\n    //resetResponseText();\n    const inputElement = document.getElementById(\"file\") as HTMLInputElement;\n    if (inputElement) {\n      inputElement.value = \"\"; // Clear the input value\n    }\n  };\n  var userDeatils = JSON.parse(sessionStorage.getItem(\"userDetails\"));\n\n  return (\n    <div className=\"upload-container \">\n      <div className=\"content\">\n        <SubHeader\n          pageHeadding={`File Upload ${userDeatils.entity}`}\n          showBreadcrumbs={true}\n        />\n\n        <DropDown\n          mainList={typeOfDropdown}\n          name=\"\"\n          onChangeDropDownItem={handleOptionChange}\n          isMulti={false}\n          classname=\"flex\"\n          placeholder={\"Select an option\"}\n          value={selectedOption}\n        />\n        <div className=\"file-browser\">\n          <label htmlFor=\"file\">Select a file:</label>\n          <input\n            type=\"file\"\n            id=\"file\"\n            onChange={handleFileChange}\n            accept=\".xls, .xlsx\"\n          />\n        </div>\n        <button\n          className=\"filter-button std unwanted text\"\n          onClick={handleSubmit}\n        >\n          Upload\n        </button>\n        <div className=\"response-text\">{responseText}</div>\n      </div>\n      <ErrorComponent />\n      <DownloadExcel />\n    </div>\n  );\n};\n\nexport default FileUpload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}