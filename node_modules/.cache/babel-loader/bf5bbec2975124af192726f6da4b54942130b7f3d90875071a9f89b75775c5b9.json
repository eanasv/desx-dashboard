{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/breadcrumbs/Breadcrumbs.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Breadcrumbs = () => {\n  _s();\n  const location = useLocation();\n  const history = useHistory();\n  const [breadcrumbNames, setBreadcrumbNames] = useState([]);\n  useEffect(() => {\n    const names = getBreadcrumbNames(location.pathname);\n    setBreadcrumbNames(names);\n  }, [location]);\n  const getBreadcrumbNames = pathname => {\n    const segments = pathname.split(\"/\").filter(segment => segment !== \"\");\n\n    // Return the breadcrumb names based on the segments\n    if (segments.length === 0) {\n      return [\"Home\"];\n    } else {\n      // Get the last segment as the current breadcrumb name\n      const lastSegment = segments[segments.length - 1];\n      return [\"Home\", lastSegment];\n    }\n  };\n  const handleListItemClick = itemName => {\n    // Update the last breadcrumb name and navigate to the corresponding page\n    const newPathname = `${location.pathname}/${itemName}`;\n    const names = getBreadcrumbNames(newPathname);\n    setBreadcrumbNames(names);\n    history.push(newPathname);\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: breadcrumbNames.map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: index !== breadcrumbNames.length - 1 ? /*#__PURE__*/_jsxDEV(Link, {\n          to: `/${breadcrumbNames.slice(0, index + 1).join(\"/\")}`,\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleListItemClick(\"Item 1\"),\n          children: \"Item 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleListItemClick(\"Item 2\"),\n          children: \"Item 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Breadcrumbs, \"fnO8jWOGYjCWTi3T72JlPmCIgqE=\", false, function () {\n  return [useLocation, useHistory];\n});\n_c = Breadcrumbs;\nexport default Breadcrumbs;\nvar _c;\n$RefreshReg$(_c, \"Breadcrumbs\");","map":{"version":3,"names":["React","useState","useEffect","Link","useLocation","useHistory","Breadcrumbs","location","history","breadcrumbNames","setBreadcrumbNames","names","getBreadcrumbNames","pathname","segments","split","filter","segment","length","lastSegment","handleListItemClick","itemName","newPathname","push","map","name","index","slice","join"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/breadcrumbs/Breadcrumbs.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\n\nconst Breadcrumbs = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const [breadcrumbNames, setBreadcrumbNames] = useState([]);\n\n  useEffect(() => {\n    const names = getBreadcrumbNames(location.pathname);\n    setBreadcrumbNames(names);\n  }, [location]);\n\n  const getBreadcrumbNames = (pathname) => {\n    const segments = pathname.split(\"/\").filter((segment) => segment !== \"\");\n\n    // Return the breadcrumb names based on the segments\n    if (segments.length === 0) {\n      return [\"Home\"];\n    } else {\n      // Get the last segment as the current breadcrumb name\n      const lastSegment = segments[segments.length - 1];\n      return [\"Home\", lastSegment];\n    }\n  };\n\n  const handleListItemClick = (itemName) => {\n    // Update the last breadcrumb name and navigate to the corresponding page\n    const newPathname = `${location.pathname}/${itemName}`;\n    const names = getBreadcrumbNames(newPathname);\n    setBreadcrumbNames(names);\n    history.push(newPathname);\n  };\n\n  return (\n    <nav>\n      <ul>\n        {breadcrumbNames.map((name, index) => (\n          <li key={index}>\n            {index !== breadcrumbNames.length - 1 ? (\n              <Link to={`/${breadcrumbNames.slice(0, index + 1).join(\"/\")}`}>\n                {name}\n              </Link>\n            ) : (\n              <span>{name}</span>\n            )}\n          </li>\n        ))}\n      </ul>\n\n      <ul>\n        <li>\n          <button onClick={() => handleListItemClick(\"Item 1\")}>Item 1</button>\n        </li>\n        <li>\n          <button onClick={() => handleListItemClick(\"Item 2\")}>Item 2</button>\n        </li>\n        {/* Add more list items as needed */}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Breadcrumbs;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,QAAQ,kBAAkB;AAAC;AAEjE,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAMC,QAAQ,GAAGH,WAAW,EAAE;EAC9B,MAAMI,OAAO,GAAGH,UAAU,EAAE;EAC5B,MAAM,CAACI,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACd,MAAMS,KAAK,GAAGC,kBAAkB,CAACL,QAAQ,CAACM,QAAQ,CAAC;IACnDH,kBAAkB,CAACC,KAAK,CAAC;EAC3B,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,MAAMK,kBAAkB,GAAIC,QAAQ,IAAK;IACvC,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAAEC,OAAO,IAAKA,OAAO,KAAK,EAAE,CAAC;;IAExE;IACA,IAAIH,QAAQ,CAACI,MAAM,KAAK,CAAC,EAAE;MACzB,OAAO,CAAC,MAAM,CAAC;IACjB,CAAC,MAAM;MACL;MACA,MAAMC,WAAW,GAAGL,QAAQ,CAACA,QAAQ,CAACI,MAAM,GAAG,CAAC,CAAC;MACjD,OAAO,CAAC,MAAM,EAAEC,WAAW,CAAC;IAC9B;EACF,CAAC;EAED,MAAMC,mBAAmB,GAAIC,QAAQ,IAAK;IACxC;IACA,MAAMC,WAAW,GAAI,GAAEf,QAAQ,CAACM,QAAS,IAAGQ,QAAS,EAAC;IACtD,MAAMV,KAAK,GAAGC,kBAAkB,CAACU,WAAW,CAAC;IAC7CZ,kBAAkB,CAACC,KAAK,CAAC;IACzBH,OAAO,CAACe,IAAI,CAACD,WAAW,CAAC;EAC3B,CAAC;EAED,oBACE;IAAA,wBACE;MAAA,UACGb,eAAe,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC/B;QAAA,UACGA,KAAK,KAAKjB,eAAe,CAACS,MAAM,GAAG,CAAC,gBACnC,QAAC,IAAI;UAAC,EAAE,EAAG,IAAGT,eAAe,CAACkB,KAAK,CAAC,CAAC,EAAED,KAAK,GAAG,CAAC,CAAC,CAACE,IAAI,CAAC,GAAG,CAAE,EAAE;UAAA,UAC3DH;QAAI;UAAA;UAAA;UAAA;QAAA,QACA,gBAEP;UAAA,UAAOA;QAAI;UAAA;UAAA;UAAA;QAAA;MACZ,GAPMC,KAAK;QAAA;QAAA;QAAA;MAAA,QASf;IAAC;MAAA;MAAA;MAAA;IAAA,QACC,eAEL;MAAA,wBACE;QAAA,uBACE;UAAQ,OAAO,EAAE,MAAMN,mBAAmB,CAAC,QAAQ,CAAE;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QAClE,eACL;QAAA,uBACE;UAAQ,OAAO,EAAE,MAAMA,mBAAmB,CAAC,QAAQ,CAAE;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QAClE;IAAA;MAAA;MAAA;MAAA;IAAA,QAEF;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV,CAAC;AAAC,GA1DId,WAAW;EAAA,QACEF,WAAW,EACZC,UAAU;AAAA;AAAA,KAFtBC,WAAW;AA4DjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}