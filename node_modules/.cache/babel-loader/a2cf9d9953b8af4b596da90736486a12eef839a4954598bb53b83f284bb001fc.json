{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/entityList/EntityList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n//import { useNavigate } from \"react-router-dom\";\n\nimport EntityBox from \"../../components/entityBox/EntityBox\";\nimport FilterSection from \"../../components/filterSection/FilterSection\";\nimport { getHttp } from \"../../service/APIRequest\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EntityList = props => {\n  _s();\n  const [updatedEmployeeDetails, setupdatedEmployeeDetails] = useState();\n  const [updatedAllEntityList, setupdatedAllEntityList] = useState();\n  const [entityListForDropDown, setentityListForDropDown] = useState();\n  useEffect(() => {\n    getAllEmployeeWithskills();\n    getEntityList();\n  }, []);\n  useEffect(() => {\n    // getOverAllScore();\n  }, []);\n\n  // const getEntityList = async () => {\n  //   const response = await getHttp(\"allEmployeesWithSkills\");\n  //   await setupdatedEmployeeDetails(response);\n  // };\n\n  const getEntityList = async () => {\n    const response = await getHttp(\"entity/getAll\");\n    await setupdatedAllEntityList(response);\n    setentityListForDropDown(response);\n  };\n  const changeDisplaySetData = data => {\n    setupdatedAllEntityList(data);\n  };\n\n  // const getAllEmployeeWithskills = async () => {\n  //   const response = await getHttp(\"allEmployeesWithSkills\");\n  //   await setupdatedEmployeeDetails(response);\n  // };\n\n  // const getOverAllScore = () => {\n  //   updatedAllEntityList?.map((entity, index) => {\n  //     var achievedEntityScore = 0;\n  //     var achievedTotalScore = 0;\n  //     updatedEmployeeDetails?.map((employee, number) => {\n  //       var achievedEmployeeScore = 0;\n  //       var employeeTotalScore = 0;\n\n  //       if (entity.label.toLowerCase() === employee.entity.toLowerCase()) {\n  //         console.log(\n  //           entity.label.toLowerCase(),\n  //           \"-----------------\",\n  //           employee.entity.toLowerCase()\n  //         );\n  //         employee.skills.map((item, id) => {\n  //           achievedEmployeeScore = achievedEmployeeScore + item.score;\n  //           employeeTotalScore = employeeTotalScore + skillMaximumScoreValue;\n  //         });\n\n  //         updatedEmployeeDetails[number].employeeScorePercentage =\n  //           (achievedEmployeeScore / employeeTotalScore) * 100;\n\n  //         achievedEntityScore = achievedEntityScore + achievedEmployeeScore;\n  //         achievedTotalScore = achievedTotalScore + employeeTotalScore;\n  //       } else {\n  //         //updatedEmployeeDetails[number].employeeScorePercentage = 0;\n  //       }\n  //       // setupdatedEmployeeDetails(updatedEmployeeDetails);\n  //       // updatedAllEntityList[index].entityTotalSkillPercentage =\n  //       //   (achievedEntityScore / achievedTotalScore) * 100;\n  //       // console.log(\n  //       //   updatedAllEntityList[index].label,\n  //       //   \"&&&&&&& skill percentage\",\n  //       //   (achievedEntityScore / achievedTotalScore) * 100\n  //       // );\n  //     });\n  //     setupdatedEmployeeDetails(updatedEmployeeDetails);\n  //     updatedAllEntityList[index].entityTotalSkillPercentage =\n  //       (achievedEntityScore / achievedTotalScore) * 100;\n  //     console.log(\n  //       updatedAllEntityList[index].label,\n  //       \"&&&&&&& skill percentage\",\n  //       (achievedEntityScore / achievedTotalScore) * 100\n  //     );\n  //   });\n  //   setupdatedAllEntityList(updatedAllEntityList);\n  // };\n\n  const goToEntityDetails = entityName => {\n    props.onEntityClick(entityName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FilterSection, {\n      onSelectedValueChange: changeDisplaySetData,\n      allEntities: entityListForDropDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"entity-container\",\n      children: updatedAllEntityList === null || updatedAllEntityList === void 0 ? void 0 : updatedAllEntityList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"each-entity-container\",\n        onClick: () => goToEntityDetails(item.label),\n        children: /*#__PURE__*/_jsxDEV(EntityBox, {\n          logo: updatedAllEntityList[index].image,\n          name: updatedAllEntityList[index].label,\n          totalEntityScore: Math.round(updatedAllEntityList[index].totalSkillPercentage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(EntityList, \"MR73lzv01Hx+3aZRUApC6FxGpZw=\");\n_c = EntityList;\nvar _c;\n$RefreshReg$(_c, \"EntityList\");","map":{"version":3,"names":["React","useEffect","useState","EntityBox","FilterSection","getHttp","EntityList","props","updatedEmployeeDetails","setupdatedEmployeeDetails","updatedAllEntityList","setupdatedAllEntityList","entityListForDropDown","setentityListForDropDown","getAllEmployeeWithskills","getEntityList","response","changeDisplaySetData","data","goToEntityDetails","entityName","onEntityClick","map","item","index","label","image","Math","round","totalSkillPercentage"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/entityList/EntityList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n//import { useNavigate } from \"react-router-dom\";\n\nimport EntityBox from \"../../components/entityBox/EntityBox\";\nimport FilterSection from \"../../components/filterSection/FilterSection\";\nimport { getHttp } from \"../../service/APIRequest\";\nimport { mainEntity, skillMaximumScoreValue } from \"../../service/Constants\";\n\nexport const EntityList = (props) => {\n  const [updatedEmployeeDetails, setupdatedEmployeeDetails] = useState<any>();\n  const [updatedAllEntityList, setupdatedAllEntityList] = useState<any>();\n  const [entityListForDropDown, setentityListForDropDown] = useState<any>();\n\n  useEffect(() => {\n    getAllEmployeeWithskills();\n    getEntityList();\n  }, []);\n\n  useEffect(() => {\n    // getOverAllScore();\n  }, []);\n\n  // const getEntityList = async () => {\n  //   const response = await getHttp(\"allEmployeesWithSkills\");\n  //   await setupdatedEmployeeDetails(response);\n  // };\n\n  const getEntityList = async () => {\n    const response = await getHttp(\"entity/getAll\");\n    await setupdatedAllEntityList(response);\n    setentityListForDropDown(response);\n  };\n\n  const changeDisplaySetData = (data) => {\n    setupdatedAllEntityList(data);\n  };\n\n  // const getAllEmployeeWithskills = async () => {\n  //   const response = await getHttp(\"allEmployeesWithSkills\");\n  //   await setupdatedEmployeeDetails(response);\n  // };\n\n  // const getOverAllScore = () => {\n  //   updatedAllEntityList?.map((entity, index) => {\n  //     var achievedEntityScore = 0;\n  //     var achievedTotalScore = 0;\n  //     updatedEmployeeDetails?.map((employee, number) => {\n  //       var achievedEmployeeScore = 0;\n  //       var employeeTotalScore = 0;\n\n  //       if (entity.label.toLowerCase() === employee.entity.toLowerCase()) {\n  //         console.log(\n  //           entity.label.toLowerCase(),\n  //           \"-----------------\",\n  //           employee.entity.toLowerCase()\n  //         );\n  //         employee.skills.map((item, id) => {\n  //           achievedEmployeeScore = achievedEmployeeScore + item.score;\n  //           employeeTotalScore = employeeTotalScore + skillMaximumScoreValue;\n  //         });\n\n  //         updatedEmployeeDetails[number].employeeScorePercentage =\n  //           (achievedEmployeeScore / employeeTotalScore) * 100;\n\n  //         achievedEntityScore = achievedEntityScore + achievedEmployeeScore;\n  //         achievedTotalScore = achievedTotalScore + employeeTotalScore;\n  //       } else {\n  //         //updatedEmployeeDetails[number].employeeScorePercentage = 0;\n  //       }\n  //       // setupdatedEmployeeDetails(updatedEmployeeDetails);\n  //       // updatedAllEntityList[index].entityTotalSkillPercentage =\n  //       //   (achievedEntityScore / achievedTotalScore) * 100;\n  //       // console.log(\n  //       //   updatedAllEntityList[index].label,\n  //       //   \"&&&&&&& skill percentage\",\n  //       //   (achievedEntityScore / achievedTotalScore) * 100\n  //       // );\n  //     });\n  //     setupdatedEmployeeDetails(updatedEmployeeDetails);\n  //     updatedAllEntityList[index].entityTotalSkillPercentage =\n  //       (achievedEntityScore / achievedTotalScore) * 100;\n  //     console.log(\n  //       updatedAllEntityList[index].label,\n  //       \"&&&&&&& skill percentage\",\n  //       (achievedEntityScore / achievedTotalScore) * 100\n  //     );\n  //   });\n  //   setupdatedAllEntityList(updatedAllEntityList);\n  // };\n\n  const goToEntityDetails = (entityName) => {\n    props.onEntityClick(entityName);\n  };\n  return (\n    <div>\n      <FilterSection\n        onSelectedValueChange={changeDisplaySetData}\n        allEntities={entityListForDropDown}\n      />\n      {/* <MultiSelectDropdown /> */}\n\n      <div className=\"entity-container\">\n        {updatedAllEntityList?.map((item, index) => (\n          <div\n            key={index}\n            className=\"each-entity-container\"\n            onClick={() => goToEntityDetails(item.label)}\n          >\n            <EntityBox\n              logo={updatedAllEntityList[index].image}\n              name={updatedAllEntityList[index].label}\n              totalEntityScore={Math.round(\n                updatedAllEntityList[index].totalSkillPercentage\n              )}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;;AAEA,OAAOC,SAAS,MAAM,sCAAsC;AAC5D,OAAOC,aAAa,MAAM,8CAA8C;AACxE,SAASC,OAAO,QAAQ,0BAA0B;AAAC;AAGnD,OAAO,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAA;EACnC,MAAM,CAACC,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGP,QAAQ,EAAO;EAC3E,MAAM,CAACQ,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGT,QAAQ,EAAO;EACvE,MAAM,CAACU,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGX,QAAQ,EAAO;EAEzED,SAAS,CAAC,MAAM;IACda,wBAAwB,EAAE;IAC1BC,aAAa,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAENd,SAAS,CAAC,MAAM;IACd;EAAA,CACD,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;;EAEA,MAAMc,aAAa,GAAG,YAAY;IAChC,MAAMC,QAAQ,GAAG,MAAMX,OAAO,CAAC,eAAe,CAAC;IAC/C,MAAMM,uBAAuB,CAACK,QAAQ,CAAC;IACvCH,wBAAwB,CAACG,QAAQ,CAAC;EACpC,CAAC;EAED,MAAMC,oBAAoB,GAAIC,IAAI,IAAK;IACrCP,uBAAuB,CAACO,IAAI,CAAC;EAC/B,CAAC;;EAED;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,iBAAiB,GAAIC,UAAU,IAAK;IACxCb,KAAK,CAACc,aAAa,CAACD,UAAU,CAAC;EACjC,CAAC;EACD,oBACE;IAAA,wBACE,QAAC,aAAa;MACZ,qBAAqB,EAAEH,oBAAqB;MAC5C,WAAW,EAAEL;IAAsB;MAAA;MAAA;MAAA;IAAA,QACnC,eAGF;MAAK,SAAS,EAAC,kBAAkB;MAAA,UAC9BF,oBAAoB,aAApBA,oBAAoB,uBAApBA,oBAAoB,CAAEY,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrC;QAEE,SAAS,EAAC,uBAAuB;QACjC,OAAO,EAAE,MAAML,iBAAiB,CAACI,IAAI,CAACE,KAAK,CAAE;QAAA,uBAE7C,QAAC,SAAS;UACR,IAAI,EAAEf,oBAAoB,CAACc,KAAK,CAAC,CAACE,KAAM;UACxC,IAAI,EAAEhB,oBAAoB,CAACc,KAAK,CAAC,CAACC,KAAM;UACxC,gBAAgB,EAAEE,IAAI,CAACC,KAAK,CAC1BlB,oBAAoB,CAACc,KAAK,CAAC,CAACK,oBAAoB;QAChD;UAAA;UAAA;UAAA;QAAA;MACF,GAVGL,KAAK;QAAA;QAAA;QAAA;MAAA,QAYb;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GAhHWlB,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}