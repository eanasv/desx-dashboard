{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/entityList/EntityList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n//import { useNavigate } from \"react-router-dom\";\n\nimport EntityBox from \"../../components/entityBox/EntityBox\";\nimport FilterSection from \"../../components/filterSection/FilterSection\";\nimport { getHttp } from \"../../service/APIRequest\";\nimport { skillMaximumScoreValue } from \"../../service/Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EntityList = props => {\n  _s();\n  const [updatedEmployeeDetails, setupdatedEmployeeDetails] = useState();\n  const [updatedAllEntityList, setupdatedAllEntityList] = useState();\n  const [entityListForDropDown, setentityListForDropDown] = useState();\n  useEffect(() => {\n    getEntityList();\n    getAllEmployeeWithskills();\n  }, [updatedEmployeeDetails]);\n  useEffect(() => {\n    getOverAllScore();\n  }, [updatedEmployeeDetails, updatedAllEntityList]);\n\n  // const getEntityList = async () => {\n  //   const response = await getHttp(\"allEmployeesWithSkills\");\n  //   await setupdatedEmployeeDetails(response);\n  // };\n\n  const getEntityList = async () => {\n    const response = await getHttp(\"entity/getAll\");\n    await setupdatedAllEntityList(response);\n    setentityListForDropDown(response);\n  };\n  const changeDisplaySetData = data => {\n    setupdatedAllEntityList(data);\n  };\n  const getAllEmployeeWithskills = async () => {\n    const response = await getHttp(\"allEmployeesWithSkills\");\n    await setupdatedEmployeeDetails(response);\n  };\n  const getOverAllScore = () => {\n    updatedAllEntityList === null || updatedAllEntityList === void 0 ? void 0 : updatedAllEntityList.map((entity, index) => {\n      var achievedEntityScore = 0;\n      var achievedTotalScore = 0;\n      updatedEmployeeDetails === null || updatedEmployeeDetails === void 0 ? void 0 : updatedEmployeeDetails.map((employee, number) => {\n        var achievedEmployeeScore = 0;\n        var employeeTotalScore = 0;\n        if (entity.label.toLowerCase() === employee.entity.toLowerCase()) {\n          console.log(entity.label.toLowerCase(), \"-----------------\", employee.entity.toLowerCase());\n          employee.skills.map((item, id) => {\n            achievedEmployeeScore = achievedEmployeeScore + item.score;\n            employeeTotalScore = employeeTotalScore + skillMaximumScoreValue;\n          });\n          updatedEmployeeDetails[number].employeeScorePercentage = achievedEmployeeScore / employeeTotalScore * 100;\n          achievedEntityScore = achievedEntityScore + achievedEmployeeScore;\n          achievedTotalScore = achievedTotalScore + employeeTotalScore;\n        } else {\n          //updatedEmployeeDetails[number].employeeScorePercentage = 0;\n        }\n        setupdatedEmployeeDetails(updatedEmployeeDetails);\n        updatedAllEntityList[index].entityTotalSkillPercentage = achievedEntityScore / achievedTotalScore * 100;\n        console.log(updatedAllEntityList[index].label, \"&&&&&&&\", achievedEntityScore / achievedTotalScore * 100);\n      });\n      // setupdatedEmployeeDetails(updatedEmployeeDetails);\n      // updatedAllEntityList[index].entityTotalSkillPercentage =\n      //   (achievedEntityScore / achievedTotalScore) * 100;\n      // console.log(\"&&&&&&&\", (achievedEntityScore / achievedTotalScore) * 100);\n    });\n\n    setupdatedAllEntityList(updatedAllEntityList);\n  };\n  const goToEntityDetails = entityName => {\n    props.onEntityClick(entityName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FilterSection, {\n      onSelectedValueChange: changeDisplaySetData,\n      allEntities: entityListForDropDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"entity-container\",\n      children: updatedAllEntityList === null || updatedAllEntityList === void 0 ? void 0 : updatedAllEntityList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"each-entity-container\",\n        onClick: () => goToEntityDetails(item.label),\n        children: /*#__PURE__*/_jsxDEV(EntityBox, {\n          logo: updatedAllEntityList[index].image,\n          name: updatedAllEntityList[index].label,\n          totalEntityScore: Math.round(item.entityTotalSkillPercentage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(EntityList, \"MR73lzv01Hx+3aZRUApC6FxGpZw=\");\n_c = EntityList;\nvar _c;\n$RefreshReg$(_c, \"EntityList\");","map":{"version":3,"names":["React","useEffect","useState","EntityBox","FilterSection","getHttp","skillMaximumScoreValue","EntityList","props","updatedEmployeeDetails","setupdatedEmployeeDetails","updatedAllEntityList","setupdatedAllEntityList","entityListForDropDown","setentityListForDropDown","getEntityList","getAllEmployeeWithskills","getOverAllScore","response","changeDisplaySetData","data","map","entity","index","achievedEntityScore","achievedTotalScore","employee","number","achievedEmployeeScore","employeeTotalScore","label","toLowerCase","console","log","skills","item","id","score","employeeScorePercentage","entityTotalSkillPercentage","goToEntityDetails","entityName","onEntityClick","image","Math","round"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/entityList/EntityList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n//import { useNavigate } from \"react-router-dom\";\n\nimport EntityBox from \"../../components/entityBox/EntityBox\";\nimport FilterSection from \"../../components/filterSection/FilterSection\";\nimport { getHttp } from \"../../service/APIRequest\";\nimport { mainEntity, skillMaximumScoreValue } from \"../../service/Constants\";\n\nexport const EntityList = (props) => {\n  const [updatedEmployeeDetails, setupdatedEmployeeDetails] = useState<any>();\n  const [updatedAllEntityList, setupdatedAllEntityList] = useState<any>();\n  const [entityListForDropDown, setentityListForDropDown] = useState<any>();\n\n  useEffect(() => {\n    getEntityList();\n    getAllEmployeeWithskills();\n  }, [updatedEmployeeDetails]);\n\n  useEffect(() => {\n    getOverAllScore();\n  }, [updatedEmployeeDetails, updatedAllEntityList]);\n\n  // const getEntityList = async () => {\n  //   const response = await getHttp(\"allEmployeesWithSkills\");\n  //   await setupdatedEmployeeDetails(response);\n  // };\n\n  const getEntityList = async () => {\n    const response = await getHttp(\"entity/getAll\");\n    await setupdatedAllEntityList(response);\n    setentityListForDropDown(response);\n  };\n\n  const changeDisplaySetData = (data) => {\n    setupdatedAllEntityList(data);\n  };\n\n  const getAllEmployeeWithskills = async () => {\n    const response = await getHttp(\"allEmployeesWithSkills\");\n    await setupdatedEmployeeDetails(response);\n  };\n\n  const getOverAllScore = () => {\n    updatedAllEntityList?.map((entity, index) => {\n      var achievedEntityScore = 0;\n      var achievedTotalScore = 0;\n      updatedEmployeeDetails?.map((employee, number) => {\n        var achievedEmployeeScore = 0;\n        var employeeTotalScore = 0;\n\n        if (entity.label.toLowerCase() === employee.entity.toLowerCase()) {\n          console.log(\n            entity.label.toLowerCase(),\n            \"-----------------\",\n            employee.entity.toLowerCase()\n          );\n          employee.skills.map((item, id) => {\n            achievedEmployeeScore = achievedEmployeeScore + item.score;\n            employeeTotalScore = employeeTotalScore + skillMaximumScoreValue;\n          });\n\n          updatedEmployeeDetails[number].employeeScorePercentage =\n            (achievedEmployeeScore / employeeTotalScore) * 100;\n\n          achievedEntityScore = achievedEntityScore + achievedEmployeeScore;\n          achievedTotalScore = achievedTotalScore + employeeTotalScore;\n        } else {\n          //updatedEmployeeDetails[number].employeeScorePercentage = 0;\n        }\n        setupdatedEmployeeDetails(updatedEmployeeDetails);\n        updatedAllEntityList[index].entityTotalSkillPercentage =\n          (achievedEntityScore / achievedTotalScore) * 100;\n        console.log(\n          updatedAllEntityList[index].label,\n          \"&&&&&&&\",\n          (achievedEntityScore / achievedTotalScore) * 100\n        );\n      });\n      // setupdatedEmployeeDetails(updatedEmployeeDetails);\n      // updatedAllEntityList[index].entityTotalSkillPercentage =\n      //   (achievedEntityScore / achievedTotalScore) * 100;\n      // console.log(\"&&&&&&&\", (achievedEntityScore / achievedTotalScore) * 100);\n    });\n    setupdatedAllEntityList(updatedAllEntityList);\n  };\n\n  const goToEntityDetails = (entityName) => {\n    props.onEntityClick(entityName);\n  };\n  return (\n    <div>\n      <FilterSection\n        onSelectedValueChange={changeDisplaySetData}\n        allEntities={entityListForDropDown}\n      />\n      {/* <MultiSelectDropdown /> */}\n\n      <div className=\"entity-container\">\n        {updatedAllEntityList?.map((item, index) => (\n          <div\n            key={index}\n            className=\"each-entity-container\"\n            onClick={() => goToEntityDetails(item.label)}\n          >\n            <EntityBox\n              logo={updatedAllEntityList[index].image}\n              name={updatedAllEntityList[index].label}\n              totalEntityScore={Math.round(item.entityTotalSkillPercentage)}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}