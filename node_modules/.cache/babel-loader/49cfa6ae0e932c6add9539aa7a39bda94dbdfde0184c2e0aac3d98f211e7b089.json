{"ast":null,"code":"import { skillMaximumScoreValue } from \"./Constants\";\nexport const getSkillPercentage = skillArray => {\n  var achievedEmployeeScore = 0;\n  var employeeTotalScore = 0;\n  var finalResult = 0;\n  if (skillArray.length > 0) {\n    skillArray === null || skillArray === void 0 ? void 0 : skillArray.map((item, id) => {\n      achievedEmployeeScore = achievedEmployeeScore + item.score;\n      employeeTotalScore = employeeTotalScore + skillMaximumScoreValue;\n    });\n    finalResult = calculatePercent(achievedEmployeeScore, employeeTotalScore);\n    // finalResult = (achievedEmployeeScore / employeeTotalScore) * 100;\n  }\n\n  return finalResult;\n};\nexport const calculatePercent = (achieved, total) => {\n  var finalPercentResult = achieved / total * 100;\n  return Math.round(finalPercentResult);\n};\nexport const alertColor = value => {\n  const progressBarColor = value >= 80 ? \"green\" : value >= 60 ? \"orange\" : \"red\";\n  return progressBarColor;\n};\nexport const getUserDetails = () => {\n  var userDeatilsString = sessionStorage.getItem(\"userDetails\");\n  return JSON.parse(userDeatilsString);\n};","map":{"version":3,"names":["skillMaximumScoreValue","getSkillPercentage","skillArray","achievedEmployeeScore","employeeTotalScore","finalResult","length","map","item","id","score","calculatePercent","achieved","total","finalPercentResult","Math","round","alertColor","value","progressBarColor","getUserDetails","userDeatilsString","sessionStorage","getItem","JSON","parse"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/service/Service.tsx"],"sourcesContent":["import { skillMaximumScoreValue } from \"./Constants\";\n\nexport const getSkillPercentage = (skillArray) => {\n  var achievedEmployeeScore = 0;\n  var employeeTotalScore = 0;\n  var finalResult = 0;\n  if (skillArray.length > 0) {\n    skillArray?.map((item, id) => {\n      achievedEmployeeScore = achievedEmployeeScore + item.score;\n      employeeTotalScore = employeeTotalScore + skillMaximumScoreValue;\n    });\n    finalResult = calculatePercent(achievedEmployeeScore, employeeTotalScore);\n    // finalResult = (achievedEmployeeScore / employeeTotalScore) * 100;\n  }\n  return finalResult;\n};\n\nexport const calculatePercent = (achieved, total) => {\n  var finalPercentResult = (achieved / total) * 100;\n  return Math.round(finalPercentResult);\n};\n\nexport const alertColor = (value) => {\n  const progressBarColor =\n    value >= 80 ? \"green\" : value >= 60 ? \"orange\" : \"red\";\n  return progressBarColor;\n};\n\nexport const getUserDetails = () => {\n  var userDeatilsString = sessionStorage.getItem(\"userDetails\");\n  return JSON.parse(userDeatilsString);\n};\n"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,aAAa;AAEpD,OAAO,MAAMC,kBAAkB,GAAIC,UAAU,IAAK;EAChD,IAAIC,qBAAqB,GAAG,CAAC;EAC7B,IAAIC,kBAAkB,GAAG,CAAC;EAC1B,IAAIC,WAAW,GAAG,CAAC;EACnB,IAAIH,UAAU,CAACI,MAAM,GAAG,CAAC,EAAE;IACzBJ,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEK,GAAG,CAAC,CAACC,IAAI,EAAEC,EAAE,KAAK;MAC5BN,qBAAqB,GAAGA,qBAAqB,GAAGK,IAAI,CAACE,KAAK;MAC1DN,kBAAkB,GAAGA,kBAAkB,GAAGJ,sBAAsB;IAClE,CAAC,CAAC;IACFK,WAAW,GAAGM,gBAAgB,CAACR,qBAAqB,EAAEC,kBAAkB,CAAC;IACzE;EACF;;EACA,OAAOC,WAAW;AACpB,CAAC;AAED,OAAO,MAAMM,gBAAgB,GAAG,CAACC,QAAQ,EAAEC,KAAK,KAAK;EACnD,IAAIC,kBAAkB,GAAIF,QAAQ,GAAGC,KAAK,GAAI,GAAG;EACjD,OAAOE,IAAI,CAACC,KAAK,CAACF,kBAAkB,CAAC;AACvC,CAAC;AAED,OAAO,MAAMG,UAAU,GAAIC,KAAK,IAAK;EACnC,MAAMC,gBAAgB,GACpBD,KAAK,IAAI,EAAE,GAAG,OAAO,GAAGA,KAAK,IAAI,EAAE,GAAG,QAAQ,GAAG,KAAK;EACxD,OAAOC,gBAAgB;AACzB,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAM;EAClC,IAAIC,iBAAiB,GAAGC,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC;EAC7D,OAAOC,IAAI,CAACC,KAAK,CAACJ,iBAAiB,CAAC;AACtC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}