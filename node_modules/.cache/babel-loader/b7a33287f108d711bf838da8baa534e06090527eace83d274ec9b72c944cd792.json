{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/TestChart.tsx\";\nimport React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  labels: [\"Red\", \"Blue\", \"Yellow\"],\n  datasets: [{\n    data: [300, 50, 100],\n    backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n    hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n  }]\n};\nconst addLabelPlugin = {\n  afterDraw: function (chart, easing) {\n    if (chart.config.options.showLabel) {\n      const ctx = chart.ctx;\n      ctx.font = chart.config.options.labelFont;\n      ctx.fillStyle = chart.config.options.labelColor;\n      ctx.textAlign = \"center\";\n      ctx.fillText(chart.config.options.labelText, chart.width / 2, chart.height / 2);\n    }\n  }\n};\nconst options2 = {\n  showLabel: true,\n  labelText: \"My Chart Label\",\n  labelFont: \"bold 24px Arial\",\n  labelColor: \"#000000\",\n  // ...\n  plugins: [addLabelPlugin]\n};\nconst options = {\n  plugins: {\n    datalabels: {\n      formatter: (value, ctx) => {\n        const label = ctx.chart.data.labels[ctx.dataIndex];\n        return label;\n      },\n      align: \"top\",\n      anchor: \"center\",\n      offset: 25,\n      padding: -2,\n      clip: true,\n      font: {\n        size: 10,\n        weight: \"bold\"\n      }\n    }\n  }\n};\nconst DoughnutChart = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Doughnut Chart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n    data: data,\n    options: options2\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 63,\n  columnNumber: 3\n}, this);\n_c = DoughnutChart;\nexport default DoughnutChart;\nvar _c;\n$RefreshReg$(_c, \"DoughnutChart\");","map":{"version":3,"names":["React","Doughnut","data","labels","datasets","backgroundColor","hoverBackgroundColor","addLabelPlugin","afterDraw","chart","easing","config","options","showLabel","ctx","font","labelFont","fillStyle","labelColor","textAlign","fillText","labelText","width","height","options2","plugins","datalabels","formatter","value","label","dataIndex","align","anchor","offset","padding","clip","size","weight","DoughnutChart"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/TestChart.tsx"],"sourcesContent":["import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { ChartData, ChartOptions } from \"chart.js\";\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\n\nconst data: ChartData<\"doughnut\"> = {\n  labels: [\"Red\", \"Blue\", \"Yellow\"],\n  datasets: [\n    {\n      data: [300, 50, 100],\n      backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n      hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n    },\n  ],\n};\n\nconst addLabelPlugin = {\n  afterDraw: function (chart, easing) {\n    if (chart.config.options.showLabel) {\n      const ctx = chart.ctx;\n      ctx.font = chart.config.options.labelFont;\n      ctx.fillStyle = chart.config.options.labelColor;\n      ctx.textAlign = \"center\";\n      ctx.fillText(\n        chart.config.options.labelText,\n        chart.width / 2,\n        chart.height / 2\n      );\n    }\n  },\n};\n\nconst options2 = {\n  showLabel: true,\n  labelText: \"My Chart Label\",\n  labelFont: \"bold 24px Arial\",\n  labelColor: \"#000000\",\n  // ...\n  plugins: [addLabelPlugin],\n};\n\nconst options: ChartOptions<\"doughnut\"> = {\n  plugins: {\n    datalabels: {\n      formatter: (value, ctx) => {\n        const label = ctx.chart.data.labels[ctx.dataIndex];\n        return label;\n      },\n      align: \"top\",\n      anchor: \"center\",\n      offset: 25,\n      padding: -2,\n      clip: true,\n      font: {\n        size: 10,\n        weight: \"bold\",\n      },\n    },\n  },\n};\n\nconst DoughnutChart = () => (\n  <div>\n    <h2>Doughnut Chart</h2>\n    <Doughnut data={data} options={options2} />\n  </div>\n);\n\nexport default DoughnutChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,iBAAiB;AAAC;AAI3C,MAAMC,IAA2B,GAAG;EAClCC,MAAM,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC;EACjCC,QAAQ,EAAE,CACR;IACEF,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;IACpBG,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAClDC,oBAAoB,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS;EACxD,CAAC;AAEL,CAAC;AAED,MAAMC,cAAc,GAAG;EACrBC,SAAS,EAAE,UAAUC,KAAK,EAAEC,MAAM,EAAE;IAClC,IAAID,KAAK,CAACE,MAAM,CAACC,OAAO,CAACC,SAAS,EAAE;MAClC,MAAMC,GAAG,GAAGL,KAAK,CAACK,GAAG;MACrBA,GAAG,CAACC,IAAI,GAAGN,KAAK,CAACE,MAAM,CAACC,OAAO,CAACI,SAAS;MACzCF,GAAG,CAACG,SAAS,GAAGR,KAAK,CAACE,MAAM,CAACC,OAAO,CAACM,UAAU;MAC/CJ,GAAG,CAACK,SAAS,GAAG,QAAQ;MACxBL,GAAG,CAACM,QAAQ,CACVX,KAAK,CAACE,MAAM,CAACC,OAAO,CAACS,SAAS,EAC9BZ,KAAK,CAACa,KAAK,GAAG,CAAC,EACfb,KAAK,CAACc,MAAM,GAAG,CAAC,CACjB;IACH;EACF;AACF,CAAC;AAED,MAAMC,QAAQ,GAAG;EACfX,SAAS,EAAE,IAAI;EACfQ,SAAS,EAAE,gBAAgB;EAC3BL,SAAS,EAAE,iBAAiB;EAC5BE,UAAU,EAAE,SAAS;EACrB;EACAO,OAAO,EAAE,CAAClB,cAAc;AAC1B,CAAC;AAED,MAAMK,OAAiC,GAAG;EACxCa,OAAO,EAAE;IACPC,UAAU,EAAE;MACVC,SAAS,EAAE,CAACC,KAAK,EAAEd,GAAG,KAAK;QACzB,MAAMe,KAAK,GAAGf,GAAG,CAACL,KAAK,CAACP,IAAI,CAACC,MAAM,CAACW,GAAG,CAACgB,SAAS,CAAC;QAClD,OAAOD,KAAK;MACd,CAAC;MACDE,KAAK,EAAE,KAAK;MACZC,MAAM,EAAE,QAAQ;MAChBC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE,CAAC,CAAC;MACXC,IAAI,EAAE,IAAI;MACVpB,IAAI,EAAE;QACJqB,IAAI,EAAE,EAAE;QACRC,MAAM,EAAE;MACV;IACF;EACF;AACF,CAAC;AAED,MAAMC,aAAa,GAAG,mBACpB;EAAA,wBACE;IAAA,UAAI;EAAc;IAAA;IAAA;IAAA;EAAA,QAAK,eACvB,QAAC,QAAQ;IAAC,IAAI,EAAEpC,IAAK;IAAC,OAAO,EAAEsB;EAAS;IAAA;IAAA;IAAA;EAAA,QAAG;AAAA;EAAA;EAAA;EAAA;AAAA,QAE9C;AAAC,KALIc,aAAa;AAOnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}