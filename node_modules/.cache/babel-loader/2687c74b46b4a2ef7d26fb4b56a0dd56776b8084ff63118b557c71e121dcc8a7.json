{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/barChart/BarChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BarChart = _ref => {\n  _s();\n  let {\n    data,\n    xAxis,\n    title,\n    type\n  } = _ref;\n  const [dataSeries, setdataSeries] = useState([{\n    name: {\n      title\n    },\n    //will be displayed on the y-axis\n    data: data\n  }]);\n  //const [dataSeries, setDataSeries] = useState(data);\n  const [option, setOption] = useState({\n    legend: {\n      show: false\n    },\n    xaxis: {\n      categories: xAxis\n    },\n    title: {\n      text: title,\n      style: {\n        fontSize: \"14px\",\n        fontWeight: \"bold\",\n        fontFamily: \"Bukra\",\n        color: \"red\"\n      }\n    },\n    plotOptions: {\n      bar: {\n        colors: {\n          ranges: [{\n            from: -100,\n            to: 0,\n            color: \"#b70849\"\n          }, {\n            from: 0,\n            to: 100,\n            color: \"#1034a6\"\n          }]\n        }\n      }\n    },\n    dataLabels: {\n      enabled: true,\n      formatter: function (val, opts) {\n        const isPositive = val >= 0;\n        return isPositive && type == \"progress\" ? `+${val}` : val.toString();\n      }\n    },\n    yaxis: {\n      //forceNiceScale: true,\n    }\n  });\n  useEffect(() => {\n    if (data) {\n      setdataSeries([{\n        name: type == \"progress\" ? \"Improvement over last year\" : \"Latest Score\",\n        //will be displayed on the y-axis\n        data: data\n      }]);\n    }\n  }, [data]);\n  useEffect(() => {\n    //setdataSeries(data);\n    //if (data) {\n    //const categories = data.map((item) => item);\n    setOption(prevState => ({\n      ...prevState,\n      xaxis: {\n        categories: xAxis\n      }\n    }));\n\n    //\n    //}\n  }, [xAxis]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      options: option,\n      series: dataSeries,\n      type: \"bar\",\n      height: 350,\n      width: 660\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(BarChart, \"24peSCLBMwdA0TpTAi7r/jLVwjo=\");\n_c = BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useEffect","useState","Chart","BarChart","data","xAxis","title","type","dataSeries","setdataSeries","name","option","setOption","legend","show","xaxis","categories","text","style","fontSize","fontWeight","fontFamily","color","plotOptions","bar","colors","ranges","from","to","dataLabels","enabled","formatter","val","opts","isPositive","toString","yaxis","prevState"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/barChart/BarChart.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\nexport const BarChart = ({ data, xAxis, title, type }) => {\n  const [dataSeries, setdataSeries] = useState<any>([\n    {\n      name: { title }, //will be displayed on the y-axis\n      data: data,\n    },\n  ]);\n  //const [dataSeries, setDataSeries] = useState(data);\n  const [option, setOption] = useState<any>({\n    legend: {\n      show: false,\n    },\n    xaxis: {\n      categories: xAxis,\n    },\n    title: {\n      text: title,\n      style: {\n        fontSize: \"14px\",\n        fontWeight: \"bold\",\n        fontFamily: \"Bukra\",\n        color: \"red\",\n      },\n    },\n    plotOptions: {\n      bar: {\n        colors: {\n          ranges: [\n            {\n              from: -100,\n              to: 0,\n              color: \"#b70849\",\n            },\n            {\n              from: 0,\n              to: 100,\n              color: \"#1034a6\",\n            },\n          ],\n        },\n      },\n    },\n    dataLabels: {\n      enabled: true,\n      formatter: function (val, opts) {\n        const isPositive = val >= 0;\n        return isPositive && type == \"progress\" ? `+${val}` : val.toString();\n      },\n    },\n    yaxis: {\n      //forceNiceScale: true,\n    },\n  });\n\n  useEffect(() => {\n    if (data) {\n      setdataSeries([\n        {\n          name:\n            type == \"progress\" ? \"Improvement over last year\" : \"Latest Score\", //will be displayed on the y-axis\n          data: data,\n        },\n      ]);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    //setdataSeries(data);\n    //if (data) {\n    //const categories = data.map((item) => item);\n    setOption((prevState) => ({\n      ...prevState,\n      xaxis: {\n        categories: xAxis,\n      },\n    }));\n\n    //\n    //}\n  }, [xAxis]);\n  return (\n    <div>\n      <Chart\n        options={option}\n        series={dataSeries}\n        type=\"bar\"\n        height={350}\n        width={660}\n      />\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,kBAAkB;AAAC;AAErC,OAAO,MAAMC,QAAQ,GAAG,QAAkC;EAAA;EAAA,IAAjC;IAAEC,IAAI;IAAEC,KAAK;IAAEC,KAAK;IAAEC;EAAK,CAAC;EACnD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAM,CAChD;IACES,IAAI,EAAE;MAAEJ;IAAM,CAAC;IAAE;IACjBF,IAAI,EAAEA;EACR,CAAC,CACF,CAAC;EACF;EACA,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAM;IACxCY,MAAM,EAAE;MACNC,IAAI,EAAE;IACR,CAAC;IACDC,KAAK,EAAE;MACLC,UAAU,EAAEX;IACd,CAAC;IACDC,KAAK,EAAE;MACLW,IAAI,EAAEX,KAAK;MACXY,KAAK,EAAE;QACLC,QAAQ,EAAE,MAAM;QAChBC,UAAU,EAAE,MAAM;QAClBC,UAAU,EAAE,OAAO;QACnBC,KAAK,EAAE;MACT;IACF,CAAC;IACDC,WAAW,EAAE;MACXC,GAAG,EAAE;QACHC,MAAM,EAAE;UACNC,MAAM,EAAE,CACN;YACEC,IAAI,EAAE,CAAC,GAAG;YACVC,EAAE,EAAE,CAAC;YACLN,KAAK,EAAE;UACT,CAAC,EACD;YACEK,IAAI,EAAE,CAAC;YACPC,EAAE,EAAE,GAAG;YACPN,KAAK,EAAE;UACT,CAAC;QAEL;MACF;IACF,CAAC;IACDO,UAAU,EAAE;MACVC,OAAO,EAAE,IAAI;MACbC,SAAS,EAAE,UAAUC,GAAG,EAAEC,IAAI,EAAE;QAC9B,MAAMC,UAAU,GAAGF,GAAG,IAAI,CAAC;QAC3B,OAAOE,UAAU,IAAI3B,IAAI,IAAI,UAAU,GAAI,IAAGyB,GAAI,EAAC,GAAGA,GAAG,CAACG,QAAQ,EAAE;MACtE;IACF,CAAC;IACDC,KAAK,EAAE;MACL;IAAA;EAEJ,CAAC,CAAC;EAEFpC,SAAS,CAAC,MAAM;IACd,IAAII,IAAI,EAAE;MACRK,aAAa,CAAC,CACZ;QACEC,IAAI,EACFH,IAAI,IAAI,UAAU,GAAG,4BAA4B,GAAG,cAAc;QAAE;QACtEH,IAAI,EAAEA;MACR,CAAC,CACF,CAAC;IACJ;EACF,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEVJ,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACAY,SAAS,CAAEyB,SAAS,KAAM;MACxB,GAAGA,SAAS;MACZtB,KAAK,EAAE;QACLC,UAAU,EAAEX;MACd;IACF,CAAC,CAAC,CAAC;;IAEH;IACA;EACF,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EACX,oBACE;IAAA,uBACE,QAAC,KAAK;MACJ,OAAO,EAAEM,MAAO;MAChB,MAAM,EAAEH,UAAW;MACnB,IAAI,EAAC,KAAK;MACV,MAAM,EAAE,GAAI;MACZ,KAAK,EAAE;IAAI;MAAA;MAAA;MAAA;IAAA;EACX;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GA3FWL,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}