{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/downloadExcel/errorComponent/ErrorComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { hideErrorMesaage } from \"../../../redux/features/errorSlice\";\nimport Store from \"../../../redux/Store\";\n\n// const ErrorComponent = () => {\n//   const errorMessage = useSelector((state: any) => state.errorMessage);\n//   console.log(errorMessage);\n//   const [isLoading, setisLoading] = useState(errorMessage);\n//   return <div className=\"error\">{errorMessage}</div>;\n// };\n\n//\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ErrorComponent = () => {\n  _s();\n  const errorMessage = useSelector(state => state.errorMessage);\n  useEffect(() => {\n    if (errorMessage) {\n      const timeoutId = setTimeout(() => {\n        Store.dispatch(hideErrorMesaage());\n      }, 3000);\n\n      // Clean up the timer when the component unmounts or when a new error occurs\n      return () => clearTimeout(timeoutId);\n    }\n  }, [Store.dispatch, errorMessage]);\n  const [isLoading, setisLoading] = useState(errorMessage);\n  console.log(errorMessage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: errorMessage.errorMessage.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n_s(ErrorComponent, \"G/LlcC4DGNLmJCNqy36wS1JK+ZI=\", false, function () {\n  return [useSelector];\n});\n_c = ErrorComponent;\nexport default ErrorComponent;\nvar _c;\n$RefreshReg$(_c, \"ErrorComponent\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","hideErrorMesaage","Store","ErrorComponent","errorMessage","state","timeoutId","setTimeout","dispatch","clearTimeout","isLoading","setisLoading","console","log","message"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/downloadExcel/errorComponent/ErrorComponent.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { hideErrorMesaage } from \"../../../redux/features/errorSlice\";\nimport Store from \"../../../redux/Store\";\n\n// const ErrorComponent = () => {\n//   const errorMessage = useSelector((state: any) => state.errorMessage);\n//   console.log(errorMessage);\n//   const [isLoading, setisLoading] = useState(errorMessage);\n//   return <div className=\"error\">{errorMessage}</div>;\n// };\n\n//\n\nconst ErrorComponent = () => {\n  const errorMessage = useSelector((state: any) => state.errorMessage);\n\n  useEffect(() => {\n    if (errorMessage) {\n      const timeoutId = setTimeout(() => {\n        Store.dispatch(hideErrorMesaage());\n      }, 3000);\n\n      // Clean up the timer when the component unmounts or when a new error occurs\n      return () => clearTimeout(timeoutId);\n    }\n  }, [Store.dispatch, errorMessage]);\n  const [isLoading, setisLoading] = useState(errorMessage);\n  console.log(errorMessage);\n  return <div>{errorMessage.errorMessage.message}</div>;\n};\nexport default ErrorComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAAkBC,WAAW,QAAQ,aAAa;AAClD,SAASC,gBAAgB,QAAQ,oCAAoC;AACrE,OAAOC,KAAK,MAAM,sBAAsB;;AAExC;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAEA,MAAMC,cAAc,GAAG,MAAM;EAAA;EAC3B,MAAMC,YAAY,GAAGJ,WAAW,CAAEK,KAAU,IAAKA,KAAK,CAACD,YAAY,CAAC;EAEpEN,SAAS,CAAC,MAAM;IACd,IAAIM,YAAY,EAAE;MAChB,MAAME,SAAS,GAAGC,UAAU,CAAC,MAAM;QACjCL,KAAK,CAACM,QAAQ,CAACP,gBAAgB,EAAE,CAAC;MACpC,CAAC,EAAE,IAAI,CAAC;;MAER;MACA,OAAO,MAAMQ,YAAY,CAACH,SAAS,CAAC;IACtC;EACF,CAAC,EAAE,CAACJ,KAAK,CAACM,QAAQ,EAAEJ,YAAY,CAAC,CAAC;EAClC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAACK,YAAY,CAAC;EACxDQ,OAAO,CAACC,GAAG,CAACT,YAAY,CAAC;EACzB,oBAAO;IAAA,UAAMA,YAAY,CAACA,YAAY,CAACU;EAAO;IAAA;IAAA;IAAA;EAAA,QAAO;AACvD,CAAC;AAAC,GAhBIX,cAAc;EAAA,QACGH,WAAW;AAAA;AAAA,KAD5BG,cAAc;AAiBpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}