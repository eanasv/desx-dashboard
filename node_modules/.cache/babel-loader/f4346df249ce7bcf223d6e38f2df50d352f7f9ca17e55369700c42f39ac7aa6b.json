{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/lineChart/LineChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChart = _ref => {\n  _s();\n  let {\n    data,\n    xAxis\n  } = _ref;\n  const [dataSeries, setdataSeries] = useState(data || []);\n  const [option, setOption] = useState({\n    legend: {\n      show: false\n    },\n    xaxis: {\n      categories: xAxis\n    },\n    yaxis: {\n      forceNiceScale: true\n    }\n  });\n  useEffect(() => {\n    setdataSeries(data);\n    if (data) {\n      const categories = data.map(item => item.category);\n      setOption(prevState => ({\n        ...prevState,\n        xaxis: {\n          ...prevState.xaxis,\n          categories: xAxis\n        }\n      }));\n    }\n  }, [data]);\n  const series = dataSeries;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      options: option,\n      series: dataSeries,\n      type: \"line\",\n      width: 400\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(LineChart, \"l/zwfovS2wuY3iZ87VIyQETwRI4=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useEffect","useState","Chart","LineChart","data","xAxis","dataSeries","setdataSeries","option","setOption","legend","show","xaxis","categories","yaxis","forceNiceScale","map","item","category","prevState","series"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/lineChart/LineChart.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Chart from \"react-apexcharts\";\n\nconst LineChart = ({ data, xAxis }) => {\n  const [dataSeries, setdataSeries] = useState(data || []);\n  const [option, setOption] = useState<any>({\n    legend: {\n      show: false,\n    },\n    xaxis: {\n      categories: xAxis,\n    },\n    yaxis: {\n      forceNiceScale: true,\n    },\n  });\n\n  useEffect(() => {\n    setdataSeries(data);\n\n    if (data) {\n      const categories = data.map((item) => item.category);\n      setOption((prevState) => ({\n        ...prevState,\n        xaxis: {\n          ...prevState.xaxis,\n          categories: xAxis,\n        },\n      }));\n    }\n  }, [data]);\n\n  const series = dataSeries;\n\n  return (\n    <div>\n      <Chart options={option} series={dataSeries} type=\"line\" width={400} />\n    </div>\n  );\n};\n\nexport default LineChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,KAAK,MAAM,kBAAkB;AAAC;AAErC,MAAMC,SAAS,GAAG,QAAqB;EAAA;EAAA,IAApB;IAAEC,IAAI;IAAEC;EAAM,CAAC;EAChC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAACG,IAAI,IAAI,EAAE,CAAC;EACxD,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAM;IACxCS,MAAM,EAAE;MACNC,IAAI,EAAE;IACR,CAAC;IACDC,KAAK,EAAE;MACLC,UAAU,EAAER;IACd,CAAC;IACDS,KAAK,EAAE;MACLC,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEFf,SAAS,CAAC,MAAM;IACdO,aAAa,CAACH,IAAI,CAAC;IAEnB,IAAIA,IAAI,EAAE;MACR,MAAMS,UAAU,GAAGT,IAAI,CAACY,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAAC;MACpDT,SAAS,CAAEU,SAAS,KAAM;QACxB,GAAGA,SAAS;QACZP,KAAK,EAAE;UACL,GAAGO,SAAS,CAACP,KAAK;UAClBC,UAAU,EAAER;QACd;MACF,CAAC,CAAC,CAAC;IACL;EACF,CAAC,EAAE,CAACD,IAAI,CAAC,CAAC;EAEV,MAAMgB,MAAM,GAAGd,UAAU;EAEzB,oBACE;IAAA,uBACE,QAAC,KAAK;MAAC,OAAO,EAAEE,MAAO;MAAC,MAAM,EAAEF,UAAW;MAAC,IAAI,EAAC,MAAM;MAAC,KAAK,EAAE;IAAI;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAClE;AAEV,CAAC;AAAC,GApCIH,SAAS;AAAA,KAATA,SAAS;AAsCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}