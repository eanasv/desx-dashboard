{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/dateRangeFilter/DateRangeFilter.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getHttp } from \"../../service/APIRequest\";\nimport DateInput from \"../datePicker/DateInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DateRangeFilter = _ref => {\n  _s();\n  let {\n    fetchChartData,\n    fetchDates,\n    entityList,\n    selectedEntityList\n  } = _ref;\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState(null);\n  const [endCalendarVisible, setEndCalendarVisible] = useState(true);\n  const [selectedEntities, setselectedEntities] = useState(selectedEntityList);\n  const [allEntityList, setallEntityList] = useState(entityList);\n  useEffect(() => {\n    const today = new Date();\n    const defaultEndDate = today.toISOString().slice(0, 10);\n    const oneYearAgo = new Date(today.getFullYear() - 1, today.getMonth(), today.getDate());\n    const defaultStartDate = oneYearAgo.toISOString().slice(0, 10);\n    setTimeout(() => {\n      setStartDate(defaultStartDate);\n      setEndDate(defaultEndDate);\n      filterData(defaultStartDate, defaultEndDate);\n    }, 110);\n  }, []); //companyAverageScore\n\n  useEffect(() => {\n    console.log(\"-----\", selectedEntityList);\n    setselectedEntities(selectedEntityList);\n    if (selectedEntityList.length > 0) {\n      filterData(startDate, endDate, selectedEntityList);\n    } else {\n      filterData(startDate, endDate, allEntityList);\n    }\n  }, [selectedEntityList]);\n  const filterData = async (startDateParam, endDateParam, selectedEntities) => {\n    fetchChartData();\n    fetchDates(startDateParam, endDateParam);\n    var entityList = selectedEntities;\n    if (startDateParam && endDateParam) {\n      const response = await getHttp(\"skills/averageScoreOfListOfEntities\", {\n        startDate: startDateParam,\n        endDate: endDateParam,\n        entityNames: entityList.join(\",\")\n      });\n      fetchChartData(response);\n      return {\n        startDate,\n        endDate\n      };\n    }\n    return null;\n  };\n  function changeFilterStartDate(changeInStartDate) {\n    setEndCalendarVisible(true);\n    setStartDate(changeInStartDate);\n    setEndDate(changeInStartDate);\n  }\n  function changeFilterEndDate(changeInEndDate) {\n    setEndDate(changeInEndDate);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"date-range-filter-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DateInput, {\n        maxDate: new Date().toISOString().substr(0, 10),\n        value: startDate,\n        dateChangeEvent: changeFilterStartDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), endCalendarVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DateInput, {\n        maxDate: new Date().toISOString().substr(0, 10),\n        value: endDate,\n        dateChangeEvent: changeFilterEndDate,\n        minDate: startDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => filterData(startDate, endDate)\n      // onClick={filterData(startDate, endDate)}\n      ,\n      children: \"Filter Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(DateRangeFilter, \"HTr6kvMYuZ72ZCZvfVxGSoivJ6o=\");\n_c = DateRangeFilter;\nvar _c;\n$RefreshReg$(_c, \"DateRangeFilter\");","map":{"version":3,"names":["React","useEffect","useState","getHttp","DateInput","DateRangeFilter","fetchChartData","fetchDates","entityList","selectedEntityList","startDate","setStartDate","endDate","setEndDate","endCalendarVisible","setEndCalendarVisible","selectedEntities","setselectedEntities","allEntityList","setallEntityList","today","Date","defaultEndDate","toISOString","slice","oneYearAgo","getFullYear","getMonth","getDate","defaultStartDate","setTimeout","filterData","console","log","length","startDateParam","endDateParam","response","entityNames","join","changeFilterStartDate","changeInStartDate","changeFilterEndDate","changeInEndDate","substr"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/dateRangeFilter/DateRangeFilter.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getHttp } from \"../../service/APIRequest\";\nimport DateInput from \"../datePicker/DateInput\";\n\ninterface DateRangeFilterProps {\n  fetchChartData: any;\n  fetchDates?: any;\n  entityList?: any;\n  selectedEntityList?: any;\n}\nexport const DateRangeFilter: React.FC<DateRangeFilterProps> = ({\n  fetchChartData,\n  fetchDates,\n  entityList,\n  selectedEntityList,\n}) => {\n  const [startDate, setStartDate] = useState<any>();\n  const [endDate, setEndDate] = useState(null);\n  const [endCalendarVisible, setEndCalendarVisible] = useState(true);\n  const [selectedEntities, setselectedEntities] = useState(selectedEntityList);\n  const [allEntityList, setallEntityList] = useState(entityList);\n\n  useEffect(() => {\n    const today = new Date();\n    const defaultEndDate = today.toISOString().slice(0, 10);\n    const oneYearAgo = new Date(\n      today.getFullYear() - 1,\n      today.getMonth(),\n      today.getDate()\n    );\n    const defaultStartDate = oneYearAgo.toISOString().slice(0, 10);\n    setTimeout(() => {\n      setStartDate(defaultStartDate);\n      setEndDate(defaultEndDate);\n      filterData(defaultStartDate, defaultEndDate);\n    }, 110);\n  }, []); //companyAverageScore\n\n  useEffect(() => {\n    console.log(\"-----\", selectedEntityList);\n\n    setselectedEntities(selectedEntityList);\n    if (selectedEntityList.length > 0) {\n      filterData(startDate, endDate, selectedEntityList);\n    } else {\n      filterData(startDate, endDate, allEntityList);\n    }\n  }, [selectedEntityList]);\n\n  const filterData = async (\n    startDateParam,\n    endDateParam,\n    selectedEntities?\n  ) => {\n    fetchChartData();\n    fetchDates(startDateParam, endDateParam);\n    var entityList = selectedEntities;\n    if (startDateParam && endDateParam) {\n      const response = await getHttp(\"skills/averageScoreOfListOfEntities\", {\n        startDate: startDateParam,\n        endDate: endDateParam,\n        entityNames: entityList.join(\",\"),\n      });\n      fetchChartData(response);\n\n      return { startDate, endDate };\n    }\n    return null;\n  };\n\n  function changeFilterStartDate(changeInStartDate) {\n    setEndCalendarVisible(true);\n    setStartDate(changeInStartDate);\n    setEndDate(changeInStartDate);\n  }\n\n  function changeFilterEndDate(changeInEndDate) {\n    setEndDate(changeInEndDate);\n  }\n\n  return (\n    <div className=\"date-range-filter-container\">\n      <div>\n        <label>Start Date:</label>\n        <DateInput\n          maxDate={new Date().toISOString().substr(0, 10)}\n          value={startDate}\n          dateChangeEvent={changeFilterStartDate}\n        />\n      </div>\n      {endCalendarVisible && (\n        <div>\n          <label>End Date:</label>\n          <DateInput\n            maxDate={new Date().toISOString().substr(0, 10)}\n            value={endDate}\n            dateChangeEvent={changeFilterEndDate}\n            minDate={startDate}\n          />\n        </div>\n      )}\n      <button\n        onClick={() => filterData(startDate, endDate)}\n        // onClick={filterData(startDate, endDate)}\n      >\n        Filter Data\n      </button>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}