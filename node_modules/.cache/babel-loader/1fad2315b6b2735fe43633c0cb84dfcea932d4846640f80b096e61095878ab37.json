{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/datePicker/DateInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DateInput = () => {\n  _s();\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(null);\n  const [endCalendarVisible, setEndCalendarVisible] = useState(false);\n  const handleStartChange = date => {\n    setStartDate(date);\n    setEndCalendarVisible(true);\n  };\n  const handleEndChange = date => {\n    setEndDate(date);\n  };\n  const filterData = () => {\n    console.log(startDate, endDate);\n    if (startDate && endDate) {\n      const filteredData = data.filter(item => new Date(item.date) >= new Date(startDate) && new Date(item.date) <= new Date(endDate));\n      console.log(filteredData);\n    }\n  };\n  const data = [{\n    id: 1,\n    date: \"2022-01-01\"\n  }, {\n    id: 2,\n    date: \"2022-02-05\"\n  }, {\n    id: 3,\n    date: \"2022-03-15\"\n  }, {\n    id: 4,\n    date: \"2023-04-02\"\n  }, {\n    id: 5,\n    date: \"2023-05-20\"\n  }];\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const renderCustomHeader = _ref => {\n    let {\n      date,\n      decreaseMonth,\n      increaseMonth\n    } = _ref;\n    const month = monthNames[date.getMonth()];\n    const year = date.getFullYear();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"prev\",\n        onClick: decreaseMonth,\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current\",\n        children: [month, \" \", year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next\",\n        onClick: increaseMonth,\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  };\n  const today = new Date();\n  const currentMonth = today.getMonth();\n  const currentYear = today.getFullYear();\n  const disabledMonths = Array.from({\n    length: startDate.getMonth()\n  }, (_, i) => new Date(startDate.getFullYear(), i, 1));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: startDate,\n        onChange: handleStartChange,\n        showMonthYearPicker: true,\n        renderCustomHeader: renderCustomHeader,\n        maxDate: new Date(currentYear, currentMonth)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), endCalendarVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: endDate,\n        onChange: handleEndChange,\n        showMonthYearPicker: true,\n        renderCustomHeader: renderCustomHeader,\n        minDate: startDate,\n        disabledMonths: disabledMonths,\n        maxDate: new Date(currentYear, currentMonth)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: filterData,\n      children: \"Filter Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(DateInput, \"Wh98s8B5NQ4AHUSquGtxUgBd//U=\");\n_c = DateInput;\nexport default DateInput;\nvar _c;\n$RefreshReg$(_c, \"DateInput\");","map":{"version":3,"names":["React","useState","DatePicker","DateInput","startDate","setStartDate","Date","endDate","setEndDate","endCalendarVisible","setEndCalendarVisible","handleStartChange","date","handleEndChange","filterData","console","log","filteredData","data","filter","item","id","monthNames","renderCustomHeader","decreaseMonth","increaseMonth","month","getMonth","year","getFullYear","today","currentMonth","currentYear","disabledMonths","Array","from","length","_","i"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/datePicker/DateInput.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst DateInput = () => {\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(null);\n  const [endCalendarVisible, setEndCalendarVisible] = useState(false);\n\n  const handleStartChange = (date) => {\n    setStartDate(date);\n    setEndCalendarVisible(true);\n  };\n\n  const handleEndChange = (date) => {\n    setEndDate(date);\n  };\n\n  const filterData = () => {\n    console.log(startDate, endDate);\n    if (startDate && endDate) {\n      const filteredData = data.filter(\n        (item) =>\n          new Date(item.date) >= new Date(startDate) &&\n          new Date(item.date) <= new Date(endDate)\n      );\n      console.log(filteredData);\n    }\n  };\n\n  const data = [\n    { id: 1, date: \"2022-01-01\" },\n    { id: 2, date: \"2022-02-05\" },\n    { id: 3, date: \"2022-03-15\" },\n    { id: 4, date: \"2023-04-02\" },\n    { id: 5, date: \"2023-05-20\" },\n  ];\n\n  const monthNames = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const renderCustomHeader = ({ date, decreaseMonth, increaseMonth }) => {\n    const month = monthNames[date.getMonth()];\n    const year = date.getFullYear();\n    return (\n      <div className=\"header\">\n        <button className=\"prev\" onClick={decreaseMonth}>\n          {\"<\"}\n        </button>\n        <div className=\"current\">\n          {month} {year}\n        </div>\n        <button className=\"next\" onClick={increaseMonth}>\n          {\">\"}\n        </button>\n      </div>\n    );\n  };\n  const today = new Date();\n  const currentMonth = today.getMonth();\n  const currentYear = today.getFullYear();\n\n  const disabledMonths = Array.from(\n    { length: startDate.getMonth() },\n    (_, i) => new Date(startDate.getFullYear(), i, 1)\n  );\n\n  return (\n    <div>\n      <div>\n        <label>Start Date:</label>\n        <DatePicker\n          selected={startDate}\n          onChange={handleStartChange}\n          showMonthYearPicker\n          renderCustomHeader={renderCustomHeader}\n          maxDate={new Date(currentYear, currentMonth)}\n        />\n      </div>\n      {endCalendarVisible && (\n        <div>\n          <label>End Date:</label>\n          <DatePicker\n            selected={endDate}\n            onChange={handleEndChange}\n            showMonthYearPicker\n            renderCustomHeader={renderCustomHeader}\n            minDate={startDate}\n            disabledMonths={disabledMonths}\n            maxDate={new Date(currentYear, currentMonth)}\n          />\n        </div>\n      )}\n      <button onClick={filterData}>Filter Data</button>\n    </div>\n  );\n};\n\nexport default DateInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}