{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/donutChart/DonutChart.tsx\";\nimport React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\n//import \"chartjs-plugin-datalabels\";\n\nimport \"../Chart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst DonutChart = _ref => {\n  let {\n    details,\n    multiLayer,\n    heading\n  } = _ref;\n  var data;\n  if (details && multiLayer) {\n    var _details$, _details$2, _details$3, _details$4, _details$5, _details$6, _details$7, _details$8, _details$9;\n    data = {\n      datasets: [{\n        data: [(_details$ = details[0]) === null || _details$ === void 0 ? void 0 : _details$.count, 100 - ((_details$2 = details[0]) === null || _details$2 === void 0 ? void 0 : _details$2.count)],\n        label: (_details$3 = details[0]) === null || _details$3 === void 0 ? void 0 : _details$3.category,\n        backgroundColor: [\"#a2d6c4\", \"#ededed\"],\n        hoverBackgroundColor: [\"green\", \"#909497\"],\n        legend: [\"completed1\", \"not completed1\"]\n      }, {\n        data: [(_details$4 = details[1]) === null || _details$4 === void 0 ? void 0 : _details$4.count, 100 - ((_details$5 = details[1]) === null || _details$5 === void 0 ? void 0 : _details$5.count)],\n        label: (_details$6 = details[1]) === null || _details$6 === void 0 ? void 0 : _details$6.category,\n        backgroundColor: [\"rgba(54, 162, 235, 0.2)\", \"#ededed\"],\n        hoverBackgroundColor: [\"rgba(54, 162, 235, 1)\", \"#909497\"],\n        legent: [\"completed3\", \"not completed3\"]\n      }, {\n        data: [(_details$7 = details[2]) === null || _details$7 === void 0 ? void 0 : _details$7.count, 100 - ((_details$8 = details[2]) === null || _details$8 === void 0 ? void 0 : _details$8.count)],\n        label: (_details$9 = details[2]) === null || _details$9 === void 0 ? void 0 : _details$9.category,\n        backgroundColor: [\"rgba(255, 206, 86, 0.2)\", \"#ededed\"],\n        hoverBackgroundColor: [\"#FF6384\", \"#909497\"],\n        legent: [\"completed2\", \"not completed2\"]\n      }],\n      labels: [\"completed\", \"not completed\"]\n    };\n  } else {\n    data = {\n      labels: details === null || details === void 0 ? void 0 : details.map(item => item.category),\n      datasets: [{\n        label: \"# of Employees\",\n        data: details === null || details === void 0 ? void 0 : details.map(item => item.count),\n        backgroundColor: [\"#a2d6c4\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\"],\n        borderColor: [\"white\", \"white\", \"white\"],\n        borderWidth: 3\n      }]\n      // options: {\n      //   plugins: {\n      //     datalabels: {\n      //       formatter: (value) => {\n      //         console.log(value);\n      //         return value + \"%\";\n      //       },\n      //     },\n      //   },\n      // },\n    };\n  }\n\n  const options = {\n    responsive: true,\n    plugins: {\n      datalabels: {\n        display: true,\n        color: \"black\",\n        align: \"start\",\n        anchor: \"end\",\n        font: {\n          size: \"14\"\n        },\n        formatter: value => {\n          return value + \"%\";\n        }\n      },\n      legend: {\n        position: \"bottom\"\n      },\n      labels: {\n        usePointStyle: true,\n        pointStyle: \"circle\"\n      },\n      title: {\n        display: true,\n        text: \"Donut Chart\"\n      }\n    }\n  };\n\n  //eanas test multi\n\n  const options2 = {\n    title: {\n      display: true,\n      text: \"Multi-layered Donut Chart\"\n    },\n    legend: {\n      position: \"bottom\"\n    },\n    tooltips: {\n      callbacks: {\n        label: function (tooltipItem, data) {\n          const dataset = data.datasets[tooltipItem.datasetIndex];\n          const value = dataset.data[tooltipItem.index];\n          const label = data.labels[tooltipItem.index];\n          return `${label}: ${value}%`;\n        }\n      }\n    }\n  };\n  var percentage;\n  var options1 = {\n    plugins: {\n      datalabels: {\n        formatter: (value, ctx) => {\n          console.log(value, ctx);\n          return value + \"%\";\n          // let datasets = ctx.chart.data.datasets;\n\n          // if (datasets.indexOf(ctx.dataset) === datasets.length - 1) {\n          //   let sum = datasets[0].data.reduce((a, b) => a + b, 0);\n          //   percentage = Math.round((value / sum) * 100) + \"%\";\n          //   return percentage;\n          // } else {\n          //   return percentage;\n          // }\n        },\n\n        color: \"red\"\n      }\n    }\n  };\n  const options3 = {\n    plugins: {\n      datalabels: {\n        formatter: function (value, context) {\n          return context.chart.data.labels[context.dataIndex];\n        },\n        align: \"top\",\n        anchor: \"center\",\n        offset: 25,\n        padding: -2,\n        clip: true,\n        font: {\n          size: 10,\n          weight: \"bold\"\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      hidden: (details === null || details === void 0 ? void 0 : details.length) <= 0,\n      className: multiLayer ? \"center-heading\" : \"\",\n      children: heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Doughnut, {\n        data: data,\n        options: {\n          plugins: {\n            datalabels: {\n              formatter: function (value, context) {\n                return context.chart.data.labels[context.dataIndex];\n              }\n              // align: \"top\",\n              // anchor: \"center\",\n              // offset: 25,\n              // padding: -2,\n              // clip: false,\n            },\n\n            legend: {\n              position: \"top\",\n              labels: {\n                usePointStyle: true,\n                pointStyle: \"circle\"\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_c = DonutChart;\nexport default DonutChart;\nvar _c;\n$RefreshReg$(_c, \"DonutChart\");","map":{"version":3,"names":["React","Doughnut","Chart","ChartJS","ArcElement","Tooltip","Legend","register","DonutChart","details","multiLayer","heading","data","datasets","count","label","category","backgroundColor","hoverBackgroundColor","legend","legent","labels","map","item","borderColor","borderWidth","options","responsive","plugins","datalabels","display","color","align","anchor","font","size","formatter","value","position","usePointStyle","pointStyle","title","text","options2","tooltips","callbacks","tooltipItem","dataset","datasetIndex","index","percentage","options1","ctx","console","log","options3","context","chart","dataIndex","offset","padding","clip","weight","length"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/donutChart/DonutChart.tsx"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Bar, Doughnut } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  ArcElement,\n  Tooltip,\n  Legend,\n  ChartOptions,\n} from \"chart.js\";\n//import \"chartjs-plugin-datalabels\";\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\n\nimport \"../Chart.css\";\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\ninterface donutChartInterface {\n  details?: any;\n  multiLayer?: boolean;\n  heading: String;\n}\n\nconst DonutChart: React.FC<donutChartInterface> = ({\n  details,\n  multiLayer,\n  heading,\n}) => {\n  var data;\n  if (details && multiLayer) {\n    data = {\n      datasets: [\n        {\n          data: [details[0]?.count, 100 - details[0]?.count],\n          label: details[0]?.category,\n          backgroundColor: [\"#a2d6c4\", \"#ededed\"],\n          hoverBackgroundColor: [\"green\", \"#909497\"],\n          legend: [\"completed1\", \"not completed1\"],\n        },\n        {\n          data: [details[1]?.count, 100 - details[1]?.count],\n          label: details[1]?.category,\n          backgroundColor: [\"rgba(54, 162, 235, 0.2)\", \"#ededed\"],\n          hoverBackgroundColor: [\"rgba(54, 162, 235, 1)\", \"#909497\"],\n          legent: [\"completed3\", \"not completed3\"],\n        },\n        {\n          data: [details[2]?.count, 100 - details[2]?.count],\n          label: details[2]?.category,\n          backgroundColor: [\"rgba(255, 206, 86, 0.2)\", \"#ededed\"],\n          hoverBackgroundColor: [\"#FF6384\", \"#909497\"],\n          legent: [\"completed2\", \"not completed2\"],\n        },\n      ],\n      labels: [\"completed\", \"not completed\"],\n    };\n  } else {\n    data = {\n      labels: details?.map((item) => item.category),\n      datasets: [\n        {\n          label: \"# of Employees\",\n          data: details?.map((item) => item.count),\n          backgroundColor: [\n            \"#a2d6c4\",\n            \"rgba(54, 162, 235, 0.2)\",\n            \"rgba(255, 206, 86, 0.2)\",\n          ],\n          borderColor: [\"white\", \"white\", \"white\"],\n          borderWidth: 3,\n        },\n      ],\n      // options: {\n      //   plugins: {\n      //     datalabels: {\n      //       formatter: (value) => {\n      //         console.log(value);\n      //         return value + \"%\";\n      //       },\n      //     },\n      //   },\n      // },\n    };\n  }\n\n  const options = {\n    responsive: true,\n    plugins: {\n      datalabels: {\n        display: true,\n\n        color: \"black\",\n        align: \"start\",\n        anchor: \"end\",\n        font: { size: \"14\" },\n        formatter: (value) => {\n          return value + \"%\";\n        },\n      },\n      legend: {\n        position: \"bottom\",\n      },\n      labels: {\n        usePointStyle: true,\n        pointStyle: \"circle\",\n      },\n      title: {\n        display: true,\n        text: \"Donut Chart\",\n      },\n    },\n  };\n\n  //eanas test multi\n\n  const options2 = {\n    title: {\n      display: true,\n      text: \"Multi-layered Donut Chart\",\n    },\n    legend: {\n      position: \"bottom\",\n    },\n    tooltips: {\n      callbacks: {\n        label: function (tooltipItem, data) {\n          const dataset = data.datasets[tooltipItem.datasetIndex];\n          const value = dataset.data[tooltipItem.index];\n          const label = data.labels[tooltipItem.index];\n          return `${label}: ${value}%`;\n        },\n      },\n    },\n  };\n\n  var percentage;\n  var options1 = {\n    plugins: {\n      datalabels: {\n        formatter: (value, ctx) => {\n          console.log(value, ctx);\n          return value + \"%\";\n          // let datasets = ctx.chart.data.datasets;\n\n          // if (datasets.indexOf(ctx.dataset) === datasets.length - 1) {\n          //   let sum = datasets[0].data.reduce((a, b) => a + b, 0);\n          //   percentage = Math.round((value / sum) * 100) + \"%\";\n          //   return percentage;\n          // } else {\n          //   return percentage;\n          // }\n        },\n        color: \"red\",\n      },\n    },\n  };\n\n  const options3: ChartOptions<\"doughnut\"> = {\n    plugins: {\n      datalabels: {\n        formatter: function (value, context) {\n          return context.chart.data.labels[context.dataIndex];\n        },\n        align: \"top\",\n        anchor: \"center\",\n        offset: 25,\n        padding: -2,\n        clip: true,\n        font: {\n          size: 10,\n          weight: \"bold\",\n        },\n      },\n    },\n  };\n\n  return (\n    <div>\n      <div\n        hidden={details?.length <= 0}\n        className={multiLayer ? \"center-heading\" : \"\"}\n      >\n        {heading}\n      </div>\n      <div className=\"chart-container\">\n        {/* <Doughnut\n          data={data}\n          options={{\n            //responsive: true,\n            plugins: {\n              datalabels: {\n                formatter: function (value, context) {\n                  return \"context\";\n                },\n                align: \"top\",\n                anchor: \"center\",\n                offset: 25,\n                padding: -2,\n                clip: false,\n              },\n              legend: {\n                position: \"top\",\n                labels: {\n                  usePointStyle: true,\n                  pointStyle: \"circle\",\n                },\n              },\n            },\n          }}\n          //options={options1}\n        /> */}\n\n        <Doughnut\n          data={data}\n          options={{\n            plugins: {\n              datalabels: {\n                formatter: function (value, context) {\n                  return context.chart.data.labels[context.dataIndex];\n                },\n                // align: \"top\",\n                // anchor: \"center\",\n                // offset: 25,\n                // padding: -2,\n                // clip: false,\n              },\n              legend: {\n                position: \"top\",\n                labels: {\n                  usePointStyle: true,\n                  pointStyle: \"circle\",\n                },\n              },\n            },\n          }}\n        />\n\n        {/* <Doughnut data={data} options={options3} /> */}\n\n        {/* <Bar data={data} options={options1} /> */}\n      </div>\n    </div>\n  );\n};\n\nexport default DonutChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}