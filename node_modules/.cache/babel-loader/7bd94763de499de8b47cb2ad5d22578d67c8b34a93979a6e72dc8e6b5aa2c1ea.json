{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/progressCircle/ProgressBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { skillMaximumScoreValue } from \"../../service/Constants\";\nimport { alertColor, calculatePercent } from \"../../service/Service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = props => {\n  _s();\n  const [percentage, setPercentage] = useState(); // set initial percentage value\n\n  useEffect(() => {\n    getPercentageValue();\n  }, []);\n  const getPercentageValue = () => {\n    setPercentage(calculatePercent(props.score, skillMaximumScoreValue));\n  };\n  const progressBarColor = alertColor(percentage);\n  const progressBarStyles = {\n    width: `${percentage}%`,\n    // set width of progress bar based on percentage\n    background: `${progressBarColor}`\n  };\n  const progressBarContainer = {\n    borderColor: `${progressBarColor}`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress-bar-container\",\n    style: progressBarContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      style: progressBarStyles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgressBar, \"+n8jJlMdkTiyqSrYZqGRYBKma5Q=\");\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","useEffect","useState","skillMaximumScoreValue","alertColor","calculatePercent","ProgressBar","props","percentage","setPercentage","getPercentageValue","score","progressBarColor","progressBarStyles","width","background","progressBarContainer","borderColor"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/progressCircle/ProgressBar.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { skillMaximumScoreValue } from \"../../service/Constants\";\nimport { alertColor, calculatePercent } from \"../../service/Service\";\n\nconst ProgressBar = (props) => {\n  const [percentage, setPercentage] = useState<any>(); // set initial percentage value\n\n  useEffect(() => {\n    getPercentageValue();\n  }, []);\n\n  const getPercentageValue = () => {\n    setPercentage(calculatePercent(props.score, skillMaximumScoreValue));\n  };\n\n  const progressBarColor = alertColor(percentage);\n\n  const progressBarStyles = {\n    width: `${percentage}%`, // set width of progress bar based on percentage\n    background: `${progressBarColor}`,\n  };\n  const progressBarContainer = {\n    borderColor: `${progressBarColor}`,\n  };\n\n  return (\n    <div className=\"progress-bar-container\" style={progressBarContainer}>\n      <div className=\"progress-bar\" style={progressBarStyles}></div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,sBAAsB,QAAQ,yBAAyB;AAChE,SAASC,UAAU,EAAEC,gBAAgB,QAAQ,uBAAuB;AAAC;AAErE,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAC7B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,EAAO,CAAC,CAAC;;EAErDD,SAAS,CAAC,MAAM;IACdS,kBAAkB,EAAE;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,kBAAkB,GAAG,MAAM;IAC/BD,aAAa,CAACJ,gBAAgB,CAACE,KAAK,CAACI,KAAK,EAAER,sBAAsB,CAAC,CAAC;EACtE,CAAC;EAED,MAAMS,gBAAgB,GAAGR,UAAU,CAACI,UAAU,CAAC;EAE/C,MAAMK,iBAAiB,GAAG;IACxBC,KAAK,EAAG,GAAEN,UAAW,GAAE;IAAE;IACzBO,UAAU,EAAG,GAAEH,gBAAiB;EAClC,CAAC;EACD,MAAMI,oBAAoB,GAAG;IAC3BC,WAAW,EAAG,GAAEL,gBAAiB;EACnC,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,wBAAwB;IAAC,KAAK,EAAEI,oBAAqB;IAAA,uBAClE;MAAK,SAAS,EAAC,cAAc;MAAC,KAAK,EAAEH;IAAkB;MAAA;MAAA;MAAA;IAAA;EAAO;IAAA;IAAA;IAAA;EAAA,QAC1D;AAEV,CAAC;AAAC,GA1BIP,WAAW;AAAA,KAAXA,WAAW;AA4BjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}