{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/donutChart/Doughnut.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Doughnut = _ref => {\n  _s();\n  let {\n    details,\n    heading\n  } = _ref;\n  console.log(details === null || details === void 0 ? void 0 : details.map(item => item.category));\n  // const [dataSeries, setdataSeries] = useState([\n  //   { name: \"# of employees in \", data: [10, 45, 78, 32] },\n  // ]);\n\n  const [dataSeries, setdataSeries] = useState( //[10, 45, 78, 32]\n  details === null || details === void 0 ? void 0 : details.map(item => item.count));\n  const [option, setOption] = useState({\n    labels: details === null || details === void 0 ? void 0 : details.map(item => item.category),\n    legend: {\n      labels: {\n        colors: \"#333\",\n        useSeriesColors: false,\n        formatter: function (value, _ref2) {\n          let {\n            seriesIndex,\n            w\n          } = _ref2;\n          var test = \"hgdjf \" + details.labels[seriesIndex] + \": \" + value + \"%\";\n          return test; //details.labels[seriesIndex] + \": \" + value + \"%\";\n        }\n      },\n\n      //labels: details?.map((item) => item.category),\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return val + \".00\" + \" Rs\";\n          },\n          title: {\n            formatter: function (seriesName) {\n              return \"# of Employees in \";\n            }\n          }\n        }\n      }\n    },\n    title: {\n      text: \"Dubai Skills %\",\n      style: {\n        fontSize: \"14px\",\n        fontWeight: \"bold\",\n        fontFamily: \"Bukra\",\n        color: \"red\"\n      }\n    }\n  });\n  useEffect(() => {\n    setdataSeries(details === null || details === void 0 ? void 0 : details.map(item => item.count));\n  }, [details]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"donut-heading\",\n      hidden: (details === null || details === void 0 ? void 0 : details.length) <= 0\n      //className={multiLayer ? \"center-heading\" : \"\"}\n      ,\n      children: heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      options: option,\n      series: dataSeries,\n      type: \"donut\",\n      width: 400\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Doughnut, \"BqgBLKCvy19+TrwMtKHuVBaxcig=\");\n_c = Doughnut;\nexport default Doughnut;\nvar _c;\n$RefreshReg$(_c, \"Doughnut\");","map":{"version":3,"names":["React","useEffect","useState","Chart","Doughnut","details","heading","console","log","map","item","category","dataSeries","setdataSeries","count","option","setOption","labels","legend","colors","useSeriesColors","formatter","value","seriesIndex","w","test","tooltip","y","val","title","seriesName","text","style","fontSize","fontWeight","fontFamily","color","length"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/donutChart/Doughnut.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\ninterface donutChartInterface {\n  details?: any;\n  heading?: String;\n}\n\nconst Doughnut: React.FC<donutChartInterface> = ({ details, heading }) => {\n  console.log(details?.map((item) => item.category));\n  // const [dataSeries, setdataSeries] = useState([\n  //   { name: \"# of employees in \", data: [10, 45, 78, 32] },\n  // ]);\n\n  const [dataSeries, setdataSeries] = useState(\n    //[10, 45, 78, 32]\n    details?.map((item) => item.count)\n  );\n  const [option, setOption] = useState<any>({\n    labels: details?.map((item) => item.category),\n    legend: {\n      labels: {\n        colors: \"#333\",\n        useSeriesColors: false,\n        formatter: function (value, { seriesIndex, w }) {\n          var test =\n            \"hgdjf \" + details.labels[seriesIndex] + \": \" + value + \"%\";\n          return test; //details.labels[seriesIndex] + \": \" + value + \"%\";\n        },\n      },\n      //labels: details?.map((item) => item.category),\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return val + \".00\" + \" Rs\";\n          },\n          title: {\n            formatter: function (seriesName) {\n              return \"# of Employees in \";\n            },\n          },\n        },\n      },\n    },\n    title: {\n      text: \"Dubai Skills %\",\n      style: {\n        fontSize: \"14px\",\n        fontWeight: \"bold\",\n        fontFamily: \"Bukra\",\n        color: \"red\",\n      },\n    },\n  });\n\n  useEffect(() => {\n    setdataSeries(details?.map((item) => item.count));\n  }, [details]);\n\n  return (\n    <div>\n      <div\n        className=\"donut-heading\"\n        hidden={details?.length <= 0}\n        //className={multiLayer ? \"center-heading\" : \"\"}\n      >\n        {heading}\n      </div>\n      <Chart options={option} series={dataSeries} type=\"donut\" width={400} />\n    </div>\n  );\n};\n\nexport default Doughnut;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,kBAAkB;AAAC;AAOrC,MAAMC,QAAuC,GAAG,QAA0B;EAAA;EAAA,IAAzB;IAAEC,OAAO;IAAEC;EAAQ,CAAC;EACnEC,OAAO,CAACC,GAAG,CAACH,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAAC,CAAC;EAClD;EACA;EACA;;EAEA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,EAC1C;EACAG,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACI,KAAK,CAAC,CACnC;EACD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAM;IACxCe,MAAM,EAAEZ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAAC;IAC7CO,MAAM,EAAE;MACND,MAAM,EAAE;QACNE,MAAM,EAAE,MAAM;QACdC,eAAe,EAAE,KAAK;QACtBC,SAAS,EAAE,UAAUC,KAAK,SAAsB;UAAA,IAApB;YAAEC,WAAW;YAAEC;UAAE,CAAC;UAC5C,IAAIC,IAAI,GACN,QAAQ,GAAGpB,OAAO,CAACY,MAAM,CAACM,WAAW,CAAC,GAAG,IAAI,GAAGD,KAAK,GAAG,GAAG;UAC7D,OAAOG,IAAI,CAAC,CAAC;QACf;MACF,CAAC;;MACD;MACAC,OAAO,EAAE;QACPC,CAAC,EAAE;UACDN,SAAS,EAAE,UAAUO,GAAG,EAAE;YACxB,OAAOA,GAAG,GAAG,KAAK,GAAG,KAAK;UAC5B,CAAC;UACDC,KAAK,EAAE;YACLR,SAAS,EAAE,UAAUS,UAAU,EAAE;cAC/B,OAAO,oBAAoB;YAC7B;UACF;QACF;MACF;IACF,CAAC;IACDD,KAAK,EAAE;MACLE,IAAI,EAAE,gBAAgB;MACtBC,KAAK,EAAE;QACLC,QAAQ,EAAE,MAAM;QAChBC,UAAU,EAAE,MAAM;QAClBC,UAAU,EAAE,OAAO;QACnBC,KAAK,EAAE;MACT;IACF;EACF,CAAC,CAAC;EAEFnC,SAAS,CAAC,MAAM;IACdY,aAAa,CAACR,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACI,KAAK,CAAC,CAAC;EACnD,CAAC,EAAE,CAACT,OAAO,CAAC,CAAC;EAEb,oBACE;IAAA,wBACE;MACE,SAAS,EAAC,eAAe;MACzB,MAAM,EAAE,CAAAA,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEgC,MAAM,KAAI;MAC3B;MAAA;MAAA,UAEC/B;IAAO;MAAA;MAAA;MAAA;IAAA,QACJ,eACN,QAAC,KAAK;MAAC,OAAO,EAAES,MAAO;MAAC,MAAM,EAAEH,UAAW;MAAC,IAAI,EAAC,OAAO;MAAC,KAAK,EAAE;IAAI;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACnE;AAEV,CAAC;AAAC,GA/DIR,QAAuC;AAAA,KAAvCA,QAAuC;AAiE7C,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}