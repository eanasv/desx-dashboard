{"ast":null,"code":"var _jsxFileName = \"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/breadcrumbs/Breadcrumbs.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport \"./Breadcrumbs.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Breadcrumbs = () => {\n  _s();\n  const location = useLocation();\n  const history = useHistory();\n  const [breadcrumbNames, setBreadcrumbNames] = useState([]);\n  useEffect(() => {\n    const names = getBreadcrumbNames(location.pathname);\n    setBreadcrumbNames(names);\n  }, [location]);\n  const getBreadcrumbNames = pathname => {\n    const segments = pathname.split(\"/\").filter(segment => segment !== \"\");\n    console.log(pathname, segments);\n\n    // Return the breadcrumb names based on the segments\n    if (segments.length === 0) {\n      return [\"\"];\n    } else {\n      // Get the last segment as the current breadcrumb name\n      const lastSegment = segments[segments.length];\n      return [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"svg-image1\",\n          src: require(\"../../assets/home.svg\").default,\n          alt: \"home\",\n          width: \"19px\",\n          height: \"19px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), lastSegment];\n    }\n  };\n\n  // const handleListItemClick = (itemName) => {\n  //   // Update the last breadcrumb name and navigate to the corresponding page\n  //   const newPathname = `${location.pathname}/${itemName}`;\n  //   const names = getBreadcrumbNames(newPathname);\n  //   setBreadcrumbNames(names);\n  //   history.push(newPathname);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"breadcrumbs-container\",\n      children: breadcrumbNames.map((name, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: index !== breadcrumbNames.length - 1 ? /*#__PURE__*/_jsxDEV(Link, {\n          to: `${breadcrumbNames.slice(0, index + 1).join(\"/\")}`,\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: name.length != 0 ? \"/\" + name : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Breadcrumbs, \"fnO8jWOGYjCWTi3T72JlPmCIgqE=\", false, function () {\n  return [useLocation, useHistory];\n});\n_c = Breadcrumbs;\nexport default Breadcrumbs;\nvar _c;\n$RefreshReg$(_c, \"Breadcrumbs\");","map":{"version":3,"names":["React","useEffect","useState","Link","useHistory","useLocation","Breadcrumbs","location","history","breadcrumbNames","setBreadcrumbNames","names","getBreadcrumbNames","pathname","segments","split","filter","segment","console","log","length","lastSegment","require","default","map","name","index","slice","join"],"sources":["/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/breadcrumbs/Breadcrumbs.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\n\nimport \"./Breadcrumbs.css\";\n\nconst Breadcrumbs = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const [breadcrumbNames, setBreadcrumbNames] = useState([]);\n\n  useEffect(() => {\n    const names = getBreadcrumbNames(location.pathname);\n    setBreadcrumbNames(names);\n  }, [location]);\n\n  const getBreadcrumbNames = (pathname) => {\n    const segments = pathname.split(\"/\").filter((segment) => segment !== \"\");\n    console.log(pathname, segments);\n\n    // Return the breadcrumb names based on the segments\n    if (segments.length === 0) {\n      return [\"\"];\n    } else {\n      // Get the last segment as the current breadcrumb name\n      const lastSegment = segments[segments.length];\n      return [\n        <Link to=\"/\">\n          <img\n            className=\"svg-image1\"\n            src={require(\"../../assets/home.svg\").default}\n            alt=\"home\"\n            width=\"19px\"\n            height=\"19px\"\n          />\n        </Link>,\n        lastSegment,\n      ];\n    }\n  };\n\n  // const handleListItemClick = (itemName) => {\n  //   // Update the last breadcrumb name and navigate to the corresponding page\n  //   const newPathname = `${location.pathname}/${itemName}`;\n  //   const names = getBreadcrumbNames(newPathname);\n  //   setBreadcrumbNames(names);\n  //   history.push(newPathname);\n  // };\n\n  return (\n    <nav>\n      <div className=\"breadcrumbs-container\">\n        {breadcrumbNames.map((name, index) => (\n          <div key={index}>\n            {index !== breadcrumbNames.length - 1 ? (\n              <Link to={`${breadcrumbNames.slice(0, index + 1).join(\"/\")}`}>\n                {name}\n              </Link>\n            ) : (\n              <span>{name.length != 0 ? \"/\" + name : \"\"}</span>\n            )}\n          </div>\n        ))}\n      </div>\n    </nav>\n  );\n};\n\nexport default Breadcrumbs;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,UAAU,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,OAAO,mBAAmB;AAAC;AAE3B,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAMC,QAAQ,GAAGF,WAAW,EAAE;EAC9B,MAAMG,OAAO,GAAGJ,UAAU,EAAE;EAC5B,MAAM,CAACK,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1DD,SAAS,CAAC,MAAM;IACd,MAAMU,KAAK,GAAGC,kBAAkB,CAACL,QAAQ,CAACM,QAAQ,CAAC;IACnDH,kBAAkB,CAACC,KAAK,CAAC;EAC3B,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,MAAMK,kBAAkB,GAAIC,QAAQ,IAAK;IACvC,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAAEC,OAAO,IAAKA,OAAO,KAAK,EAAE,CAAC;IACxEC,OAAO,CAACC,GAAG,CAACN,QAAQ,EAAEC,QAAQ,CAAC;;IAE/B;IACA,IAAIA,QAAQ,CAACM,MAAM,KAAK,CAAC,EAAE;MACzB,OAAO,CAAC,EAAE,CAAC;IACb,CAAC,MAAM;MACL;MACA,MAAMC,WAAW,GAAGP,QAAQ,CAACA,QAAQ,CAACM,MAAM,CAAC;MAC7C,OAAO,cACL,QAAC,IAAI;QAAC,EAAE,EAAC,GAAG;QAAA,uBACV;UACE,SAAS,EAAC,YAAY;UACtB,GAAG,EAAEE,OAAO,CAAC,uBAAuB,CAAC,CAACC,OAAQ;UAC9C,GAAG,EAAC,MAAM;UACV,KAAK,EAAC,MAAM;UACZ,MAAM,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA;MACb;QAAA;QAAA;QAAA;MAAA,QACG,EACPF,WAAW,CACZ;IACH;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,uBAAuB;MAAA,UACnCZ,eAAe,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC/B;QAAA,UACGA,KAAK,KAAKjB,eAAe,CAACW,MAAM,GAAG,CAAC,gBACnC,QAAC,IAAI;UAAC,EAAE,EAAG,GAAEX,eAAe,CAACkB,KAAK,CAAC,CAAC,EAAED,KAAK,GAAG,CAAC,CAAC,CAACE,IAAI,CAAC,GAAG,CAAE,EAAE;UAAA,UAC1DH;QAAI;UAAA;UAAA;UAAA;QAAA,QACA,gBAEP;UAAA,UAAOA,IAAI,CAACL,MAAM,IAAI,CAAC,GAAG,GAAG,GAAGK,IAAI,GAAG;QAAE;UAAA;UAAA;UAAA;QAAA;MAC1C,GAPOC,KAAK;QAAA;QAAA;QAAA;MAAA,QAShB;IAAC;MAAA;MAAA;MAAA;IAAA;EACE;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GA5DIpB,WAAW;EAAA,QACED,WAAW,EACZD,UAAU;AAAA;AAAA,KAFtBE,WAAW;AA8DjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}