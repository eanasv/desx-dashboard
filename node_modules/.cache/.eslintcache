[{"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/index.js":"1","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/reportWebVitals.js":"2","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/App.tsx":"3","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/redux/Store.tsx":"4","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/redux/features/loaderSlice.tsx":"5","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/ tabsContainer/TabsContainer.tsx":"6","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab1/Tab1.tsx":"7","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab2/Tab2.tsx":"8","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/service/Constants.tsx":"9","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/entityDetails/EntityDetails.tsx":"10","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/entityList/EntityList.tsx":"11","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/mainChartSection/MainChartSection.tsx":"12","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/filterSection/FilterSection.tsx":"13","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/entityBox/EntityBox.tsx":"14","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/donutChart/DonutChart.tsx":"15","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/service/Config.tsx":"16","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/dropDown/DropDown.tsx":"17","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/TestChart.tsx":"18","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/popup/PopupModal.tsx":"19","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/progressCircle/ProgressCircle.tsx":"20","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/service/Service.tsx":"21","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/progressCircle/ProgressBar.tsx":"22","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/MyChart.tsx":"23","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/donutChart/Doughnut.tsx":"24","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/donutChart/RadialBarChart.tsx":"25","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab3/Tab3.tsx":"26","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/datePicker/DateInput.tsx":"27","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/lineChart/LineChart.tsx":"28","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/dateRangeFilter/DateRangeFilter.tsx":"29","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab3/Chart1.tsx":"30","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab3/Chart2.tsx":"31","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/barChart/BarChart.tsx":"32","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/test/ParentComponent.tsx":"33","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/test/Component2.tsx":"34","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/test/Component1.tsx":"35","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab3/Chart3.tsx":"36","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab3/SummaryTable.tsx":"37","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab3/Chart4.tsx":"38","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/spinner/LoadingSpinner.tsx":"39","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/categoryDetails/CategoryDetails.tsx":"40","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/categoryList/CategoryList.tsx":"41","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/dataFileUpload/FileUpload.tsx":"42","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/jobChart/JobChart.tsx":"43","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/compass/Table1.tsx":"44","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab4/Tab4.tsx":"45","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/popup/TrainingPopup.tsx":"46","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/button/Button.tsx":"47","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/score/Score.tsx":"48","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/header/Header.tsx":"49","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/slidingMenu/SlidingMenu.tsx":"50","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/breadcrumbs/Breadcrumbs.tsx":"51","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/subHeader/SubHeader.tsx":"52","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/accordion/Accordion.tsx":"53","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/popup/Popover.tsx":"54","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/downloadExcel/DownloadExcel.tsx":"55","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/login/Login.tsx":"56","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/login/UserLogin.tsx":"57","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/redux/features/errorSlice.tsx":"58","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/redux/actions/Actions.tsx":"59","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/errorComponent/ErrorComponent.tsx":"60","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/errorBoundary/ErrorBoundary.tsx":"61","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/createUser/UserCreation.tsx":"62","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/userList/UserList.tsx":"63","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/popup/Popup.tsx":"64","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/service/APIRequest1.tsx":"65","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/service/APIRequest.tsx":"66","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/entityDetails/Todelete.tsx":"67","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/certification/Certification.tsx":"68","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/MultiStepForm/MultiStepForm.tsx":"69","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/MultiStepForm/MultiStep.tsx":"70","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/EmployeeProfile/Personal.tsx":"71","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/InputField/InputField.tsx":"72","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/dropDown/SimpleDropDown.tsx":"73","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/redux/features/userDetailsSlice.tsx":"74","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/TextArea/TextArea.tsx":"75","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/EmployeeProfile/CompetancyEvaluation.tsx":"76"},{"size":886,"mtime":1697008548193,"results":"77","hashOfConfig":"78"},{"size":362,"mtime":1676882142222,"results":"79","hashOfConfig":"78"},{"size":3322,"mtime":1700461842862,"results":"80","hashOfConfig":"78"},{"size":398,"mtime":1700547549140,"results":"81","hashOfConfig":"78"},{"size":639,"mtime":1683519385813,"results":"82","hashOfConfig":"78"},{"size":1586,"mtime":1687506161572,"results":"83","hashOfConfig":"78"},{"size":1008,"mtime":1683997767275,"results":"84","hashOfConfig":"78"},{"size":1330,"mtime":1687505868913,"results":"85","hashOfConfig":"78"},{"size":5674,"mtime":1700477814243,"results":"86","hashOfConfig":"78"},{"size":14892,"mtime":1699861184747,"results":"87","hashOfConfig":"78"},{"size":4810,"mtime":1699861193555,"results":"88","hashOfConfig":"78"},{"size":902,"mtime":1683531010291,"results":"89","hashOfConfig":"78"},{"size":3149,"mtime":1688597332638,"results":"90","hashOfConfig":"78"},{"size":1254,"mtime":1687498828265,"results":"91","hashOfConfig":"78"},{"size":2412,"mtime":1682371116023,"results":"92","hashOfConfig":"78"},{"size":385,"mtime":1700641739755,"results":"93","hashOfConfig":"78"},{"size":1312,"mtime":1699861165142,"results":"94","hashOfConfig":"78"},{"size":1194,"mtime":1692071848610,"results":"95","hashOfConfig":"78"},{"size":15889,"mtime":1698549445389,"results":"96","hashOfConfig":"78"},{"size":1744,"mtime":1679466214422,"results":"97","hashOfConfig":"78"},{"size":1044,"mtime":1700548097996,"results":"98","hashOfConfig":"78"},{"size":969,"mtime":1678951855525,"results":"99","hashOfConfig":"78"},{"size":2546,"mtime":1679996834258,"results":"100","hashOfConfig":"78"},{"size":2530,"mtime":1687760869336,"results":"101","hashOfConfig":"78"},{"size":3289,"mtime":1687760859148,"results":"102","hashOfConfig":"78"},{"size":5305,"mtime":1699953232122,"results":"103","hashOfConfig":"78"},{"size":1291,"mtime":1687408586690,"results":"104","hashOfConfig":"78"},{"size":1090,"mtime":1687407120123,"results":"105","hashOfConfig":"78"},{"size":4193,"mtime":1699861156832,"results":"106","hashOfConfig":"78"},{"size":2115,"mtime":1699954562822,"results":"107","hashOfConfig":"78"},{"size":5035,"mtime":1699861207697,"results":"108","hashOfConfig":"78"},{"size":5030,"mtime":1692677981623,"results":"109","hashOfConfig":"78"},{"size":419,"mtime":1682159560907,"results":"110","hashOfConfig":"78"},{"size":179,"mtime":1682159545641,"results":"111","hashOfConfig":"78"},{"size":397,"mtime":1682240777897,"results":"112","hashOfConfig":"78"},{"size":2996,"mtime":1699861212360,"results":"113","hashOfConfig":"78"},{"size":2839,"mtime":1699861220081,"results":"114","hashOfConfig":"78"},{"size":1937,"mtime":1699861216245,"results":"115","hashOfConfig":"78"},{"size":990,"mtime":1683519490426,"results":"116","hashOfConfig":"78"},{"size":9750,"mtime":1699861175871,"results":"117","hashOfConfig":"78"},{"size":9271,"mtime":1700477500000,"results":"118","hashOfConfig":"78"},{"size":5013,"mtime":1700456529549,"results":"119","hashOfConfig":"78"},{"size":869,"mtime":1698547995248,"results":"120","hashOfConfig":"78"},{"size":1203,"mtime":1684125168979,"results":"121","hashOfConfig":"78"},{"size":491,"mtime":1684305472936,"results":"122","hashOfConfig":"78"},{"size":1464,"mtime":1685442209172,"results":"123","hashOfConfig":"78"},{"size":389,"mtime":1688368993642,"results":"124","hashOfConfig":"78"},{"size":469,"mtime":1685510628273,"results":"125","hashOfConfig":"78"},{"size":1813,"mtime":1699856325597,"results":"126","hashOfConfig":"78"},{"size":2277,"mtime":1700547204461,"results":"127","hashOfConfig":"78"},{"size":4162,"mtime":1693367434426,"results":"128","hashOfConfig":"78"},{"size":780,"mtime":1688629820027,"results":"129","hashOfConfig":"78"},{"size":2347,"mtime":1692701348455,"results":"130","hashOfConfig":"78"},{"size":1268,"mtime":1692265855804,"results":"131","hashOfConfig":"78"},{"size":923,"mtime":1698818265240,"results":"132","hashOfConfig":"78"},{"size":3140,"mtime":1700645372126,"results":"133","hashOfConfig":"78"},{"size":2983,"mtime":1696396851000,"results":"134","hashOfConfig":"78"},{"size":708,"mtime":1700546831226,"results":"135","hashOfConfig":"78"},{"size":281,"mtime":1696843987885,"results":"136","hashOfConfig":"78"},{"size":1268,"mtime":1700473873436,"results":"137","hashOfConfig":"78"},{"size":937,"mtime":1696913148472,"results":"138","hashOfConfig":"78"},{"size":9048,"mtime":1700641234373,"results":"139","hashOfConfig":"78"},{"size":2229,"mtime":1699861170897,"results":"140","hashOfConfig":"78"},{"size":856,"mtime":1700458883222,"results":"141","hashOfConfig":"78"},{"size":3619,"mtime":1699857134869,"results":"142","hashOfConfig":"78"},{"size":6986,"mtime":1700648677734,"results":"143","hashOfConfig":"78"},{"size":13943,"mtime":1699861189099,"results":"144","hashOfConfig":"78"},{"size":1910,"mtime":1699513554047,"results":"145","hashOfConfig":"78"},{"size":4697,"mtime":1700557952873,"results":"146","hashOfConfig":"78"},{"size":1221,"mtime":1700461685027,"results":"147","hashOfConfig":"78"},{"size":3505,"mtime":1700550520740,"results":"148","hashOfConfig":"78"},{"size":712,"mtime":1700643605015,"results":"149","hashOfConfig":"78"},{"size":979,"mtime":1700548341694,"results":"150","hashOfConfig":"78"},{"size":492,"mtime":1700547907550,"results":"151","hashOfConfig":"78"},{"size":542,"mtime":1700550132956,"results":"152","hashOfConfig":"78"},{"size":4782,"mtime":1700634184804,"results":"153","hashOfConfig":"78"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"158"},"1c1o4uf",{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"180"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"171"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"227"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"171"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248"},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"171"},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"171"},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260"},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264"},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268"},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"171"},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285"},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289"},{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293"},{"filePath":"294","messages":"295","suppressedMessages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"171"},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301"},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","suppressedMessages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","suppressedMessages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"171"},{"filePath":"321","messages":"322","suppressedMessages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"324","messages":"325","suppressedMessages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"327","messages":"328","suppressedMessages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"331"},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"171"},{"filePath":"339","messages":"340","suppressedMessages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"342","messages":"343","suppressedMessages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"345","messages":"346","suppressedMessages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"348","messages":"349","suppressedMessages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","suppressedMessages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"354","messages":"355","suppressedMessages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"357","messages":"358","suppressedMessages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"360","messages":"361","suppressedMessages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","suppressedMessages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"366","messages":"367","suppressedMessages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"171"},{"filePath":"370","messages":"371","suppressedMessages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"373","messages":"374","suppressedMessages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","suppressedMessages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"379"},{"filePath":"380","messages":"381","suppressedMessages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"383","messages":"384","suppressedMessages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"386","messages":"387","suppressedMessages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389"},{"filePath":"390","messages":"391","suppressedMessages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","suppressedMessages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","suppressedMessages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","suppressedMessages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"402","messages":"403","suppressedMessages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"405","messages":"406","suppressedMessages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"408","messages":"409","suppressedMessages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","suppressedMessages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","suppressedMessages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/index.js",["417"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/Store'\nimport { Provider } from 'react-redux'\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport ErrorBoundary from \"./pages/errorBoundary/ErrorBoundary\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n      <Provider store={store}>\n        {/* <ErrorBoundary> */}\n    <App />\n    {/* </ErrorBoundary> */}\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/reportWebVitals.js",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/App.tsx",["418","419","420"],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/redux/Store.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/redux/features/loaderSlice.tsx",[],[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/ tabsContainer/TabsContainer.tsx",["421"],[],"import React, { useState } from \"react\";\n\nimport Tab1 from \"../tab1/Tab1\";\nimport { Tab2 } from \"../tab2/Tab2\";\nimport Tab3 from \"../tab3/Tab3\";\nimport Tab4 from \"../tab4/Tab4\";\nimport \"../Tabs.css\";\n\nexport const TabsContainer = () => {\n  const [activeTab, setActiveTab] = useState(1);\n  const tabs = [\n    {\n      id: 1,\n      tabTitle: \"Tab 1\",\n      title: \"Entities Index\",\n      content: <Tab2 />,\n    },\n    {\n      id: 2,\n      tabTitle: \"Tab 2\",\n      title: \"Workforce index\",\n      content: <Tab1 />,\n      //path: \"/tab2/entity-list\",\n      // content: (\n      //   <div>\n\n      //   </div>\n      // ),\n    },\n    {\n      id: 3,\n      tabTitle: \"Tab 3\",\n      title: \"Digital skills historical scoring\",\n      content: <Tab3 />,\n    },\n    // {\n    //   id: 4,\n    //   tabTitle: \"Tab 4\",\n    //   title: \"Training Needs\",\n    //   content: <Tab4 />,\n    // },\n  ];\n\n  const handleTabClick = (tabIndex) => {\n    setActiveTab(tabIndex);\n  };\n\n  return (\n    <div>\n      <div className=\"tab-button-container\">\n        {tabs?.map((tab, i) => (\n          <div\n            // disabled={activeTab === `${tab.id}`}\n            key={tab.id}\n            onClick={() => handleTabClick(tab.id)}\n            className={[\n              \"tab-button\",\n              \"tab\",\n              tab.id === activeTab ? \"active-tab\" : \"\",\n            ].join(\" \")}\n          >\n            {tab.title}\n          </div>\n        ))}\n      </div>\n      <div>\n        {tabs?.map((tab) =>\n          tab.id === activeTab ? <p key={tab.id}>{tab.content}</p> : null\n        )}\n      </div>\n    </div>\n  );\n};\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab1/Tab1.tsx",["422","423","424","425","426","427","428"],[],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport JobChart from \"../../../components/Graph/jobChart/JobChart\";\nimport TestChart from \"../../../components/Graph/TestChart\";\nimport { MainChartSection } from \"../../../components/mainChartSection/MainChartSection\";\nimport { LoadingSpinner } from \"../../../components/spinner/LoadingSpinner\";\nimport ParentComponent from \"../../../components/test/ParentComponent\";\n//import ReactLogo from \"../assets/compass.svg\";\n\nfunction Home() {\n  const [displayDataSet, setdisplayDataSet] = useState([]);\n  const isLoading = useSelector((state: any) => state.loader.isLoading);\n  const changeDisplaySetData = (data) => {\n    setdisplayDataSet(data);\n  };\n\n  return (\n    <div>\n      {/* <FilterSection onSelectedValueChange={changeDisplaySetData} /> */}\n      {/* <Table data={displayDataSet} /> */}\n      {/* <GraphDashboard /> */}\n      {/* <HalfDonutChart1 /> */}\n      <MainChartSection />\n    </div>\n  );\n}\nexport default Home;\n",[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab2/Tab2.tsx",["429","430","431","432","433","434","435","436","437","438","439","440"],[],"import React, { useEffect, useState } from \"react\";\nimport { Switch, Route, useRouteMatch, useHistory } from \"react-router-dom\";\n\nimport MultiSelectDropdown from \"../../../components/dropDown/MultiSelectDropDown\";\nimport EntityBox from \"../../../components/entityBox/EntityBox\";\nimport FilterSection from \"../../../components/filterSection/FilterSection\";\nimport { allEmployeeDetails, mainEntity } from \"../../../service/Constants\";\nimport { EntityDetails } from \"../../entityDetails/EntityDetails\";\nimport { EntityList } from \"../../entityList/EntityList\";\nimport \"../Tabs.css\";\n\nexport const Tab2 = () => {\n  const [updatedEmployeeDetails, setupdatedEmployeeDetails] =\n    useState<any>(allEmployeeDetails);\n  const [updatedEntityList, setupdatedEntityList] = useState<any>(mainEntity);\n  const [selectedEntity, setSelectedEntity] = useState(null);\n\n  const handleEntityClick = (name, value, image) => {\n    setSelectedEntity({ name: name, scoreValue: value, logo: image });\n    console.log(value);\n  };\n\n  const backButtonClicked = () => {\n    setSelectedEntity(null);\n  };\n  if (selectedEntity) {\n    return (\n      <EntityDetails\n        entity={selectedEntity}\n        backButtonClicked={backButtonClicked}\n      />\n      // <div>s</div>\n    );\n  } else {\n    return <EntityList onEntityClick={handleEntityClick} />;\n  }\n};\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/service/Constants.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/entityDetails/EntityDetails.tsx",["441","442","443","444","445","446","447"],[],"import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Breadcrumbs from \"../../components/breadcrumbs/Breadcrumbs\";\nimport { Certification } from \"../../components/certification/Certification\";\n\nimport Doughnut from \"../../components/Graph/donutChart/Doughnut\";\nimport RadialBarChart from \"../../components/Graph/donutChart/RadialBarChart\";\nimport Popup from \"../../components/popup/Popup\";\nimport PopupModal from \"../../components/popup/PopupModal\";\nimport TrainingPopup from \"../../components/popup/TrainingPopup\";\nimport Score from \"../../components/score/Score\";\nimport { SubHeader } from \"../../components/subHeader/SubHeader\";\nimport { getHttp } from \"../../service/APIRequest\";\nimport { getSkillPercentage } from \"../../service/Service\";\nimport \"./EntityDetails.css\";\n\nexport const EntityDetails = ({ entity1, backButtonClicked }, props) => {\n  const location = useLocation();\n  const [entity, setentity] = useState<any>(location.state);\n  const [entityDetails, setentityDetails] = useState<any>();\n  const [roleCount, setroleCount] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [thisEmployeeDetails, setthisEmployeeDetails] = useState();\n  const [entityCatSkillSet, setentityCatSkillSet] = useState([]);\n  const [categoryList, setcategoryList] = useState([]);\n  const [trainingDetails, setTrainingDetails] = useState({\n    showPopup: false,\n    details: [],\n  });\n  const [isUp, setIsUp] = useState(true);\n\n  const [isScoreUp, setScoreIsUp] = useState(true);\n\n  const [openPopup, setOpenPopup] = useState(false);\n\n  const [employeeMoreDetils, setemployeeMoreDetils] = useState<any>();\n\n  const handleSortClick = (name, order) => {\n    if (name == \"name\") {\n      setIsUp(!isUp);\n    } else {\n      setScoreIsUp(!isScoreUp);\n    }\n    fetchEntityDetails(name, order);\n  };\n\n  function handleClick() {\n    setShowPopup(!showPopup);\n  }\n\n  useEffect(() => {\n    setcategoryList(categoryList);\n  }, [categoryList]);\n\n  const getAllCategory = () => {\n    //main-categories/getAll\n    const response = getHttp(\"main-categories/getAll\")\n      .then((response) => {\n        setcategoryList(response);\n      })\n      .catch((error) => {\n        console.log(error);\n        // handle error\n      });\n  };\n\n  // const getSubCategoryList = async (id) => {\n  //   //categories/1/subcategories\n  //   const response = await getHttp(\"categories/\" + id + \"/subcategories\");\n  //   setsubCategoryList(response);\n  // };\n\n  useEffect(() => {\n    fetchEntityDetails(\"name\", \"asc\");\n  }, []);\n\n  async function fetchEntityDetails(item?, order?) {\n    const response = await getHttp(\"employees/\" + entity.name, {\n      name: item,\n      filter: order,\n    });\n    var finalResult = [];\n\n    fetchRoleCountsInEntity();\n    for (var i = 0; i < response.length; i++) {\n      response[i].skillToTalPercentage = getSkillPercentage(response[i].skills);\n      finalResult.push(response[i]);\n    }\n\n    await setentityDetails(finalResult);\n\n    getAllCategory();\n    //await getColumnHeading(response);\n  }\n\n  const fetchRoleCountsInEntity = async () => {\n    const response = await getHttp(\"entity/count-by-category/\" + entity.name);\n    await setroleCount(response);\n    fetchSkillByCatInEntity();\n  };\n\n  const fetchSkillByCatInEntity = async () => {\n    const response = await getHttp(\"skillByCatInEntity?entity=\" + entity.name);\n    setentityCatSkillSet(response);\n\n    await settingEntityCatSkillSet(response);\n  };\n\n  const settingEntityCatSkillSet = async (data) => {\n    setentityCatSkillSet(data);\n  };\n\n  const showThisEmployeeDetails = (employeeDetails) => {\n    setShowPopup(true);\n    setthisEmployeeDetails(employeeDetails);\n  };\n\n  const showThisEmployeeMoreDetails = (employeeMoreDetails) => {\n    setOpenPopup(true);\n    setemployeeMoreDetils(employeeMoreDetails.certifications);\n  };\n\n  const handleSubmit = (e) => {\n    console.log(\"oo\", e);\n  };\n\n  // const traininigNeedOfEmployee = (employeeDetails) => {\n  //   setTrainingDetails({ ...trainingDetails, showPopup: true });\n  //   setthisEmployeeDetails(employeeDetails);\n  //   //employeeNumber\n  //   getHttp(\"trainingNeeded\", {\n  //     employeeNumber: employeeDetails.employeeNumber,\n  //   })\n  //     .then((response) => {\n  //       console.log(response);\n  //       setTrainingDetails({ showPopup: true, details: response });\n  //       // handle success\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //       //setresponseText(error);\n  //       // handle error\n  //     });\n  // };\n\n  //test\n\n  // const options2 = [\n  //   { value: \"option4\", label: \"Option 4\" },\n  //   { value: \"option5\", label: \"Option 5\" },\n  //   { value: \"option6\", label: \"Option 6\" },\n  // ];\n\n  // const options3 = [\n  //   { value: \"option7\", label: \"Option 7\" },\n  //   { value: \"option8\", label: \"Option 8\" },\n  //   { value: \"option9\", label: \"Option 9\" },\n  // ];\n\n  // const [value1, setValue1] = useState(null);\n  // const [value2, setValue2] = useState(null);\n  // const [value3, setValue3] = useState(null);\n\n  // const handleOption1Change = (selectedOption) => {\n  //   setValue1(selectedOption);\n  //   getSubCategoryList(selectedOption[0].id);\n  //   setValue2(null);\n  //   setValue3(null);\n  // };\n\n  // const handleOption2Change = (selectedOption) => {\n  //   setValue2(selectedOption);\n  //   setValue3(null);\n  // };\n\n  // const handleOption3Change = (selectedOption) => {\n  //   setValue3(selectedOption);\n  // };\n\n  // const fetchSubCatagoryList = (param?) => {\n  //   const response = getHttp(\"categories/\" + details.id + \"/subcategories\")\n  //     .then((response) => {\n  //       //console.log(response);\n\n  //       setSubCategoryList(response); // handle success\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //       // handle error\n  //     });\n  // };\n  const breadcrumbsPaths = [\n    { label: \"entities index\", url: \"/entitiesIndex\" },\n    { label: `${entity.name}`, url: `\"/entitiesIndex/\"${entity.name}` },\n  ];\n  return (\n    <div className=\"enti-container1 content-top-margin\">\n      {/* <Breadcrumbs1 paths={breadcrumbsPaths} /> */}\n      <SubHeader\n        content={\n          <div className=\"top-head\">\n            <div className=\"score-container\">\n              <Score score={entity.scoreValue} />\n            </div>\n            {/* <div className=\"entity-score-section\">\n            {\" \"}\n            Entity Score - {entity.scoreValue} %\n          </div> */}\n            <div className=\"logo-container\">\n              <img\n                className=\"logo\"\n                //src={require(`../../assets/${entityDetails.logo}`)}\n                src={`data:image/png;base64,${entity.logo}`}\n                alt=\"\"\n                //   width=\"50%\"\n                //   height=\"50%\"\n              />\n            </div>\n            <div className=\"heading main-heading\">{entity.name}</div>\n          </div>\n        }\n        showBreadcrumbs={true}\n        breadCrumbsDetails={breadcrumbsPaths}\n      />\n      {/* <div>\n        <Breadcrumbs />\n      </div> */}\n      {/* <div className=\"heading-cont\"> */}\n      {/* <div className=\"back-button\" onClick={backButtonClicked}>\n          <img\n            src={require(\"../../assets/back.png\")}\n            alt=\"\"\n            width=\"50px\"\n            height=\"50px\"\n          />\n        </div> */}\n      {/* <div className=\"top-head\">\n          <div className=\"score-container\">\n            <Score score={entity.scoreValue} />\n          </div>\n          \n          <div className=\"logo-container\">\n            <img\n              className=\"logo\"\n              //src={require(`../../assets/${entityDetails.logo}`)}\n              src={`data:image/png;base64,${entity.logo}`}\n              alt=\"\"\n              //   width=\"50%\"\n              //   height=\"50%\"\n            />\n          </div>\n          <div className=\"heading main-heading\">{entity.name}</div>\n        </div> */}\n      {/* </div> */}\n      {/* <Breadcrumbs /> */}\n      {/* <div className=\"drop-down-container\">\n        <DropDown\n          isMulti={true}\n          mainList={categoryList}\n          onChangeDropDownItem={handleOption1Change}\n          value={value1}\n          //placeholder=\"Select an option\"\n        />\n        {value1 && (\n          <DropDown\n            isMulti={true}\n            mainList={subCategoryList}\n            onChangeDropDownItem={handleOption2Change}\n            value={value2}\n            // placeholder=\"Select an option\"\n          />\n        )}\n        {value1 && value2 && (\n          <DropDown\n            isMulti={true}\n            mainList={options3}\n            onChangeDropDownItem={handleOption3Change}\n            value={value3}\n            // placeholder=\"Select an option\"\n          />\n        )}\n      </div> */}\n\n      {entityDetails?.length > 0 && (\n        <div className=\"top-section\">\n          <div className=\"donutDiv\">\n            {/* <DonutChart\n              //details={chartDetails.data_analytics}\n              heading={props.entityName + \" skills\"}\n              details={roleCount}\n            /> */}\n            <div className=\"donut-div\">\n              <Doughnut\n                heading={\" Percentage of resource per category\"}\n                details={roleCount}\n                showLegend={true}\n              />\n            </div>\n            {entityCatSkillSet.length != 0 && (\n              <div>\n                <RadialBarChart\n                  details={entityCatSkillSet}\n                  heading={\"Skill score per category \"}\n                />\n              </div>\n            )}\n            {/* <MyChart /> */}\n            {trainingDetails.showPopup && (\n              <TrainingPopup\n                employeDetails={thisEmployeeDetails}\n                closeModal={() =>\n                  setTrainingDetails({ ...trainingDetails, showPopup: false })\n                }\n                course={trainingDetails.details}\n              />\n            )}\n            {showPopup && entityCatSkillSet && (\n              <PopupModal\n                employeDetails={thisEmployeeDetails}\n                closeModal={() => setShowPopup(false)}\n                score={entity.scoreValue}\n              />\n            )}\n            <Popup\n              isOpen={openPopup}\n              onRequestClose={() => setOpenPopup(false)}\n              onConfirm={(e) => handleSubmit(e)}\n              bodyContent={<Certification data={employeeMoreDetils} />}\n            />\n          </div>\n        </div>\n      )}\n\n      <div className=\"employeeList\">\n        <div className=\"employee-details-heading\"></div>\n        <table className=\"table\">\n          <thead>\n            <tr className=\"each-column-border table-heading\">\n              <th className=\"each-column-border right-white-border\">\n                Resource Name\n                <button\n                  className={`up-down-button triangle-button ${\n                    isUp ? \"up\" : \"down\"\n                  }`}\n                  onClick={() =>\n                    handleSortClick(\"name\", !isUp ? \"asc\" : \"desc\")\n                  }\n                >\n                  <i\n                    className={`up-down-button triangle-icon fas ${\n                      isUp ? \"fa-caret-up\" : \"fa-caret-down\"\n                    }`}\n                  ></i>\n                </button>\n              </th>\n              <th className=\"each-column-border right-white-border\">Role</th>\n              {/* <th className=\"each-column-border right-white-border\">\n                Nationality\n              </th>\n              <th className=\"each-column-border right-white-border\">\n                Experience in Yrs\n              </th> */}\n              {/* <th className=\"each-column-border\">Skill </th> */}\n              <th className=\"each-column-border right-white-border\">\n                Skill Score\n                <button\n                  className={`up-down-button triangle-button ${\n                    isUp ? \"up\" : \"down\"\n                  }`}\n                  onClick={() =>\n                    handleSortClick(\"score\", !isScoreUp ? \"asc\" : \"desc\")\n                  }\n                >\n                  <i\n                    className={`triangle-icon fas ${\n                      isScoreUp ? \"fa-caret-up\" : \"fa-caret-down\"\n                    }`}\n                  ></i>\n                </button>\n              </th>\n              <th className=\"each-column-border\">Details</th>\n              <th className=\"each-column-border\">More</th>\n              {/* <th className=\"each-column-border\">Training</th> */}\n            </tr>\n          </thead>\n          <tbody>\n            {entityDetails?.map((row, index) => (\n              <tr\n                key={index}\n                // className={index % 2 === 0 ? \"even-row\" : \"odd-row\"}\n              >\n                <td className=\"each-column-border capitalise\">{row.name}</td>\n                <td className=\"each-column-border capitalise\">{row.job}</td>\n                {/* <td className=\"each-column-border capitalise\">\n                  {row?.otherDetails?.nationality}\n                </td>\n                <td className=\"each-column-border capitalise\">\n                  {row.otherDetails?.yearsOfExperience}\n                </td> */}\n                <td className=\"each-column-border capitalise\">\n                  {row.employeeSkill} %\n                </td>\n\n                {/* <td className=\"each-column-border\">\n                      <ProgressCircle\n                        progress={row.skillToTalPercentage}\n                        size={60}\n                        strokeWidth={3}\n                        circleOneStroke=\"white\"\n                        circleTwoStroke=\"#2b6cb0\"\n                        reverse=\"false\"\n                      />showThisEmployeeMoreDetails\n                    </td> */}\n                <td\n                  className=\"each-column-border\"\n                  onClick={() => showThisEmployeeDetails(row)}\n                >\n                  {\" \"}\n                  <img\n                    src={require(`../../assets/eye.png`)}\n                    alt=\"\"\n                    width=\"25px\"\n                    //   height=\"50%\"\n                  />\n                </td>\n                <td\n                  className=\"each-column-border\"\n                  onClick={() => showThisEmployeeMoreDetails(row)}\n                >\n                  {\" \"}\n                  <img\n                    src={require(`../../assets/info.png`)}\n                    alt=\"\"\n                    width=\"25px\"\n                    //   height=\"50%\"\n                  />\n                </td>\n                {/* <td\n                  className=\"each-column-border\"\n                  onClick={() => traininigNeedOfEmployee(row)}\n                >\n                  View\n                </td> */}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/entityList/EntityList.tsx",["448","449","450","451","452","453","454","455","456"],[],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./EntityList.css\";\nimport EntityBox from \"../../components/entityBox/EntityBox\";\nimport FilterSection from \"../../components/filterSection/FilterSection\";\nimport { getHttp } from \"../../service/APIRequest\";\nimport Accordion from \"../../components/accordion/Accordion\";\nimport { SubHeader } from \"../../components/subHeader/SubHeader\";\n\nexport const EntityList = (props) => {\n  const history = useHistory();\n  var loginStatus = sessionStorage.getItem(\"loginStatus\");\n\n  if (loginStatus == null || loginStatus == \"\") {\n    history.push(\"/login\");\n  }\n  var userDeatilsString = sessionStorage.getItem(\"userDetails\");\n  var userDetailsObj = JSON.parse(userDeatilsString);\n\n  const [userInfo, setuserInfo] = useState({\n    name: userDetailsObj.name,\n    email: userDetailsObj.email,\n    role: userDetailsObj.role,\n    entity: userDetailsObj.entity,\n  });\n  const [updatedAllEntityList, setupdatedAllEntityList] = useState<any>();\n  const [entityListForDropDown, setentityListForDropDown] = useState<any>();\n  const [filterByName, setfilterByName] = useState(\"asc\");\n\n  useEffect(() => {\n    getEntityList(filterByName);\n  }, []);\n\n  const getEntityList = async (filterByName?) => {\n    const response = await getHttp(\"entity/getAll\", {\n      filter: filterByName,\n      entityName: userInfo.role == \"main_admin\" ? \"\" : userInfo.entity,\n    }); //\n    // const response = await getHttp(\"auth/welcome\");\n    await setupdatedAllEntityList(response);\n    //getDropdownEntityList();\n    setentityListForDropDown(response);\n  };\n  //\n\n  const filterEntity = (filterBy, item) => {\n    if (item == \"name\")\n      if (filterBy) {\n        getEntityList(\"asc\");\n      } else {\n        getEntityList(\"desc\");\n      }\n    else {\n      if (filterBy) {\n        getEntityList(\"ascScore\");\n      } else {\n        getEntityList(\"descScore\");\n      }\n    }\n  };\n\n  const changeDisplaySetData = (data) => {\n    setupdatedAllEntityList(data);\n  };\n\n  const goToEntityDetails = (entityName, score, logo) => {\n    //props.onEntityClick(entityName, score, logo);\n    history.push(\"/entitiesIndex/\" + entityName, {\n      name: entityName,\n      scoreValue: score,\n      logo: logo,\n    });\n  };\n  return (\n    <div className=\"content-top-margin\">\n      {!updatedAllEntityList ? (\n        <div className=\"loader\"></div>\n      ) : (\n        <div>\n          {/* <FilterSection\n            onSelectedValueChange={changeDisplaySetData}\n            allEntities={entityListForDropDown}\n            changeFilter={filterEntity}\n          /> */}\n          <SubHeader pageHeadding=\"Entities index\" />\n          <div className=\"main-content-top-margin\"></div>\n          <div className=\"content-container\">\n            <div className=\"entity-container\">\n              {updatedAllEntityList?.map((item, index) => (\n                <div\n                  key={index}\n                  className=\"each-entity-container\"\n                  onClick={() =>\n                    goToEntityDetails(\n                      item.label,\n                      Math.round(\n                        updatedAllEntityList[index].totalSkillPercentage\n                      ),\n                      updatedAllEntityList[index].image\n                    )\n                  }\n                >\n                  <EntityBox\n                    logo={updatedAllEntityList[index].image}\n                    name={updatedAllEntityList[index].label}\n                    totalEntityScore={Math.round(\n                      updatedAllEntityList[index].totalSkillPercentage\n                    )}\n                  />\n                </div>\n              ))}\n            </div>\n            {(userDetailsObj.role == \"main_admin\" ||\n              userDetailsObj.role == \"desc_user\") && (\n              <div className=\"accordion-filter\">\n                <div className=\"each-accordion\">\n                  <Accordion\n                    onSelectedFilterValueChange={changeDisplaySetData}\n                    allEntities={entityListForDropDown}\n                    changeFilter={filterEntity}\n                    name=\"filter\"\n                  />\n                </div>\n                <div>\n                  <Accordion\n                    onSelectedFilterValueChange={changeDisplaySetData}\n                    allEntities={entityListForDropDown}\n                    changeFilter={filterEntity}\n                    name=\"sort\"\n                  />\n                </div>\n                {/* <FilterSection\n                onSelectedValueChange={changeDisplaySetData}\n                allEntities={entityListForDropDown}\n                changeFilter={filterEntity}\n              /> */}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/mainChartSection/MainChartSection.tsx",["457"],[],"import React, { useEffect, useState } from \"react\";\nimport CategoryDetails from \"../../pages/categoryDetails/CategoryDetails\";\nimport CategoryList from \"../../pages/categoryList/CategoryList\";\nimport \"./MainChartSection.css\";\n\nexport const MainChartSection = () => {\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [clickedItem, setclickedItem] = useState<any>();\n\n  const goToCategoryDetailsPage = (id, name) => {\n    //console.log(\"clicked\", id);\n    setSelectedCategory(true);\n    setclickedItem({ name: name, id: id });\n  };\n\n  const backButtonClicked = () => {\n    setSelectedCategory(false);\n  };\n\n  if (selectedCategory) {\n    return (\n      // <div>\n      <CategoryDetails\n        details={clickedItem}\n        backButtonClicked={backButtonClicked}\n      />\n      // </div>\n    );\n  } else {\n    return <CategoryList categoryClick={goToCategoryDetailsPage} />;\n  }\n};\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/filterSection/FilterSection.tsx",["458","459","460"],[],"import React, { useEffect, useState } from \"react\";\nimport Button from \"../button/Button\";\n\nimport DropDown from \"../dropDown/DropDown\";\nimport \"./FilterSection.css\";\n\ninterface filterSectionProps {\n  onSelectedValueChange: any;\n  allEntities;\n  changeFilter: any;\n  name?: any;\n}\n\nconst FilterSection: React.FC<filterSectionProps> = ({\n  onSelectedValueChange,\n  allEntities,\n  changeFilter,\n  name,\n}) => {\n  const [entityList, setentityList] = useState(allEntities);\n\n  useEffect(() => {\n    setentityList(allEntities);\n  }, [allEntities]);\n\n  const handleChangeValue = (data) => {\n    if (data.length === 0) {\n      //setentityList(mainEntity);\n      onSelectedValueChange(entityList);\n    } else {\n      onSelectedValueChange(data);\n    }\n  };\n\n  const [isNameAscending, setIsNameAscending] = useState(true);\n  const [isScoreAsc, setisScoreAsc] = useState(true);\n\n  const handleFilterClick = () => {\n    setIsNameAscending(!isNameAscending);\n    changeFilter(!isNameAscending, \"name\");\n  };\n\n  const handleFilterClickScore = () => {\n    setisScoreAsc(!isScoreAsc);\n    changeFilter(!isScoreAsc, \"score\");\n  };\n\n  const filterIcon =\n    isNameAscending || isScoreAsc ? (\n      <i className=\"fas fa-arrow-up\"></i>\n    ) : (\n      <i className=\"fas fa-arrow-down\"></i>\n    );\n\n  return (\n    <div className=\"all-filter-container\">\n      {name == \"filter\" && (\n        <DropDown\n          mainList={entityList}\n          //name=\"Filter\"\n          onChangeDropDownItem={handleChangeValue}\n          isMulti={true}\n        />\n      )}\n      {/* <div>\n        <div className=\"sort-button\">Sort</div>\n        <Button\n          icon={\n            !isNameAscending ? (\n              <i className=\"fas fa-arrow-up\"></i>\n            ) : (\n              <i className=\"fas fa-arrow-down\"></i>\n            )\n          }\n          text=\"By Name\"\n          isActive={isNameAscending}\n          onClick={handleFilterClick}\n        />\n      </div>\n      <Button\n        icon={\n          !isScoreAsc ? (\n            <i className=\"fas fa-arrow-up\"></i>\n          ) : (\n            <i className=\"fas fa-arrow-down\"></i>\n          )\n        }\n        text=\"By score\"\n        isActive={isScoreAsc}\n        onClick={handleFilterClickScore}\n      /> */}\n      {name == \"sort\" && (\n        <>\n          <div>\n            {/* <div className=\"sort-button\">Sort</div> */}\n            <Button\n              icon={\n                !isNameAscending ? (\n                  <i className=\"fas fa-arrow-up\"></i>\n                ) : (\n                  <i className=\"fas fa-arrow-down\"></i>\n                )\n              }\n              text=\"By Name\"\n              isActive={isNameAscending}\n              onClick={handleFilterClick}\n            />\n          </div>\n          <Button\n            icon={\n              !isScoreAsc ? (\n                <i className=\"fas fa-arrow-up\"></i>\n              ) : (\n                <i className=\"fas fa-arrow-down\"></i>\n              )\n            }\n            text=\"By score\"\n            isActive={isScoreAsc}\n            onClick={handleFilterClickScore}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default FilterSection;\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/entityBox/EntityBox.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/donutChart/DonutChart.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/service/Config.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/dropDown/DropDown.tsx",["461","462"],[],"import React, { useEffect, useState } from \"react\";\nimport { getHttp } from \"../../service/APIRequest\";\nimport \"./DropDown.css\";\nimport Select from \"react-select\";\n\ninterface dropDownType {\n  onChangeDropDownItem?: any;\n  mainList?: any;\n  name?: String;\n  isMulti: boolean;\n  value?: any;\n  classname?: String;\n  placeholder?: String;\n}\nconst DropDown: React.FC<dropDownType> = ({\n  onChangeDropDownItem,\n  mainList,\n  name,\n  isMulti,\n  value,\n  classname,\n  placeholder,\n}) => {\n  const [selectedOptions, setSelectedOptions] = useState(null);\n\n  useEffect(() => {\n    setSelectedOptions(mainList);\n  }, [mainList]);\n\n  // Function triggered on selection\n  function handleSelect(data) {\n    setSelectedOptions(data);\n    onChangeDropDownItem(data);\n  }\n  return (\n    <div>\n      <div className=\"app\">\n        <div className=\"dropdown-heading\"> {name}</div>\n        <div className=\"dropdown-container\">\n          <Select\n            options={mainList}\n            isMulti={isMulti}\n            placeholder={placeholder ? placeholder : \"by entity\"} //{`Select ${name}`}\n            onChange={handleSelect}\n            isSearchable={true}\n            className={`dropdownOption button1 ${classname}`}\n            value={value}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default DropDown;\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/TestChart.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/popup/PopupModal.tsx",["463","464","465","466","467"],[],"import React, { useEffect, useState } from \"react\";\nimport \"./PopupModal.css\";\nimport ProgressCircle from \"../progressCircle/ProgressCircle\";\nimport { getSkillPercentage } from \"../../service/Service\";\nimport ProgressBar from \"../progressCircle/ProgressBar\";\nimport JobChart from \"../Graph/jobChart/JobChart\";\nimport Score from \"../score/Score\";\nimport { SubHeader } from \"../subHeader/SubHeader\";\n\nconst PopupModal = (props) => {\n  const [skillProgressValue, setskillProgressValue] = useState<any>(0);\n  const [expandedRows, setExpandedRows] = useState({ technical: [], soft: [] });\n\n  useEffect(() => {\n    getSkillValue();\n  }, []);\n\n  const getSkillValue = async () => {\n    var result = await getSkillPercentage(props.employeDetails.skills);\n    setskillProgressValue(result);\n  };\n\n  const getAchievedStatus = (name) => {\n    const item = props.employeDetails?.skills.find(\n      (obj) => obj.name.toLowerCase() === name.toLowerCase()\n    );\n    return item ? item.achievedStatus : \"\";\n  };\n\n  const getEnrollmentStatus = (name) => {\n    const item = props.employeDetails?.trainingNeeds.find(\n      (obj) => obj.linkedCompetency?.toLowerCase() === name.toLowerCase()\n    );\n    return item ? item.courses : \"\";\n    //return item;\n  };\n\n  // const toggleAccordionRow = (index) => {\n  //   // if (expandedRows.includes(index)) {\n  //   //   setExpandedRows(expandedRows.filter((row) => row !== index));\n  //   // } else {\n  //   //   setExpandedRows([...expandedRows, index]);\n  //   // }\n  // }\n  const toggleAccordionRow = (index, tableType) => {\n    setExpandedRows((prevState) => {\n      const updatedRows = { ...prevState };\n      if (updatedRows[tableType].includes(index)) {\n        updatedRows[tableType] = updatedRows[tableType].filter(\n          (row) => row !== index\n        );\n      } else {\n        updatedRows[tableType] = [...updatedRows[tableType], index];\n      }\n      return updatedRows;\n    });\n  };\n  //onClick={props.closeModal}  e.stopPropagation();\n  return (\n    <div className=\"popup-overlay\" onClick={props.closeModal}>\n      <div className=\"modal details-popup\" onClick={(e) => e.stopPropagation()}>\n        {/* <button className=\"close\" onClick={props.closeModal}>\n          &times;\n        </button> */}\n        {/* <div className=\"subheader-container\">\n          <div className=\"flex-box\">\n            <div className=\"flex-header\"> {props.employeDetails.name} </div>\n          </div>\n          <div className=\"score-div1 entity-score orange-value\">\n            <Score score={props.employeDetails.employeeSkill} />\n          </div>\n          <JobChart item={props.employeDetails.subcategories} />\n        </div> */}\n        <SubHeader\n          content={\n            <div className=\"top-head\">\n              <div className=\"score-container\">\n                <Score score={props.employeDetails.employeeSkill} />\n              </div>\n\n              <div className=\"logo-container\"></div>\n              <div className=\"heading main-heading\">\n                {props.employeDetails.name}\n              </div>\n            </div>\n          }\n          jobTree={<JobChart item={props.employeDetails.roleTree} />}\n        />\n        <div className=\"margin-border\"></div>\n        <div className=\"modal-content\">\n          {\" \"}\n          <div className=\"popup-main-container\">\n            <div className=\"skill-progress\"></div>\n          </div>\n          <br />\n          <div className=\"two-table-container\">\n            <div className=\"first-table\">\n              <table className=\"table\">\n                <thead>\n                  <tr className=\"each-column-border table-heading\">\n                    <th className=\"each-column-border\">Technical Skill</th>\n                    <th className=\"each-column-border\">Status</th>\n                    <th className=\"each-column-border\">Training</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {/* {props.employeDetails?.technicalSkills?.map((item, index) => ( */}\n                  {props.employeDetails?.skills?.technical_skills?.map(\n                    (item, index) => (\n                      <React.Fragment key={index}>\n                        <tr\n                          key={index}\n                          // className={index % 2 === 0 ? \"even-row\" : \"odd-row\"}\n                        >\n                          <td className=\"each-column-border skill-name\">\n                            {item.name}\n                          </td>\n                          <td\n                            className=\"each-column-border\"\n                            // style={{\n                            //   backgroundColor:\n                            //     getAchievedStatus(item) === \"Achieved\" ||\n                            //     getAchievedStatus(item) === \"achieved\"\n                            //       ? \"green\"\n                            //       : \"red\",\n                            // }}\n                            style={{\n                              backgroundColor:\n                                item.achievedStatus === \"achieved\"\n                                  ? \"green\"\n                                  : \"red\",\n                            }}\n                          ></td>\n                          <td\n                            className=\"each-column-border  skill-name\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              toggleAccordionRow(index, \"technical\");\n                            }}\n                          >\n                            {getEnrollmentStatus(item.name) ? (\n                              <div className=\"training\">Training details</div>\n                            ) : (\n                              \"NA\"\n                            )}\n                          </td>\n                        </tr>\n                        {getEnrollmentStatus(item.name) &&\n                          expandedRows.technical.includes(index) && (\n                            <tr\n                              className={`accordion-content ${\n                                expandedRows.technical.includes(index)\n                                  ? \"open\"\n                                  : \"\"\n                              }`}\n                            >\n                              <td colSpan={4} className=\"each-column-border \">\n                                {getEnrollmentStatus(item.name) && (\n                                  <span>\n                                    {getEnrollmentStatus(item.name).map(\n                                      (item, index) => (\n                                        <div className=\"flex-box\">\n                                          <div className=\"bold-text\">\n                                            {index + 1 + \"  . \"}\n                                          </div>\n                                          <div className=\"course-list\">\n                                            {item.course}\n                                          </div>\n                                        </div>\n                                      )\n                                    )}\n                                  </span>\n                                )}\n                              </td>\n                            </tr>\n                          )}\n                      </React.Fragment>\n                    )\n                  )}\n                </tbody>\n              </table>\n            </div>\n            <div className=\"first-table\">\n              <table className=\"table\">\n                <thead>\n                  <tr className=\"table-heading\">\n                    <th className=\"each-column-border\">Soft Skill</th>\n                    <th className=\"each-column-border\">Status</th>\n                    <th className=\"each-column-border\">Training</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {props.employeDetails?.skills?.soft_skills?.map(\n                    (item, index) => (\n                      <React.Fragment key={index}>\n                        <tr\n                          key={index}\n                          // className={index % 2 === 0 ? \"even-row\" : \"odd-row\"}\n                        >\n                          <td className=\"each-column-border  skill-name\">\n                            {item.name}\n                          </td>\n                          <td\n                            style={{\n                              backgroundColor:\n                                item.achievedStatus === \"achieved\"\n                                  ? \"green\"\n                                  : \"red\",\n                            }}\n                          ></td>\n                          <td\n                            className=\"each-column-border  skill-name\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              toggleAccordionRow(index, \"soft\");\n                            }}\n                          >\n                            {getEnrollmentStatus(item.name) ? (\n                              <div className=\"training\">Training details</div>\n                            ) : (\n                              \"NA\"\n                            )}\n                          </td>\n                        </tr>\n                        {getEnrollmentStatus(item.name) &&\n                          expandedRows.soft.includes(index) && (\n                            <tr\n                              className={`accordion-content ${\n                                expandedRows.soft.includes(index) ? \"open\" : \"\"\n                              }`}\n                            >\n                              <td colSpan={4} className=\"each-column-border\">\n                                {getEnrollmentStatus(item.name) && (\n                                  <span>\n                                    {getEnrollmentStatus(item.name).map(\n                                      (item, index) => (\n                                        <div className=\"flex-box\">\n                                          <div className=\"bold-text\">\n                                            {index + 1 + \"  . \"}\n                                          </div>\n                                          <div className=\"course-list\">\n                                            {item.course}\n                                          </div>\n                                        </div>\n                                      )\n                                    )}\n                                  </span>\n                                )}\n                              </td>\n                            </tr>\n                          )}\n                      </React.Fragment>\n                    )\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <br />\n          {props.employeDetails?.skills?.other_skills.length > 0 && (\n            <div className=\"two-table-container\">\n              <div className=\"first-table\">\n                <table className=\"table-other\">\n                  <thead>\n                    <tr className=\"each-column-border table-heading\">\n                      <th className=\"each-column-border\">Other Skills</th>\n                      <th className=\"each-column-border\">Status</th>\n                      <th className=\"each-column-border\">Training</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {/* {props.employeDetails?.technicalSkills?.map((item, index) => ( */}\n                    {props.employeDetails?.skills?.other_skills?.map(\n                      (item, index) => (\n                        <React.Fragment key={index}>\n                          <tr\n                            key={index}\n                            // className={index % 2 === 0 ? \"even-row\" : \"odd-row\"}\n                          >\n                            <td className=\"each-column-border skill-name\">\n                              {item.name}\n                            </td>\n                            <td\n                              className=\"each-column-border\"\n                              // style={{\n                              //   backgroundColor:\n                              //     getAchievedStatus(item) === \"Achieved\" ||\n                              //     getAchievedStatus(item) === \"achieved\"\n                              //       ? \"green\"\n                              //       : \"red\",\n                              // }}\n                              style={{\n                                backgroundColor:\n                                  item.achievedStatus === \"achieved\"\n                                    ? \"green\"\n                                    : \"red\",\n                              }}\n                            ></td>\n                            <td\n                              className=\"each-column-border  skill-name\"\n                              onClick={(e) => {\n                                e.stopPropagation();\n                                toggleAccordionRow(index, \"technical\");\n                              }}\n                            >\n                              {getEnrollmentStatus(item.name) ? (\n                                <div className=\"training\">Training details</div>\n                              ) : (\n                                \"NA\"\n                              )}\n                            </td>\n                          </tr>\n                          {getEnrollmentStatus(item.name) &&\n                            expandedRows.technical.includes(index) && (\n                              <tr\n                                className={`accordion-content ${\n                                  expandedRows.technical.includes(index)\n                                    ? \"open\"\n                                    : \"\"\n                                }`}\n                              >\n                                <td colSpan={4} className=\"each-column-border \">\n                                  {getEnrollmentStatus(item.name) && (\n                                    <span>\n                                      {getEnrollmentStatus(item.name).map(\n                                        (item, index) => (\n                                          <div className=\"flex-box\">\n                                            <div className=\"bold-text\">\n                                              {index + 1 + \"  . \"}\n                                            </div>\n                                            <div className=\"course-list\">\n                                              {item.course}\n                                            </div>\n                                          </div>\n                                        )\n                                      )}\n                                    </span>\n                                  )}\n                                </td>\n                              </tr>\n                            )}\n                        </React.Fragment>\n                      )\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n          <br />\n        </div>{\" \"}\n        {/* <div className=\"second-item\">\n                        <ProgressBar score={item.score} />\n                      </div> */}\n        <div className=\"actions\">\n          <button className=\"button\" onClick={props.closeModal}>\n            close modal\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n  //     <Popup trigger={<button className=\"button\"> Open Modal </button>} modal>\n  //       <span> Modal content </span>\n  //     </Popup>\n  //   );\n};\n\nexport default PopupModal;\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/progressCircle/ProgressCircle.tsx",[],[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/service/Service.tsx",["468"],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/progressCircle/ProgressBar.tsx",["469"],[],"import React, { useEffect, useState } from \"react\";\nimport { skillMaximumScoreValue } from \"../../service/Constants\";\nimport { alertColor, calculatePercent } from \"../../service/Service\";\n\nconst ProgressBar = (props) => {\n  const [percentage, setPercentage] = useState<any>(); // set initial percentage value\n\n  useEffect(() => {\n    getPercentageValue();\n  }, []);\n\n  const getPercentageValue = () => {\n    setPercentage(calculatePercent(props.score, skillMaximumScoreValue));\n  };\n\n  const progressBarColor = alertColor(percentage);\n\n  const progressBarStyles = {\n    width: `${percentage}%`, // set width of progress bar based on percentage\n    background: `${progressBarColor}`,\n  };\n  const progressBarContainer = {\n    borderColor: `${progressBarColor}`,\n  };\n\n  return (\n    <div className=\"progress-bar-container\" style={progressBarContainer}>\n      <div className=\"progress-bar\" style={progressBarStyles}></div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/MyChart.tsx",["470"],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/donutChart/Doughnut.tsx",["471","472"],[],"import React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\ninterface donutChartInterface {\n  details?: any;\n  heading?: String;\n  multiLayer?: boolean;\n  showLegend: boolean;\n}\n\nconst Doughnut: React.FC<donutChartInterface> = ({\n  details,\n  heading,\n  multiLayer,\n  showLegend,\n}) => {\n  //console.log(details);\n  const [label, setLabel] = useState(details?.map((item) => item.category));\n  const [dataSeries, setdataSeries] = useState(\n    details?.map((item) => item.count)\n  );\n  const [option, setOption] = useState<any>({\n    height: 450,\n    chart: {\n      height: 400, // set the height to 400px\n      width: 400,\n    },\n    labels: details?.map((item) => item.category),\n    plotOptions: {\n      pie: {\n        donut: {\n          //size: \"10%\", // Adjust the size of the donut ring\n        },\n      },\n    },\n\n    legend: {\n      show: showLegend,\n      showForSingleSeries: false,\n      showForNullSeries: true,\n      showForZeroSeries: true,\n      labels: {\n        colors: \"#333\",\n        useSeriesColors: false,\n        formatter: function (value, { seriesIndex, w }) {\n          return details.labels[seriesIndex] + \": \" + value + \"%\";\n        },\n      },\n      //labels: details?.map((item) => item.category),\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return val + \".00\" + \" Rs\";\n          },\n          title: {\n            formatter: function (seriesName) {\n              return \"# of Employees in \";\n            },\n          },\n        },\n      },\n    },\n    // title: {\n    //   text: \"Dubai Skills %\",\n    //   style: {\n    //     fontSize: \"14px\",\n    //     fontWeight: \"bold\",\n    //     fontFamily: \"Bukra\",\n    //     color: \"red\",\n    //   },\n    // },\n    // stroke: {\n    //   width: 2,\n    //   colors: [\"#000\"],\n    // },\n  });\n\n  useEffect(() => {\n    setLabel(details?.map((item) => item.category));\n    setdataSeries(details?.map((item) => item.count));\n    setOption((prevState) => ({\n      ...prevState,\n      //legend: { show: showLegend },\n      labels: details?.map((item) => item.category),\n    }));\n  }, [details]);\n\n  return (\n    <div className=\" chart-bg\">\n      <div\n        className=\"donut-heading\"\n        hidden={details?.length <= 0}\n        //className={multiLayer ? \"center-heading\" : \"\"}\n      >\n        {heading}\n      </div>\n      <Chart\n        options={option}\n        series={dataSeries}\n        type=\"donut\"\n        width={400}\n        height={400}\n      />\n    </div>\n  );\n};\n\nexport default Doughnut;\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/donutChart/RadialBarChart.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab3/Tab3.tsx",["473","474","475","476","477","478"],[],"import React, { useEffect, useState } from \"react\";\nimport { DateRangeFilter } from \"../../../components/dateRangeFilter/DateRangeFilter\";\nimport DropDown from \"../../../components/dropDown/DropDown\";\nimport { SubHeader } from \"../../../components/subHeader/SubHeader\";\nimport { getHttp } from \"../../../service/APIRequest\";\nimport \"../Tabs.css\";\nimport Chart1 from \"./Chart1\";\nimport Chart2 from \"./Chart2\";\nimport { Chart3 } from \"./Chart3\";\nimport { Chart4 } from \"./Chart4\";\nimport { SummaryTable } from \"./SummaryTable\";\n\nconst Tab3 = () => {\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [chartOneData, setchartOneData] = useState();\n  const [entityListForDropDown, setentityListForDropDown] = useState([]);\n  const [chart3Data, setchart3Data] = useState();\n  const [selectedItemDropdown, setselectedItemDropdown] = useState([]);\n\n  const [data, setData] = useState(\"\");\n\n  const handleDataChange = (newData) => {\n    setData(newData);\n  };\n\n  var userDeatilsString = sessionStorage.getItem(\"userDetails\");\n  var userDetailsObj = JSON.parse(userDeatilsString);\n  console.log(userDetailsObj?.entity);\n\n  useEffect(() => {\n    if (userDetailsObj?.entity) {\n      var userEntity = [userDetailsObj?.entity];\n      setselectedItemDropdown(userEntity);\n      setentityListForDropDown([{ label: userEntity, vaue: userEntity }]);\n    } else {\n      getEntityList();\n    }\n    // drawBarChart(startDate, endDate);\n  }, []);\n\n  useEffect(() => {}, [startDate, endDate]);\n\n  const getEntityList = async () => {\n    const response = await getHttp(\"entity/getNameDetails\");\n    await setentityListForDropDown(response);\n    await setselectedItemDropdown(response?.map((item) => item.label));\n  };\n\n  const fetchChartData = (data) => {\n    if (data) {\n      setchartOneData(data);\n    } else {\n      setchartOneData(null);\n    }\n    //}, 11);\n  };\n\n  const handleChangeValue = (data) => {\n    setchartOneData(null);\n    setselectedItemDropdown(data?.map((item) => item.label));\n    //console.log(data.length);\n    if (data.length == 1) {\n    }\n  };\n\n  // const drawLineChart = async (startDateParam, endDateParam) => {\n  //   fetchDates(startDateParam, endDateParam);\n  //   if (startDateParam && endDateParam) {\n  //     const response = await getHttp(\"skills/companyAverageScore\", {\n  //       startDate: startDateParam,\n  //       endDate: endDateParam,\n  //     });\n  //     fetchChartData(response);\n\n  //     return { startDate, endDate };\n  //   }\n  //   return null;\n  // };\n\n  // const drawBarChart = async (startDateParam, endDateParam) => {\n  //   const response = await getHttp(\"skills/skill-ranks\", {\n  //     startDate: startDateParam,\n  //     endDate: endDateParam,\n  //   });\n  //   // setTimeout(() => {\n  //   setchart3Data(response);\n  //   // }, 11);\n  // };\n\n  const fetchDates = (fromDate, toDate) => {\n    setStartDate(fromDate);\n    setEndDate(toDate);\n  };\n\n  const fetchChart4Data = (data) => {\n    //setsummaryData(data);\n    // console.log(data.map((item) => item.companyName));\n  };\n\n  return (\n    <div className=\"content-top-margin \">\n      <SubHeader\n        pageHeadding=\"digital historical scoring\"\n        showBreadcrumbs={true}\n      />\n      {/* <div className=\"main-heading\">Digital skills historical scoring</div> */}\n      <div className=\"tab3-filter-container\">\n        {!userDetailsObj?.entity && (\n          <DropDown\n            mainList={entityListForDropDown}\n            name=\"Entity\"\n            onChangeDropDownItem={handleChangeValue}\n            isMulti={true}\n            classname=\"margin\"\n          />\n        )}\n        <DateRangeFilter\n          fetchChartData={fetchChartData}\n          fetchDates={fetchDates}\n          selectedEntityList={selectedItemDropdown}\n          entityList={entityListForDropDown}\n        />\n      </div>\n      <div className=\"tab3-contentainer\">\n        <div className=\"tab3-first-row\">\n          <div className=\"flex-box-chart1\">\n            <Chart1 data={chartOneData} entityName={selectedItemDropdown} />\n          </div>\n          {!userDetailsObj?.entity && (\n            <div className=\"flex-box-chart2\">\n              <Chart2\n                startDate={startDate}\n                endDate={endDate}\n                entityListForDropDown={entityListForDropDown}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"tab3-sec-row\">\n          <div className=\"flex-box-chart1\">\n            <Chart3\n              startDate={startDate}\n              endDate={endDate}\n              selectedEntityList={selectedItemDropdown}\n              entityList={entityListForDropDown}\n              //fetchChart3Data={fetchChart3Data}\n            />\n          </div>\n          <div className=\"flex-box-chart2\">\n            <Chart4\n              selectedEntityList={selectedItemDropdown}\n              entityList={entityListForDropDown}\n              fetchChart4Data={fetchChart4Data}\n            />\n          </div>\n        </div>\n        {/* {summaryData && ( */}\n        {!userDetailsObj?.entity && (\n          <div className=\"summary-table\">\n            <div className=\"summary-text\">Summary</div>\n            <SummaryTable entityList={entityListForDropDown} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Tab3;\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/datePicker/DateInput.tsx",["479","480","481","482","483"],[],"import React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./DateInput.css\";\n\ninterface DateInputProps {\n  minDate?: any;\n  maxDate?: any;\n  value;\n  dateChangeEvent: any;\n}\n\nconst DateInput: React.FC<DateInputProps> = ({\n  minDate,\n  maxDate,\n  value,\n  dateChangeEvent,\n}) => {\n  const [startDate, setStartDate] = useState<any>();\n  const [endDate, setEndDate] = useState(null);\n  const [endCalendarVisible, setEndCalendarVisible] = useState(false);\n\n  useEffect(() => {\n    const today = new Date();\n    const defaultStartDate = today.toISOString().slice(0, 10);\n    setStartDate(defaultStartDate);\n  }, []);\n\n  const handleStartChange = (date) => {\n    setStartDate(date);\n    setEndCalendarVisible(true);\n  };\n\n  const handleDateChange = (date) => {\n    setEndDate(date);\n    dateChangeEvent(date);\n  };\n\n  return (\n    <div className=\"date-input margin\">\n      <input\n        type=\"date\"\n        className=\"input-field\"\n        value={value}\n        //value={new Date().toISOString().substr(0, 10)}\n        onChange={(event) => {\n          handleDateChange(event.target.value);\n        }}\n        max={maxDate}\n        min={minDate}\n      />\n    </div>\n  );\n};\n\nexport default DateInput;\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/lineChart/LineChart.tsx",["484","485","486"],[],"import React, { useEffect, useState } from \"react\";\n\nimport Chart from \"react-apexcharts\";\n\nconst LineChart = ({ data, xAxis, title }) => {\n  const [dataSeries, setdataSeries] = useState(data || []);\n  const [option, setOption] = useState<any>({\n    legend: {\n      show: false,\n    },\n    xaxis: {\n      categories: xAxis,\n      labels: {\n        hideOverlappingLabels: true,\n      },\n    },\n    title: {\n      text: title,\n      style: {\n        fontSize: \"14px\",\n        fontWeight: \"bold\",\n        fontFamily: \"Bukra\",\n        color: \"Black\",\n      },\n    },\n    yaxis: {\n      forceNiceScale: true,\n    },\n  });\n\n  useEffect(() => {\n    setdataSeries(data);\n\n    if (data) {\n      const categories = data?.map((item) => item.category);\n      setOption((prevState) => ({\n        ...prevState,\n        xaxis: {\n          ...prevState.xaxis,\n          categories: xAxis,\n        },\n      }));\n    }\n  }, [data]);\n\n  const series = dataSeries;\n\n  return (\n    <div>\n      <Chart options={option} series={dataSeries} type=\"line\" width=\"550\" />\n    </div>\n  );\n};\n\nexport default LineChart;\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/dateRangeFilter/DateRangeFilter.tsx",["487","488","489","490","491"],[],"import React, { useEffect, useState } from \"react\";\nimport { getHttp } from \"../../service/APIRequest\";\nimport DateInput from \"../datePicker/DateInput\";\n\ninterface DateRangeFilterProps {\n  fetchChartData: any;\n  fetchDates?: any;\n  entityList?: any;\n  selectedEntityList?: any;\n}\nexport const DateRangeFilter: React.FC<DateRangeFilterProps> = ({\n  fetchChartData,\n  fetchDates,\n  entityList,\n  selectedEntityList,\n}) => {\n  const [startDate, setStartDate] = useState<any>();\n  const [endDate, setEndDate] = useState(null);\n  const [endCalendarVisible, setEndCalendarVisible] = useState(true);\n  const [selectedEntities, setselectedEntities] = useState(selectedEntityList);\n  const [allEntityList, setallEntityList] = useState(entityList);\n\n  useEffect(() => {\n    // const today = new Date();\n    // const defaultEndDate = today.toISOString().slice(0, 10);\n    // const oneYearAgo = new Date(\n    //   today.getFullYear() - 1,\n    //   today.getMonth(),\n    //   today.getDate()\n    // );\n    // const defaultStartDate = oneYearAgo.toISOString().slice(0, 10);\n    // setTimeout(() => {\n    //   setStartDate(defaultStartDate);\n    //   setEndDate(defaultEndDate);\n    //   filterData(defaultStartDate, defaultEndDate);\n    // }, 110);\n    defaultFilterData();\n  }, []); //companyAverageScore\n\n  useEffect(() => {\n    setallEntityList(allEntityList);\n    setselectedEntities(selectedEntityList);\n    filterData(startDate, endDate, selectedEntityList);\n  }, [selectedEntityList]);\n\n  const defaultFilterData = () => {\n    const today = new Date();\n    const defaultEndDate = today.toISOString().slice(0, 10);\n    const oneYearAgo = new Date(\n      today.getFullYear() - 1,\n      today.getMonth(),\n      today.getDate()\n    );\n    const defaultStartDate = oneYearAgo.toISOString().slice(0, 10);\n    setTimeout(() => {\n      setStartDate(defaultStartDate);\n      setEndDate(defaultEndDate);\n      filterData(defaultStartDate, defaultEndDate);\n    }, 110);\n  };\n\n  const filterData = async (\n    startDateParam,\n    endDateParam,\n    selectedEntities?\n  ) => {\n    fetchDates(startDateParam, endDateParam);\n    var entityLists = selectedEntities;\n    if (!entityLists || entityLists?.length == 0) {\n      entityLists = entityList?.map((item) => item.label);\n    }\n\n    if (startDateParam && endDateParam && entityList && entityList.length > 0) {\n      const response = getHttp(\"skills/averageScoreOfListOfEntities\", {\n        startDate: startDateParam,\n        endDate: endDateParam,\n        entityNames: entityLists?.join(\",\"),\n      })\n        .then((response) => {\n          //console.log(response);\n\n          fetchChartData(response);\n          return { startDate, endDate }; // handle success\n        })\n        .catch((error) => {\n          console.log(error);\n          // handle error\n        });\n    }\n    return null;\n  };\n\n  function changeFilterStartDate(changeInStartDate) {\n    setEndCalendarVisible(true);\n    setStartDate(changeInStartDate);\n    //setEndDate(changeInStartDate);\n  }\n\n  function changeFilterEndDate(changeInEndDate) {\n    setEndDate(changeInEndDate);\n  }\n\n  return (\n    <div className=\"date-range-filter-container\">\n      <div>\n        <label className=\"calendar-heading\">Start Date:</label>\n        <DateInput\n          maxDate={new Date().toISOString().substr(0, 10)}\n          value={startDate}\n          dateChangeEvent={changeFilterStartDate}\n        />\n      </div>\n      {endCalendarVisible && (\n        <div>\n          <label className=\"calendar-heading\">End Date:</label>\n          <DateInput\n            maxDate={new Date().toISOString().substr(0, 10)}\n            value={endDate}\n            dateChangeEvent={changeFilterEndDate}\n            minDate={startDate}\n          />\n        </div>\n      )}\n      <button\n        className=\"filter-button std  margin-left unwanted\"\n        onClick={() => filterData(startDate, endDate)}\n        // onClick={filterData(startDate, endDate)}\n      >\n        Apply changes\n      </button>\n\n      <button\n        className=\"filter-button std margin-left unwanted\"\n        onClick={() => defaultFilterData()}\n        // onClick={filterData(startDate, endDate)}\n      >\n        Reset\n      </button>\n    </div>\n  );\n};\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab3/Chart1.tsx",["492","493","494"],[],"import React, { useEffect, useState } from \"react\";\nimport LineChart from \"../../../components/Graph/lineChart/LineChart\";\n\ninterface Chart1props {\n  data?: any;\n  entityName?: any;\n}\n\nconst Chart1: React.FC<Chart1props> = ({ data, entityName }) => {\n  const [xAaxis, setXAxis] = useState([]);\n  const [chartData, setchartData] = useState(data);\n\n  useEffect(() => {\n    drawChart();\n  }, [data]);\n\n  const drawChart = () => {\n    if (data && data.length > 0) {\n      const series = data?.map((company) => {\n        return {\n          name: company.companyName,\n          data: company.monthlyAverages?.map((monthlyAverage) => {\n            return monthlyAverage.averageScore;\n          }),\n        };\n      });\n      setchartData(series);\n      const xAxis = data?.map((company) => {\n        return company.monthlyAverages?.map((monthlyAverage) => {\n          if (company.monthlyAverages.length == 1) {\n            //\n            return monthlyAverage.month;\n          } else {\n            return monthlyAverage.month;\n          }\n        });\n        //return month;\n      });\n      const dataArray = xAxis[xAxis.length - 1]; // Example array with more than 8 elements\n\n      let truncatedArray = [...dataArray]; // Create a copy of the original array\n\n      if (truncatedArray.length > 8) {\n        const removeCount = truncatedArray.length - 8; // Calculate the number of elements to remove\n\n        for (let i = 2; i < truncatedArray.length - 2; i++) {\n          const randomIndex =\n            Math.floor(Math.random() * (truncatedArray.length - 4)) + 2; // Generate a random index between 2 and length - 3\n          truncatedArray.splice(randomIndex, 1); // Remove the element at the random index\n        }\n      }\n\n      //console.log(truncatedArray); // The truncated array with a length of 8\n      //setXAxis(truncatedArray);\n      setXAxis(xAxis[xAxis.length - 1]);\n    } else {\n      console.log(\"No data to show for \" + entityName);\n    }\n  };\n\n  return (\n    <div className=\"chart-bg\">\n      <LineChart data={chartData} xAxis={xAaxis} title=\"All entities\" />\n    </div>\n  );\n};\n\nexport default Chart1;\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab3/Chart2.tsx",["495","496"],[],"import React, { useEffect, useState } from \"react\";\nimport DropDown from \"../../../components/dropDown/DropDown\";\nimport LineChart from \"../../../components/Graph/lineChart/LineChart\";\nimport { getHttp } from \"../../../service/APIRequest\";\n\ninterface Chart2Props {\n  startDate: any;\n  endDate: any;\n  entityListForDropDown: any;\n}\nconst Chart2: React.FC<Chart2Props> = ({\n  startDate,\n  endDate,\n  entityListForDropDown,\n}) => {\n  const [selectList1Entity, setSelectList1Entity] = useState(\n    entityListForDropDown\n  );\n  const [selectList2Entity, setSelectList2Entity] = useState(\n    entityListForDropDown\n  );\n  const [chartData, setchartData] = useState([]);\n  const [xAxis, setxAxis] = useState([]);\n  const [dateRangeProps, setdateRangeProps] = useState({\n    fromDate: startDate,\n    toDate: endDate,\n  });\n  const [dropdownValues, setdropdownValues] = useState({\n    firstDValue: \"\", //firstDropDownValue,\n    secondDValue: \"\", //secondDropDownValue,\n  });\n\n  useEffect(() => {\n    setSelectList1Entity(entityListForDropDown);\n    setSelectList2Entity(entityListForDropDown);\n    getScoreOfSelectedEntities(\n      dropdownValues.firstDValue,\n      dropdownValues.secondDValue\n    );\n    getScoreOfSelectedEntities(\n      dropdownValues.secondDValue,\n      dropdownValues.secondDValue\n    );\n  }, [startDate, endDate, dateRangeProps]);\n\n  useEffect(() => {\n    setSelectList1Entity(entityListForDropDown);\n    setSelectList2Entity(entityListForDropDown);\n  }, [entityListForDropDown]);\n\n  // const getEntityList = async () => {\n  //   const response = await getHttp(\"entity/getAll\");\n  //   await setSelectList1Entity(response);\n  //   await setSelectList2Entity(response);\n  //   //setentityListForDropDown(response);\n  // };\n\n  function handleChange1Value(selectedOption) {\n    setdropdownValues((prevState) => ({\n      ...prevState,\n      firstDValue: selectedOption.label,\n    }));\n    if (dropdownValues.secondDValue) {\n      getScoreOfSelectedEntities(\n        selectedOption.label,\n        dropdownValues.secondDValue\n      );\n    }\n    //getScoreOfSelectedEntity(selectedOption.label);\n  }\n\n  function handleChange2Value(selectedOption) {\n    setdropdownValues((prevState) => ({\n      ...prevState,\n      secondDValue: selectedOption.label,\n    }));\n    if (dropdownValues.firstDValue) {\n      getScoreOfSelectedEntities(\n        dropdownValues.firstDValue,\n        selectedOption.label\n      );\n    }\n    //getScoreOfSelectedEntity(selectedOption.label);\n  }\n\n  // async function drawChart(responseData?) {\n  //   var dataOfOneChart = {\n  //     name: responseData[0]?.companyName,\n  //     data: responseData[0]?.monthlyAverages?.map((monthlyAverage) => {\n  //       return monthlyAverage.averageScore;\n  //     }),\n  //   };\n  //   var xAxisdata = responseData[0].monthlyAverages?.map((monthlyAverage) => {\n  //     return monthlyAverage.month;\n  //   });\n  //   setxAxis(xAxisdata);\n  //   setchartData((prevState) => [...prevState, dataOfOneChart]);\n  // }\n\n  function drawChart(responseData1, responseData2) {\n    const dataOfOneChart1 = {\n      name: responseData1[0]?.companyName,\n      data: responseData1[0]?.monthlyAverages?.map((monthlyAverage) => {\n        return monthlyAverage.averageScore;\n      }),\n    };\n    const dataOfOneChart2 = {\n      name: responseData2[0]?.companyName,\n      data: responseData2[0]?.monthlyAverages?.map((monthlyAverage) => {\n        return monthlyAverage.averageScore;\n      }),\n    };\n    const xAxisData = responseData1[0].monthlyAverages?.map(\n      (monthlyAverage) => {\n        return monthlyAverage.month;\n      }\n    );\n    setxAxis(xAxisData);\n    setchartData([dataOfOneChart1, dataOfOneChart2]);\n  }\n\n  const getScoreOfSelectedEntities = async (entity1, entity2) => {\n    // if (entityName) {\n    //   const response = await getHttp(\"skills/averageScoreOfEntity\", {\n    //     startDate: startDate,\n    //     endDate: endDate,\n    //     entityName: entityName,\n    //   });\n    //   drawChart(response);\n    // } else {\n    //   drawChart();\n    // }\n\n    if (entity1 && entity2) {\n      const response1 = await getHttp(\"skills/averageScoreOfEntity\", {\n        startDate: startDate,\n        endDate: endDate,\n        entityName: entity1,\n      });\n      const response2 = await getHttp(\"skills/averageScoreOfEntity\", {\n        startDate: startDate,\n        endDate: endDate,\n        entityName: entity2,\n      });\n      drawChart(response1, response2);\n    }\n  };\n\n  return (\n    <div className=\"chart-bg\">\n      <div className=\"drop-down-tab3\">\n        <DropDown\n          mainList={selectList1Entity}\n          name=\"First Entity\"\n          onChangeDropDownItem={handleChange1Value}\n          isMulti={false}\n          classname=\"margin\"\n        />\n        <DropDown\n          mainList={selectList2Entity}\n          name=\"Second Entity\"\n          onChangeDropDownItem={handleChange2Value}\n          isMulti={false}\n        />\n      </div>\n      <LineChart data={chartData} xAxis={xAxis} title=\"Compare 2 entities\" />\n    </div>\n  );\n};\n\nexport default Chart2;\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/barChart/BarChart.tsx",["497","498","499","500","501","502"],[],"import React, { useEffect, useRef, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Popover } from \"../../popup/Popover\";\nimport \"../Chart.css\";\nimport \"./BarChartPopup.css\";\n\ninterface BarChartInterface {\n  data;\n  xAxis;\n  title?;\n  name?;\n  width?: any;\n  eachBarClicked?: any;\n  barChartPopoverdata?: any;\n  subTitle?: any;\n  closePopover?: any;\n}\n\nexport const BarChart: React.FC<BarChartInterface> = ({\n  data,\n  xAxis,\n  title,\n  name,\n  width,\n  eachBarClicked,\n  barChartPopoverdata,\n  subTitle,\n  closePopover,\n}) => {\n  const [dataSeries, setdataSeries] = useState<any>([\n    {\n      name: title, //will be displayed on the y-axis\n      data: data,\n    },\n  ]);\n\n  const [subTitles, setsubTitles] = useState<any>({\n    title: title,\n    subTitle: title,\n  });\n  const [popupPosition, setPopupPosition] = useState(null);\n  const barRef = useRef(null);\n  const [popupData, setPopupData] = useState(barChartPopoverdata);\n  const [option, setOption] = useState<any>({\n    legend: {\n      show: false,\n    },\n    chart: {\n      events: {\n        dataPointSelection: function (event, chartContext, config) {\n          const dataPointIndex = config.dataPointIndex;\n          const selectedXValue = option.xaxis.categories[dataPointIndex];\n          eachBarClick(selectedXValue, event);\n        },\n      },\n    },\n    xaxis: {\n      categories: xAxis,\n    },\n    title: {\n      text: title,\n      style: {\n        fontSize: \"14px\",\n        fontWeight: \"bold\",\n        fontFamily: \"Bukra\",\n        color: \"black\",\n      },\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: 50,\n        colors: {\n          ranges: [\n            {\n              from: -100,\n              to: 0,\n              color: \"#b70849\",\n            },\n            {\n              from: 0,\n              to: 100,\n              color: \"#1034a6\",\n            },\n          ],\n        },\n      },\n    },\n    // dataLabels: {\n    //   enabled: true,\n    //   formatter: function (val, opts) {\n    //     const isPositive = val >= 0;\n    //     return isPositive && type == \"progress\" ? `+${val}` : val.toString();\n    //   },\n    // },\n    yaxis: {\n      forceNiceScale: true,\n      labels: {\n        formatter: function (val) {\n          return Math.round(val);\n        },\n      },\n    },\n  });\n\n  useEffect(() => {\n    setPopupData(barChartPopoverdata);\n    setsubTitles((prevState) => ({ ...prevState, subTitle: title }));\n    if (data) {\n      setdataSeries([\n        {\n          name: name,\n          data: data,\n        },\n      ]);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    setsubTitles((prevState) => ({ ...prevState, subTitle: title }));\n  }, []);\n\n  useEffect(() => {\n    //setdataSeries(data);\n    //if (data) {\n    //const categories = data.map((item) => item);\n    //setsubTitles(subTitle);\n    setsubTitles((prevState) => ({ ...prevState, subTitle: title }));\n    setPopupData(barChartPopoverdata);\n    if (data) {\n      setdataSeries([\n        {\n          name: name,\n          data: data,\n        },\n      ]);\n    }\n    setOption((prevState) => ({\n      ...prevState,\n      title: {\n        text: title,\n      },\n      xaxis: {\n        categories: xAxis,\n      },\n      chart: {\n        events: {\n          dataPointSelection: handleDataPointSelection,\n        },\n      },\n    }));\n\n    const handleDataPointSelection = (event, chartContext, config) => {\n      const dataPointIndex = config.dataPointIndex;\n      const selectedXValue = xAxis[dataPointIndex];\n      eachBarClick(selectedXValue, event);\n    };\n\n    // setOption((prevOption) => ({\n    //   ...prevOption,\n    //   chart: {\n    //     events: {\n    //       dataPointSelection: handleDataPointSelection,\n    //     },\n    //   },\n    // }));\n  }, [xAxis]);\n\n  const xLabelToIndexMap = {};\n  option.xaxis.categories.forEach((label, index) => {\n    xLabelToIndexMap[label] = index;\n  });\n\n  const eachBarClick = (value, event) => {\n    const barPosition = {\n      x: event.clientX - 125,\n      y: 200, //event.clientY,\n    };\n    eachBarClicked ? eachBarClicked(value, title) : console.log(\"noo function\");\n    setPopupPosition(barPosition);\n  };\n\n  //this is to add class name to x-xis label\n  const wrapXAxisLabels = (chartContext, { axis, tick, text }) => {\n    if (axis === \"xaxis\") {\n      tick.classList.add(\"apexchart-xaxis-label\");\n    }\n  };\n\n  const handleClosePopover = () => {\n    setPopupData(null); // Clear the popover data to close it\n    closePopover();\n  };\n\n  return (\n    <div className=\"bar-chart\">\n      {/* onClick={() => setPopupData(null)} */}\n      <Chart\n        options={option}\n        series={dataSeries}\n        type=\"bar\"\n        height={350}\n        width={width ? 550 : \"100%\"}\n        events={{\n          dataPointSelection: wrapXAxisLabels, // Apply the class to x-axis labels\n        }}\n      />\n      {barChartPopoverdata && (\n        <Popover\n          tablePopupData={barChartPopoverdata}\n          popoverPosition={popupPosition}\n          onClose={handleClosePopover}\n        />\n      )}\n    </div>\n  );\n};\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/test/ParentComponent.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/test/Component2.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/test/Component1.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab3/Chart3.tsx",["503","504","505","506","507","508"],[],"import React, { useEffect, useState } from \"react\";\nimport { BarChart } from \"../../../components/Graph/barChart/BarChart\";\nimport Component1 from \"../../../components/test/Component1\";\nimport { getHttp } from \"../../../service/APIRequest\";\n\ninterface Chart3Props {\n  startDate: any;\n  endDate: any;\n  selectedEntityList?: any;\n  entityList?: any;\n  //fetchChart3Data?: any;\n}\nexport const Chart3: React.FC<Chart3Props> = ({\n  // startDate,\n  // endDate,\n  selectedEntityList,\n  entityList,\n  // fetchChart3Data,\n}) => {\n  const [chartData, setchartData] = useState<any>();\n  const [xAxis, setxAxis] = useState([]);\n  // const [dateRangeProps, setdateRangeProps] = useState({\n  //   fromDate: startDate,\n  //   toDate: endDate,\n  // });\n\n  const [selectedEntities, setselectedEntities] =\n    useState<any>(selectedEntityList);\n  const [allEntityList, setallEntityList] = useState(entityList);\n\n  const [title, setTitle] = useState(selectedEntityList.map((item) => item));\n\n  useEffect(() => {\n    setallEntityList(allEntityList);\n    setselectedEntities(selectedEntityList);\n    getScoreOfSelectedEntity(selectedEntityList);\n    setTitle(selectedEntityList.map((item) => item));\n  }, [selectedEntityList]);\n\n  useEffect(() => {\n    getScoreOfSelectedEntity();\n  }, []);\n\n  // useEffect(() => {\n  //   const today = new Date();\n  //   const defaultEndDate = today.toISOString().slice(0, 10);\n  //   const oneYearAgo = new Date(\n  //     today.getFullYear() - 1,\n  //     today.getMonth(),\n  //     today.getDate()\n  //   );\n  //   const defaultStartDate = oneYearAgo.toISOString().slice(0, 10);\n  //   setTimeout(() => {\n  //     setStartDate(defaultStartDate);\n  //     setEndDate(defaultEndDate);\n  //   }, 110);\n  // }, []);\n\n  const getScoreOfSelectedEntity = async (selectedEntities?) => {\n    var entityLists = selectedEntities;\n    if (entityLists?.length == 0) {\n      entityLists = entityList?.map((item) => item.label);\n    }\n    if (entityList && entityList.length > 0) {\n      const response = await getHttp(\"skills/skill-ranks\", {\n        entityNames: entityLists.join(\",\"),\n      });\n      await drawChart(response);\n      //fetchChart3Data(response);\n    }\n  };\n\n  async function drawChart(responseData?) {\n    // var dataOfChart = [\n    //   {\n    //     name: \"Improvement over last year\", //chartData?.map((company) => company.entityName),\n    //     data: responseData?.map((company) => company.avg_score_diff),\n    //   },\n    // ];\n    var xAxisdata = responseData?.map((company) => company.year);\n    setxAxis(xAxisdata);\n    setchartData(responseData?.map((company) => company.score));\n  }\n\n  return (\n    <div className=\"chart-bg entity-list\">\n      {selectedEntities?.length == entityList?.length\n        ? \"All\"\n        : selectedEntities.map((item) => item + \", \")}\n      <BarChart\n        data={chartData}\n        xAxis={xAxis}\n        title={\"Analysis of score for last years\"}\n        name=\"Improvement over last year\"\n        width={550}\n      />\n    </div>\n  );\n};\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab3/SummaryTable.tsx",["509","510"],[],"import React, { useEffect, useState } from \"react\";\nimport { getHttp } from \"../../../service/APIRequest\";\n\ninterface SummaryTableInterface {\n  entityList;\n}\nexport const SummaryTable: React.FC<SummaryTableInterface> = ({\n  entityList,\n}) => {\n  const [summaryData, setsummaryData] = useState([]);\n  // const [allEntityList, setallEntityList] = useState([]);\n  const [allEntityList, setallEntityList] = useState(entityList);\n\n  useEffect(() => {\n    // setsummaryData(data);\n    setallEntityList(entityList);\n    getRankBasedonLatestSCore();\n  }, [entityList]);\n\n  useEffect(() => {}, []);\n\n  const getRankBasedonLatestSCore = () => {\n    if (entityList?.length > 0) {\n      var entityLists = entityList?.map((item) => item.label);\n      getHttp(\"skills/latestScore\", {\n        entityNames: entityLists.join(\",\"),\n      })\n        .then((response) => {\n          // Check if the original array has less than 10 elements\n          if (response.length <= 10) {\n            // If it does, copy the whole array to the new array\n            setsummaryData(response.map((item, index) => ({ ...item, index })));\n\n            //setsummaryData(response);\n          } else {\n            // If it has 10 or more elements, copy the first 5 and last 5 elements to the new array\n            const slicedResponse = [\n              ...response\n                .slice(0, 5)\n                .map((item, index) => ({ ...item, index })),\n              ...response.slice(-5).map((item, index) => ({\n                ...item,\n                index: response.length - 5 + index,\n              })),\n            ];\n            setsummaryData(slicedResponse);\n            //setsummaryData([...response.slice(0, 5), ...response.slice(-5)]);\n          }\n          // setsummaryData(response);\n          //fetchChart4Data(response);\n          // handle success\n        })\n        .catch((error) => {\n          console.log(error);\n          // handle error\n        });\n    }\n  };\n\n  return (\n    <div>\n      <table className=\"table\">\n        <thead>\n          <tr className=\"table-heading\">\n            <th className=\"each-column-border\">Rank </th>\n            <th className=\"each-column-border\">Entity Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          {summaryData?.map((item, index) => (\n            <React.Fragment key={index}>\n              {index === 5 && (\n                <tr className=\"table-heading\">\n                  <th colSpan={2} className=\"each-column-border\">\n                    Last five\n                  </th>\n                </tr>\n              )}\n              <tr>\n                <td className=\"each-column-border\">{item.index + 1}</td>\n                <td className=\"each-column-border\">{item.companyName}</td>\n              </tr>\n            </React.Fragment>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab3/Chart4.tsx",["511","512","513"],[],"import React, { useEffect, useState } from \"react\";\nimport { BarChart } from \"../../../components/Graph/barChart/BarChart\";\nimport { getHttp } from \"../../../service/APIRequest\";\n\ninterface Chart4Props {\n  selectedEntityList?: any;\n  entityList?: any;\n  fetchChart4Data?: any;\n}\nexport const Chart4: React.FC<Chart4Props> = ({\n  selectedEntityList,\n  entityList,\n  fetchChart4Data,\n}) => {\n  const [chartData, setchartData] = useState<any>();\n  const [xAxis, setxAxis] = useState([]);\n  const [selectedEntities, setselectedEntities] = useState(selectedEntityList);\n  const [allEntityList, setallEntityList] = useState(entityList);\n\n  useEffect(() => {\n    setallEntityList(allEntityList);\n    setselectedEntities(selectedEntityList);\n    getScoreOfEntityLatestDate(selectedEntityList);\n  }, [selectedEntityList]);\n\n  const getScoreOfEntityLatestDate = async (selectedEntities?) => {\n    var entityLists = selectedEntities;\n    if (entityLists?.length == 0) {\n      entityLists = entityList?.map((item) => item.label);\n    }\n    if (entityLists?.length > 0) {\n      getHttp(\"skills/latestScore\", {\n        entityNames: entityLists?.join(\",\"),\n      })\n        .then((response) => {\n          drawChart(response);\n          fetchChart4Data(response);\n\n          // handle success\n        })\n        .catch((error) => {\n          console.log(error);\n          // handle error\n        });\n    }\n  };\n\n  const drawChart = (responseData?) => {\n    var xAxisdata = responseData?.map((company) => company.companyName);\n    setxAxis(xAxisdata);\n    setchartData(\n      responseData?.map((company) => company.monthlyAverages[0].averageScore)\n    );\n  };\n\n  return (\n    <div className=\"chart-bg\">\n      <BarChart\n        data={chartData}\n        xAxis={xAxis}\n        title={\"Latest Score\"}\n        name=\"Latest Score\"\n        width={550}\n        //yAxis={\"Latest score of \" + responseData[0].monthlyAverages[0].month}\n      />\n    </div>\n  );\n};\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/spinner/LoadingSpinner.tsx",["514","515","516"],[],"import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport store from \"../../redux/Store\";\n\nimport \"./spinner.css\";\n\nexport const LoadingSpinner = () => {\n  // useEffect(() => {\n  //   // Subscribe to state changes in the Redux store\n  //   const unsubscribe = store.subscribe(() => {\n  //     console.log(unsubscribe);\n  //     // Get the updated state from the Redux store\n  //     const state = store.getState();\n  //     // Do something here with the updated state\n  //   });\n\n  //   // Unsubscribe from state changes when the component is unmounted\n  //   return () => {\n  //     unsubscribe();\n  //   };\n  // }, []);\n\n  //   const isLoading = useSelector((state) => state.);\n  const isLoading = useSelector((state: any) => state.loader.isLoading);\n  // console.log(isLoading);\n\n  return (\n    <div className=\"spinner-container\">\n      <div className=\"spinner-container\">\n        <div className=\"loading-spinner\"></div>\n      </div>\n    </div>\n  );\n};\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/categoryDetails/CategoryDetails.tsx",["517","518","519","520","521","522","523","524","525","526","527","528"],[],"import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { BarChart } from \"../../components/Graph/barChart/BarChart\";\nimport Doughnut from \"../../components/Graph/donutChart/Doughnut\";\nimport TestChart from \"../../components/Graph/TestChart\";\nimport { Popover } from \"../../components/popup/Popover\";\nimport { SubHeader } from \"../../components/subHeader/SubHeader\";\nimport { getHttp } from \"../../service/APIRequest\";\nimport \"./CategoryDetails.css\";\n\ninterface categoryDetailsProps {\n  details1?: any;\n  backButtonClicked?: any;\n}\n\nconst CategoryDetails: React.FC<categoryDetailsProps> = ({\n  details1,\n  backButtonClicked,\n}) => {\n  const [subCategoryList, setSubCategoryList] = useState([]);\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [chartData, setchartData] = useState<any>();\n  const [xAxis, setxAxis] = useState([]);\n  const [barchartTitile, setbarchartTitile] = useState(null);\n  const [popupData, setPopupData] = useState(null);\n\n  const location = useLocation();\n  const [details, setdetails] = useState<any>(location.state);\n  const [tablePopupData, setTablePopupData] = useState(null);\n  const [popupPosition, setPopupPosition] = useState(null);\n\n  var levelArray = new Array(9).fill(0);\n\n  var userDeatilsString = sessionStorage.getItem(\"userDetails\");\n  var userDetailsObj = JSON.parse(userDeatilsString); //userDetailsObj.entity\n\n  useEffect(() => {\n    fetchCatagoryList(details.id, userDetailsObj.entity);\n  }, []);\n\n  const fetchCatagoryList = async (param?, entityName = null) => {\n    const endpoint = entityName\n      ? `categories/${details.id}/subcategories?entityName=${entityName}`\n      : `categories/${details.id}/subcategories`;\n    const response = getHttp(endpoint)\n      .then((response) => {\n        console.log(response);\n\n        setSubCategoryList(response); // handle success\n        setSelectedRow(0);\n        clickedOnSubcategory(response[0], 0, userDetailsObj.entity);\n      })\n      .catch((error) => {\n        console.log(error);\n        // handle error\n      });\n  };\n\n  // const clickedOnSubcategory = async (item, index) => {\n  //   item.count > 0 ? setSelectedRow(index) : setSelectedRow(index);\n  //   setbarchartTitile(item.category);\n  //   const response = await getHttp(\n  //     \"categories/\" + details.id + \"/subcategory/\" + item.id\n  //   )\n  //     .then((response) => {\n  //       //console.log(response);\n  //       setbarchartTitile(item.category);\n  //       drawChart(response, item.category);\n\n  //       // handle success\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //       // handle error\n  //     });\n  // };\n\n  const clickedOnSubcategory = async (item, index, entityName) => {\n    item.count > 0 ? setSelectedRow(index) : setSelectedRow(index);\n    setbarchartTitile(item.category);\n\n    let url = \"categories/\" + details.id + \"/subcategory/\" + item.id;\n    if (entityName) {\n      url += `?entityName=${entityName}`;\n    }\n\n    const response = await getHttp(url)\n      .then((response) => {\n        // Handle success\n        setbarchartTitile(item.category);\n        drawChart(response, item.category);\n      })\n      .catch((error) => {\n        console.error(error);\n        // Handle error\n      });\n  };\n\n  const drawChart = (responseData?, subcat?) => {\n    setbarchartTitile(subcat);\n    var xAxisdata = responseData?.map((item) => item.entityName);\n    setxAxis(xAxisdata);\n    setchartData(responseData?.map((item) => item.employeeNumber));\n  };\n\n  const findEmployeesByLevel = (level, subcat, event) => {\n    const barPosition = {\n      x: event.pageX,\n      y: event.pageY,\n    };\n    var response;\n    if (level) {\n      response = getHttp(\"employeeByLevelAndSubcat\", {\n        level: level,\n        subcat: subcat,\n        entityName: userDetailsObj?.entity,\n      })\n        .then((response) => {\n          setTablePopupData(response);\n\n          setPopupPosition(barPosition);\n          //setPopupPosition({ popupX: popupX, popupY: popupY });\n        })\n        .catch((error) => {\n          console.log(error);\n          // handle error\n        });\n    } else {\n      response = getHttp(\"employeeBySubcat\", {\n        subcat: subcat,\n        entityName: userDetailsObj?.entity,\n      })\n        .then((response) => {\n          setTablePopupData(response);\n\n          setPopupPosition(barPosition);\n          //setPopupPosition({ popupX: popupX, popupY: popupY });\n        })\n        .catch((error) => {\n          console.log(error);\n          // handle error\n        });\n    }\n    // const response = getHttp(\"employeeByLevelAndSubcat\", {\n    //   level: level,\n    //   subcat: subcat,\n    // })\n    //   .then((response) => {\n    //     setTablePopupData(response);\n\n    //     setPopupPosition(barPosition);\n    //     //setPopupPosition({ popupX: popupX, popupY: popupY });\n    //   })\n    //   .catch((error) => {\n    //     console.log(error);\n    //     // handle error\n    //   });\n  };\n\n  const eachBarClick = (value, subTitle) => {\n    setPopupData(null);\n    const response = getHttp(\"employeeByEntityAndSubcat\", {\n      entity: value,\n      subcat: subTitle,\n    })\n      .then((response) => {\n        setPopupData(response);\n        //setPopupPosition({ popupX: popupX, popupY: popupY });\n      })\n      .catch((error) => {\n        console.log(error);\n        // handle error\n      });\n  };\n\n  const handleClosePopover = () => {\n    setTablePopupData(null); // Clear the popover data to close it\n    setPopupData(null);\n  };\n\n  const popoverContainer = document.querySelector(\".popover-container\");\n  const popoverArrow = document.querySelector(\".popover-arrow\");\n  const targetElement = document.querySelector(\".target-element\");\n\n  return (\n    <div className=\"top-padding-sub content-top-margin\">\n      <SubHeader pageHeadding={details?.name.category} showBreadcrumbs={true} />\n      {/* <div className=\"main-heading\">{details?.name.category}</div> */}\n      {details?.name.count > 0 && (\n        <div className=\"chart-flex\">\n          <Doughnut\n            heading={\"Percentage of resources per subcategory\"}\n            details={subCategoryList}\n            showLegend={false}\n          />\n        </div>\n      )}\n      {details?.name.count > 0 && (\n        <div className=\"list-container\">\n          <table className=\"table\">\n            <thead>\n              <tr className=\"table-heading\">\n                <th className=\"each-column-border main-head\">\n                  Subcategory name\n                </th>\n\n                {levelArray.map((item, index) => (\n                  <th key={index} className=\"each-column-border main-head\">\n                    Level {index + 1}\n                  </th>\n                ))}\n                <th className=\"each-column-border main-head\">\n                  # of employees( {subCategoryList[0]?.grantTotalEmp})\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {subCategoryList?.map((item, index) => (\n                <tr\n                  key={index}\n                  className={[\n                    // index % 2 === 0 ? \"even-row\" : \"odd-row\",\n                    selectedRow === index ? \"highlight\" : \"\",\n                  ].join(\" \")}\n                  onClick={() =>\n                    clickedOnSubcategory(item, index, userDetailsObj.entity)\n                  }\n                >\n                  <td className=\"each-column-border\">{item.category}</td>\n                  {item.levelCounts.map((count, num) => (\n                    <td\n                      onClick={(e) =>\n                        findEmployeesByLevel(num + 1, item.category, e)\n                      }\n                      key={num}\n                      className={`each-column-border popup-position ${\n                        count > 0 ? \"underline\" : \"\"\n                      }`}\n                    >\n                      {count == 0 ? \"\" : count}\n                    </td>\n                  ))}\n\n                  <td\n                    onClick={(e) =>\n                      findEmployeesByLevel(null, item.category, e)\n                    }\n                    className={`each-column-border popup-position ${\n                      item.count > 0 ? \"underline\" : \"\"\n                    }`}\n                  >\n                    {item.count == 0 ? \"\" : item.count}\n                  </td>\n                </tr>\n              ))}\n              {tablePopupData && tablePopupData.length > 0 && (\n                <Popover\n                  tablePopupData={tablePopupData}\n                  popoverPosition={popupPosition}\n                  onClose={handleClosePopover}\n                />\n              )}\n            </tbody>\n          </table>\n        </div>\n      )}\n      {/* <div className=\"content1\">\n        <Doughnut details={subCategoryList} heading=\"Dubai Skills %\" />\n      </div> */}\n      {chartData && xAxis && (\n        <div className=\"barChart\">\n          {/* <DonutChart\n              //details={chartDetails.data_analytics}\n              heading={props.entityName + \" skills\"}\n              details={roleCount}\n            /> */}\n          {/* <Doughnut\n          heading={\" skills (Number of employees in each category)\"}\n          details={subCategoryList}\n        /> */}\n          <BarChart\n            data={chartData}\n            xAxis={xAxis}\n            // title={\"Employee and entity details of  - \" + barchartTitile}\n            title={barchartTitile}\n            name=\"Number of employees\"\n            eachBarClicked={eachBarClick}\n            barChartPopoverdata={popupData}\n            subTitle={barchartTitile}\n            closePopover={handleClosePopover}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CategoryDetails;\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/categoryList/CategoryList.tsx",["529","530","531","532","533","534","535","536","537","538"],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/dataFileUpload/FileUpload.tsx",["539","540","541","542","543","544"],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/Graph/jobChart/JobChart.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/compass/Table1.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/Tabs/tab4/Tab4.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/popup/TrainingPopup.tsx",["545"],[],"import React from \"react\";\nimport \"./PopupModal.css\";\n\nconst TrainingPopup = (props) => {\n  return (\n    <div className=\"popup-overlay\" onClick={props.closeModal}>\n      <div className=\"modal\">\n        <button className=\"close\" onClick={props.closeModal}>\n          &times;\n        </button>\n        <div className=\"header\"> {props.employeDetails.name} </div>\n\n        <div className=\"popup-skill-container\">\n          <div className=\"skill-full-width\">\n            <div className=\"skill-items\">\n              <div className=\"first-item skill-heading\">Course</div>\n              <div className=\"skill-item-container\">\n                {props.course.length > 0 &&\n                  props.course?.map((item, index) => (\n                    <div className=\"items\" key={index}>\n                      <div\n                      // className={\n                      //   item.enrollmentStatus == \"enrolled\"\n                      //     ? \"green skill-first-item\"\n                      //     : \"red skill-first-item\"\n                      // }\n                      >\n                        {item.name} - {item.enrollmentDate}{\" \"}\n                        {item.enrollmentStatus}\n                      </div>\n                    </div>\n                  ))}\n                {props.course.length == 0 && <div>No items to display</div>}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TrainingPopup;\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/button/Button.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/score/Score.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/header/Header.tsx",["546"],[],"import React, { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport SlidingMenu from \"../slidingMenu/SlidingMenu\";\nimport \"./Header.css\";\n\nexport const Header = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [pathName, setpathName] = useState(location.pathname);\n  var userDeatilsString = sessionStorage.getItem(\"userDetails\");\n  var userDetailsObj = JSON.parse(userDeatilsString); //userDetailsObj.entity\n\n  useEffect(() => {\n    setpathName(location.pathname);\n  }, [location.pathname]);\n\n  const handleMenuToggle = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  const goToHome = () => {\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"site-header\">\n      <div className=\"logo\" onClick={goToHome}>\n        <img\n          className=\"svg-image\"\n          src={require(\"../../assets/test.svg\").default}\n          alt=\"test\"\n          // width=\"295px\"\n          // height=\"295px\"\n        />\n      </div>\n      <div className=\"header\" onClick={goToHome}>\n        Qudraat index\n      </div>\n      {pathName == \"/login\" ? (\n        <></>\n      ) : (\n        <div className=\"hamburger-menu-container left-menu\">\n          <div className=\"user-details\">Hi, {userDetailsObj?.name}</div>\n          <div\n            className={`hamburger-menu ${isMenuOpen ? \"open\" : \"\"}`}\n            onClick={handleMenuToggle}\n          >\n            <span className=\"hamburger-line line-1\"></span>\n            <span className=\"hamburger-line line-2\"></span>\n            <span className=\"hamburger-line line-3\"></span>\n          </div>\n          {/* Sliding Menu */}\n          <SlidingMenu isOpen={isMenuOpen} onClose={handleMenuToggle} />\n        </div>\n      )}\n    </div>\n  );\n};\n",[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/slidingMenu/SlidingMenu.tsx",["547","548","549","550","551"],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/breadcrumbs/Breadcrumbs.tsx",["552","553","554"],[],"import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\n\nimport \"./Breadcrumbs.css\";\n\nconst Breadcrumbs = ({ paths }) => {\n  const location = useLocation();\n  const history = useHistory();\n  const [breadcrumbNames, setBreadcrumbNames] = useState([]);\n\n  useEffect(() => {\n    const names = getBreadcrumbNames(location.pathname);\n    setBreadcrumbNames(names);\n  }, [location]);\n\n  const getBreadcrumbNames = (pathname) => {\n    const segments = pathname.split(\"/\").filter((segment) => segment !== \"\");\n    return segments;\n\n    // Return the breadcrumb names based on the segments\n    // if (segments.length === 0) {\n    //   return [\"\"];\n    // } else {\n    //   // Get the last segment as the current breadcrumb name\n    //   const lastSegment = segments[segments.length - 1];\n    //   return [\n    //     <Link to=\"/\">\n    //       <img\n    //         className=\"svg-image1\"\n    //         src={require(\"../../assets/home.svg\").default}\n    //         alt=\"home\"\n    //         width=\"19px\"\n    //         height=\"19px\"\n    //       />\n    //     </Link>,\n    //     segments,\n    //   ];\n    // }\n  };\n\n  // const handleListItemClick = (itemName) => {\n  //   // Update the last breadcrumb name and navigate to the corresponding page\n  //   const newPathname = `${location.pathname}/${itemName}`;\n  //   const names = getBreadcrumbNames(newPathname);\n  //   setBreadcrumbNames(names);\n  //   history.push(newPathname);\n\n  // };\n\n  const customNames = {\n    entityDetails: \"entities index\",\n    categoryList: \"workforce index\",\n    // Add more custom names as needed\n  };\n\n  const capitalizeFirstLetter = (string) => {\n    return string\n      .replace(/([A-Z])/g, \" $1\") // Insert space before capital letters\n      .replace(/([A-Z])/g, (match) => match.toLowerCase()) // Convert capital letters to lowercase\n      .replace(/^\\w/, (c) => c.toUpperCase()); // Capitalize the first letter\n  };\n\n  return (\n    <nav>\n      <div className=\"breadcrumbs-container\">\n        <Link to=\"/\">\n          <img\n            className=\"svg-image1\"\n            src={require(\"../../assets/home.svg\").default}\n            alt=\"home\"\n            width=\"19px\"\n            height=\"19px\"\n          />\n        </Link>\n        {breadcrumbNames.map((path, index) => (\n          <React.Fragment key={index}>\n            {breadcrumbNames.length > 1 ? <span> / </span> : \"\"}\n            {breadcrumbNames.length == 1 ? (\n              <></>\n            ) : index < breadcrumbNames.length - 1 ? (\n              <Link\n                className=\"bread-font\"\n                to={`/${breadcrumbNames.slice(0, index + 1).join(\"/\")}`}\n              >\n                {capitalizeFirstLetter(path)}\n              </Link>\n            ) : (\n              <span className=\"bread-font\">{capitalizeFirstLetter(path)}</span>\n            )}\n          </React.Fragment>\n        ))}\n      </div>\n    </nav>\n    // <nav>\n    //   <div className=\"breadcrumbs-container\">\n    //     <Link to=\"/\">\n    //       <img\n    //         className=\"svg-image1\"\n    //         src={require(\"../../assets/home.svg\").default}\n    //         alt=\"home\"\n    //         width=\"19px\"\n    //         height=\"19px\"\n    //       />\n    //     </Link>\n    //     {paths.map((path, index) => (\n    //       <React.Fragment key={index}>\n    //         <span> / </span>\n    //         {index < paths.length - 1 ? (\n    //           <Link to={path.url}>{path.label}</Link>\n    //         ) : (\n    //           <span>{path.label}</span>\n    //         )}\n    //       </React.Fragment>\n    //     ))}\n    //   </div>\n    // </nav>\n\n    // <nav>\n    //   <div className=\"breadcrumbs-container\">\n    //     {breadcrumbNames.map((name, index) => (\n    //       <div key={index}>\n    //         {index !== breadcrumbNames.length - 1 ? (\n    //           <Link to={`${breadcrumbNames.slice(0, index + 1).join(\"/\")}`}>\n    //             {name}\n    //           </Link>\n    //         ) : (\n    //           <span>{name.length != 0 ? \"/\" + name : \"\"}</span>\n    //         )}\n    //       </div>\n    //     ))}\n    //   </div>\n    // </nav>\n  );\n};\n\nexport default Breadcrumbs;\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/subHeader/SubHeader.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/accordion/Accordion.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/popup/Popover.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/downloadExcel/DownloadExcel.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/login/Login.tsx",["555"],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/login/UserLogin.tsx",["556"],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/redux/features/errorSlice.tsx",["557","558"],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/redux/actions/Actions.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/errorComponent/ErrorComponent.tsx",["559","560","561"],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/errorBoundary/ErrorBoundary.tsx",["562"],[],"import React, { Component, ErrorInfo, ReactNode } from \"react\";\nimport { Header } from \"../../components/header/Header\";\nimport \"./ErrorBoundary.css\";\n\ninterface ErrorBoundaryProps {\n  children: ReactNode;\n}\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n}\n\nexport default class ErrorBoundary extends Component<\n  ErrorBoundaryProps,\n  ErrorBoundaryState\n> {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    // Log error information here, if needed\n    console.error(error, errorInfo);\n  }\n\n  static getDerivedStateFromError = (error) => {\n    return { hasError: true };\n  };\n  render() {\n    if (this.state.hasError) {\n      // Fallback UI when there's an error\n      return (\n        <div>\n          <div className=\"boundaryContainer\">Something went wrong.</div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/createUser/UserCreation.tsx",["563","564","565"],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/userList/UserList.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/popup/Popup.tsx",[],[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/service/APIRequest1.tsx",["566","567","568","569"],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/service/APIRequest.tsx",["570","571","572","573"],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/entityDetails/Todelete.tsx",["574","575","576","577","578","579","580","581","582"],[],"import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Breadcrumbs from \"../../components/breadcrumbs/Breadcrumbs\";\n\nimport Doughnut from \"../../components/Graph/donutChart/Doughnut\";\nimport RadialBarChart from \"../../components/Graph/donutChart/RadialBarChart\";\nimport PopupModal from \"../../components/popup/PopupModal\";\nimport TrainingPopup from \"../../components/popup/TrainingPopup\";\nimport Score from \"../../components/score/Score\";\nimport { SubHeader } from \"../../components/subHeader/SubHeader\";\nimport { getHttp } from \"../../service/APIRequest\";\nimport { getSkillPercentage } from \"../../service/Service\";\nimport \"./EntityDetails.css\";\n\nexport const Todelete = ({ entity1, backButtonClicked }, props) => {\n  const location = useLocation();\n  const [entity, setentity] = useState<any>(location?.state);\n  const [entityDetails, setentityDetails] = useState<any>();\n  const [roleCount, setroleCount] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [thisEmployeeDetails, setthisEmployeeDetails] = useState();\n  const [entityCatSkillSet, setentityCatSkillSet] = useState([]);\n  const [categoryList, setcategoryList] = useState([]);\n  const [subCategoryList, setsubCategoryList] = useState([]);\n  const [trainingDetails, setTrainingDetails] = useState({\n    showPopup: false,\n    details: [],\n  });\n  const [isUp, setIsUp] = useState(true);\n\n  const [isScoreUp, setScoreIsUp] = useState(true);\n\n  const handleSortClick = (name, order) => {\n    if (name == \"name\") {\n      setIsUp(!isUp);\n    } else {\n      setScoreIsUp(!isScoreUp);\n    }\n    fetchEntityDetails(name, order);\n  };\n\n  function handleClick() {\n    setShowPopup(!showPopup);\n  }\n\n  useEffect(() => {\n    setcategoryList(categoryList);\n  }, [categoryList]);\n\n  const getAllCategory = () => {\n    //main-categories/getAll\n    const response = getHttp(\"main-categories/getAll\")\n      .then((response) => {\n        setcategoryList(response);\n      })\n      .catch((error) => {\n        console.log(error);\n        // handle error\n      });\n  };\n\n  // const getSubCategoryList = async (id) => {\n  //   //categories/1/subcategories\n  //   const response = await getHttp(\"categories/\" + id + \"/subcategories\");\n  //   setsubCategoryList(response);\n  // };\n\n  useEffect(() => {\n    fetchEntityDetails(\"name\", \"asc\");\n  }, []);\n\n  async function fetchEntityDetails(item?, order?) {\n    const response = await getHttp(\"employees/\" + entity.name, {\n      name: item,\n      filter: order,\n    });\n    var finalResult = [];\n\n    fetchRoleCountsInEntity();\n    for (var i = 0; i < response.length; i++) {\n      response[i].skillToTalPercentage = getSkillPercentage(response[i].skills);\n      finalResult.push(response[i]);\n    }\n\n    await setentityDetails(finalResult);\n\n    getAllCategory();\n    //await getColumnHeading(response);\n  }\n\n  const fetchRoleCountsInEntity = async () => {\n    const response = await getHttp(\"entity/count-by-category/\" + entity.name);\n    await setroleCount(response);\n    fetchSkillByCatInEntity();\n  };\n\n  const fetchSkillByCatInEntity = async () => {\n    const response = await getHttp(\"skillByCatInEntity?entity=\" + entity.name);\n    setentityCatSkillSet(response);\n\n    await settingEntityCatSkillSet(response);\n  };\n\n  const settingEntityCatSkillSet = async (data) => {\n    setentityCatSkillSet(data);\n  };\n\n  const showThisEmployeeDetails = (employeeDetails) => {\n    setShowPopup(true);\n    setthisEmployeeDetails(employeeDetails);\n  };\n\n  // const traininigNeedOfEmployee = (employeeDetails) => {\n  //   setTrainingDetails({ ...trainingDetails, showPopup: true });\n  //   setthisEmployeeDetails(employeeDetails);\n  //   //employeeNumber\n  //   getHttp(\"trainingNeeded\", {\n  //     employeeNumber: employeeDetails.employeeNumber,\n  //   })\n  //     .then((response) => {\n  //       console.log(response);\n  //       setTrainingDetails({ showPopup: true, details: response });\n  //       // handle success\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //       //setresponseText(error);\n  //       // handle error\n  //     });\n  // };\n\n  //test\n\n  // const options2 = [\n  //   { value: \"option4\", label: \"Option 4\" },\n  //   { value: \"option5\", label: \"Option 5\" },\n  //   { value: \"option6\", label: \"Option 6\" },\n  // ];\n\n  // const options3 = [\n  //   { value: \"option7\", label: \"Option 7\" },\n  //   { value: \"option8\", label: \"Option 8\" },\n  //   { value: \"option9\", label: \"Option 9\" },\n  // ];\n\n  // const [value1, setValue1] = useState(null);\n  // const [value2, setValue2] = useState(null);\n  // const [value3, setValue3] = useState(null);\n\n  // const handleOption1Change = (selectedOption) => {\n  //   setValue1(selectedOption);\n  //   getSubCategoryList(selectedOption[0].id);\n  //   setValue2(null);\n  //   setValue3(null);\n  // };\n\n  // const handleOption2Change = (selectedOption) => {\n  //   setValue2(selectedOption);\n  //   setValue3(null);\n  // };\n\n  // const handleOption3Change = (selectedOption) => {\n  //   setValue3(selectedOption);\n  // };\n\n  // const fetchSubCatagoryList = (param?) => {\n  //   const response = getHttp(\"categories/\" + details.id + \"/subcategories\")\n  //     .then((response) => {\n  //       //console.log(response);\n\n  //       setSubCategoryList(response); // handle success\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //       // handle error\n  //     });\n  // };\n  const breadcrumbsPaths = [\n    { label: \"entities index\", url: \"/entitiesIndex\" },\n    { label: `${entity.name}`, url: `\"/entitiesIndex/\"${entity.name}` },\n  ];\n  return (\n    <div className=\"enti-container1 content-top-margin\">\n      {/* <Breadcrumbs1 paths={breadcrumbsPaths} /> */}\n      <SubHeader\n        content={\n          <div className=\"top-head\">\n            <div className=\"score-container\">\n              <Score score={entity.scoreValue} />\n            </div>\n            {/* <div className=\"entity-score-section\">\n            {\" \"}\n            Entity Score - {entity.scoreValue} %\n          </div> */}\n            <div className=\"logo-container\">\n              <img\n                className=\"logo\"\n                //src={require(`../../assets/${entityDetails.logo}`)}\n                src={`data:image/png;base64,${entity.logo}`}\n                alt=\"\"\n                //   width=\"50%\"\n                //   height=\"50%\"\n              />\n            </div>\n            <div className=\"heading main-heading\">{entity.name}</div>\n          </div>\n        }\n        showBreadcrumbs={true}\n        breadCrumbsDetails={breadcrumbsPaths}\n      />\n      {/* <div>\n        <Breadcrumbs />\n      </div> */}\n      {/* <div className=\"heading-cont\"> */}\n      {/* <div className=\"back-button\" onClick={backButtonClicked}>\n          <img\n            src={require(\"../../assets/back.png\")}\n            alt=\"\"\n            width=\"50px\"\n            height=\"50px\"\n          />\n        </div> */}\n      {/* <div className=\"top-head\">\n          <div className=\"score-container\">\n            <Score score={entity.scoreValue} />\n          </div>\n          \n          <div className=\"logo-container\">\n            <img\n              className=\"logo\"\n              //src={require(`../../assets/${entityDetails.logo}`)}\n              src={`data:image/png;base64,${entity.logo}`}\n              alt=\"\"\n              //   width=\"50%\"\n              //   height=\"50%\"\n            />\n          </div>\n          <div className=\"heading main-heading\">{entity.name}</div>\n        </div> */}\n      {/* </div> */}\n      {/* <Breadcrumbs /> */}\n      {/* <div className=\"drop-down-container\">\n        <DropDown\n          isMulti={true}\n          mainList={categoryList}\n          onChangeDropDownItem={handleOption1Change}\n          value={value1}\n          //placeholder=\"Select an option\"\n        />\n        {value1 && (\n          <DropDown\n            isMulti={true}\n            mainList={subCategoryList}\n            onChangeDropDownItem={handleOption2Change}\n            value={value2}\n            // placeholder=\"Select an option\"\n          />\n        )}\n        {value1 && value2 && (\n          <DropDown\n            isMulti={true}\n            mainList={options3}\n            onChangeDropDownItem={handleOption3Change}\n            value={value3}\n            // placeholder=\"Select an option\"\n          />\n        )}\n      </div> */}\n\n      {entityDetails?.length > 0 && (\n        <div className=\"top-section\">\n          <div className=\"donutDiv\">\n            {/* <DonutChart\n              //details={chartDetails.data_analytics}\n              heading={props.entityName + \" skills\"}\n              details={roleCount}\n            /> */}\n            <div className=\"donut-div\">\n              <Doughnut\n                heading={\" Percentage of resource per category\"}\n                details={roleCount}\n                showLegend={true}\n              />\n            </div>\n            {entityCatSkillSet.length != 0 && (\n              <div>\n                <RadialBarChart\n                  details={entityCatSkillSet}\n                  heading={\"Skill score per category \"}\n                />\n              </div>\n            )}\n            {/* <MyChart /> */}\n            {trainingDetails.showPopup && (\n              <TrainingPopup\n                employeDetails={thisEmployeeDetails}\n                closeModal={() =>\n                  setTrainingDetails({ ...trainingDetails, showPopup: false })\n                }\n                course={trainingDetails.details}\n              />\n            )}\n            {showPopup && entityCatSkillSet && (\n              <PopupModal\n                employeDetails={thisEmployeeDetails}\n                closeModal={() => setShowPopup(false)}\n                score={entity.scoreValue}\n              />\n            )}\n          </div>\n        </div>\n      )}\n\n      <div className=\"employeeList\">\n        <div className=\"employee-details-heading\"></div>\n        <table className=\"table\">\n          <thead>\n            <tr className=\"each-column-border table-heading\">\n              <th className=\"each-column-border right-white-border\">\n                {/* <button>\n                  {\" \"}\n                  <i\n                    className={`triangle-icon fas fa-caret-up\n                  }`}\n                  ></i>\n                </button> */}\n                Resource Name{\" \"}\n                <button\n                  className={`up-down-button triangle-button ${\n                    isUp ? \"up\" : \"down\"\n                  }`}\n                  onClick={() =>\n                    handleSortClick(\"name\", !isUp ? \"asc\" : \"desc\")\n                  }\n                >\n                  <i\n                    className={`up-down-button triangle-icon fas ${\n                      isUp ? \"fa-caret-up\" : \"fa-caret-down\"\n                    }`}\n                  ></i>\n                </button>\n              </th>\n              <th className=\"each-column-border right-white-border\">Role</th>\n              <th className=\"each-column-border right-white-border\">\n                Nationality\n              </th>\n              <th className=\"each-column-border right-white-border\">\n                Experience in Yrs\n              </th>\n              {/* <th className=\"each-column-border\">Skill </th> */}\n              <th className=\"each-column-border right-white-border\">\n                Skill Score\n                <button\n                  className={`up-down-button triangle-button ${\n                    isUp ? \"up\" : \"down\"\n                  }`}\n                  onClick={() =>\n                    handleSortClick(\"score\", !isScoreUp ? \"asc\" : \"desc\")\n                  }\n                >\n                  <i\n                    className={`triangle-icon fas ${\n                      isScoreUp ? \"fa-caret-up\" : \"fa-caret-down\"\n                    }`}\n                  ></i>\n                </button>\n              </th>\n              <th className=\"each-column-border\">Details</th>\n              {/* <th className=\"each-column-border\">Training</th> */}\n            </tr>\n          </thead>\n          <tbody>\n            {entityDetails?.map((row, index) => (\n              <tr\n                key={index}\n                // className={index % 2 === 0 ? \"even-row\" : \"odd-row\"}\n              >\n                <td className=\"each-column-border capitalise\">{row.name}</td>\n                <td className=\"each-column-border capitalise\">{row.job}</td>\n                <td className=\"each-column-border capitalise\">\n                  {row?.otherDetails?.nationality}\n                </td>\n                <td className=\"each-column-border capitalise\">\n                  {row.otherDetails?.yearsOfExperience}\n                </td>\n                <td className=\"each-column-border capitalise\">\n                  {row.employeeSkill} %\n                </td>\n\n                {/* <td className=\"each-column-border\">\n                      <ProgressCircle\n                        progress={row.skillToTalPercentage}\n                        size={60}\n                        strokeWidth={3}\n                        circleOneStroke=\"white\"\n                        circleTwoStroke=\"#2b6cb0\"\n                        reverse=\"false\"\n                      />\n                    </td> */}\n                <td\n                  className=\"each-column-border\"\n                  onClick={() => showThisEmployeeDetails(row)}\n                >\n                  {\" \"}\n                  <img\n                    src={require(`../../assets/eye.png`)}\n                    alt=\"\"\n                    width=\"25px\"\n                    //   height=\"50%\"\n                  />\n                </td>\n                {/* <td\n                  className=\"each-column-border\"\n                  onClick={() => traininigNeedOfEmployee(row)}\n                >\n                  View\n                </td> */}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/certification/Certification.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/MultiStepForm/MultiStepForm.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/pages/MultiStepForm/MultiStep.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/EmployeeProfile/Personal.tsx",["583"],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/InputField/InputField.tsx",["584"],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/dropDown/SimpleDropDown.tsx",["585","586"],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/redux/features/userDetailsSlice.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/TextArea/TextArea.tsx",[],[],"/Users/eanas.v/Desktop/DESC-Projects/2023/DB-managmnt-app/dashboard/src/components/EmployeeProfile/CompetancyEvaluation.tsx",["587","588","589","590"],[],{"ruleId":"591","severity":1,"message":"592","line":9,"column":8,"nodeType":"593","messageId":"594","endLine":9,"endColumn":21},{"ruleId":"595","severity":1,"message":"596","line":13,"column":10,"nodeType":"593","messageId":"594","endLine":13,"endColumn":23},{"ruleId":"595","severity":1,"message":"597","line":14,"column":8,"nodeType":"593","messageId":"594","endLine":14,"endColumn":12},{"ruleId":"595","severity":1,"message":"598","line":33,"column":9,"nodeType":"593","messageId":"594","endLine":33,"endColumn":16},{"ruleId":"595","severity":1,"message":"599","line":6,"column":8,"nodeType":"593","messageId":"594","endLine":6,"endColumn":12},{"ruleId":"595","severity":1,"message":"600","line":3,"column":8,"nodeType":"593","messageId":"594","endLine":3,"endColumn":16},{"ruleId":"595","severity":1,"message":"601","line":4,"column":8,"nodeType":"593","messageId":"594","endLine":4,"endColumn":17},{"ruleId":"595","severity":1,"message":"602","line":6,"column":10,"nodeType":"593","messageId":"594","endLine":6,"endColumn":24},{"ruleId":"595","severity":1,"message":"603","line":7,"column":8,"nodeType":"593","messageId":"594","endLine":7,"endColumn":23},{"ruleId":"595","severity":1,"message":"604","line":11,"column":10,"nodeType":"593","messageId":"594","endLine":11,"endColumn":24},{"ruleId":"595","severity":1,"message":"605","line":12,"column":9,"nodeType":"593","messageId":"594","endLine":12,"endColumn":18},{"ruleId":"595","severity":1,"message":"606","line":13,"column":9,"nodeType":"593","messageId":"594","endLine":13,"endColumn":29},{"ruleId":"595","severity":1,"message":"607","line":1,"column":17,"nodeType":"593","messageId":"594","endLine":1,"endColumn":26},{"ruleId":"595","severity":1,"message":"608","line":2,"column":10,"nodeType":"593","messageId":"594","endLine":2,"endColumn":16},{"ruleId":"595","severity":1,"message":"609","line":2,"column":18,"nodeType":"593","messageId":"594","endLine":2,"endColumn":23},{"ruleId":"595","severity":1,"message":"610","line":2,"column":25,"nodeType":"593","messageId":"594","endLine":2,"endColumn":38},{"ruleId":"595","severity":1,"message":"611","line":2,"column":40,"nodeType":"593","messageId":"594","endLine":2,"endColumn":50},{"ruleId":"595","severity":1,"message":"612","line":4,"column":8,"nodeType":"593","messageId":"594","endLine":4,"endColumn":27},{"ruleId":"595","severity":1,"message":"613","line":5,"column":8,"nodeType":"593","messageId":"594","endLine":5,"endColumn":17},{"ruleId":"595","severity":1,"message":"614","line":6,"column":8,"nodeType":"593","messageId":"594","endLine":6,"endColumn":21},{"ruleId":"595","severity":1,"message":"615","line":13,"column":10,"nodeType":"593","messageId":"594","endLine":13,"endColumn":32},{"ruleId":"595","severity":1,"message":"616","line":13,"column":34,"nodeType":"593","messageId":"594","endLine":13,"endColumn":59},{"ruleId":"595","severity":1,"message":"617","line":15,"column":10,"nodeType":"593","messageId":"594","endLine":15,"endColumn":27},{"ruleId":"595","severity":1,"message":"618","line":15,"column":29,"nodeType":"593","messageId":"594","endLine":15,"endColumn":49},{"ruleId":"595","severity":1,"message":"619","line":3,"column":8,"nodeType":"593","messageId":"594","endLine":3,"endColumn":19},{"ruleId":"595","severity":1,"message":"620","line":19,"column":18,"nodeType":"593","messageId":"594","endLine":19,"endColumn":27},{"ruleId":"621","severity":1,"message":"622","line":39,"column":14,"nodeType":"623","messageId":"624","endLine":39,"endColumn":16},{"ruleId":"595","severity":1,"message":"625","line":47,"column":12,"nodeType":"593","messageId":"594","endLine":47,"endColumn":23},{"ruleId":"595","severity":1,"message":"626","line":57,"column":11,"nodeType":"593","messageId":"594","endLine":57,"endColumn":19},{"ruleId":"627","severity":1,"message":"628","line":75,"column":6,"nodeType":"629","endLine":75,"endColumn":8,"suggestions":"630"},{"ruleId":"621","severity":1,"message":"631","line":299,"column":39,"nodeType":"623","messageId":"624","endLine":299,"endColumn":41},{"ruleId":"595","severity":1,"message":"614","line":6,"column":8,"nodeType":"593","messageId":"594","endLine":6,"endColumn":21},{"ruleId":"621","severity":1,"message":"622","line":15,"column":42,"nodeType":"623","messageId":"624","endLine":15,"endColumn":44},{"ruleId":"595","severity":1,"message":"632","line":21,"column":20,"nodeType":"593","messageId":"594","endLine":21,"endColumn":31},{"ruleId":"595","severity":1,"message":"633","line":29,"column":24,"nodeType":"593","messageId":"594","endLine":29,"endColumn":39},{"ruleId":"627","severity":1,"message":"634","line":33,"column":6,"nodeType":"629","endLine":33,"endColumn":8,"suggestions":"635"},{"ruleId":"621","severity":1,"message":"622","line":38,"column":33,"nodeType":"623","messageId":"624","endLine":38,"endColumn":35},{"ruleId":"621","severity":1,"message":"622","line":48,"column":14,"nodeType":"623","messageId":"624","endLine":48,"endColumn":16},{"ruleId":"621","severity":1,"message":"622","line":114,"column":35,"nodeType":"623","messageId":"624","endLine":114,"endColumn":37},{"ruleId":"621","severity":1,"message":"622","line":115,"column":35,"nodeType":"623","messageId":"624","endLine":115,"endColumn":37},{"ruleId":"595","severity":1,"message":"607","line":1,"column":17,"nodeType":"593","messageId":"594","endLine":1,"endColumn":26},{"ruleId":"595","severity":1,"message":"636","line":48,"column":9,"nodeType":"593","messageId":"594","endLine":48,"endColumn":19},{"ruleId":"621","severity":1,"message":"622","line":57,"column":13,"nodeType":"623","messageId":"624","endLine":57,"endColumn":15},{"ruleId":"621","severity":1,"message":"622","line":92,"column":13,"nodeType":"623","messageId":"624","endLine":92,"endColumn":15},{"ruleId":"595","severity":1,"message":"637","line":2,"column":10,"nodeType":"593","messageId":"594","endLine":2,"endColumn":17},{"ruleId":"595","severity":1,"message":"638","line":24,"column":10,"nodeType":"593","messageId":"594","endLine":24,"endColumn":25},{"ruleId":"595","severity":1,"message":"639","line":3,"column":8,"nodeType":"593","messageId":"594","endLine":3,"endColumn":22},{"ruleId":"595","severity":1,"message":"640","line":5,"column":8,"nodeType":"593","messageId":"594","endLine":5,"endColumn":19},{"ruleId":"595","severity":1,"message":"641","line":11,"column":10,"nodeType":"593","messageId":"594","endLine":11,"endColumn":28},{"ruleId":"627","severity":1,"message":"642","line":16,"column":6,"nodeType":"629","endLine":16,"endColumn":8,"suggestions":"643"},{"ruleId":"595","severity":1,"message":"644","line":23,"column":9,"nodeType":"593","messageId":"594","endLine":23,"endColumn":26},{"ruleId":"645","severity":1,"message":"646","line":8,"column":32,"nodeType":"647","messageId":"648","endLine":8,"endColumn":34},{"ruleId":"627","severity":1,"message":"649","line":10,"column":6,"nodeType":"629","endLine":10,"endColumn":8,"suggestions":"650"},{"ruleId":"595","severity":1,"message":"651","line":70,"column":7,"nodeType":"593","messageId":"594","endLine":70,"endColumn":15},{"ruleId":"595","severity":1,"message":"652","line":18,"column":10,"nodeType":"593","messageId":"594","endLine":18,"endColumn":15},{"ruleId":"653","severity":1,"message":"654","line":53,"column":32,"nodeType":"623","messageId":"655","endLine":53,"endColumn":33},{"ruleId":"595","severity":1,"message":"656","line":18,"column":10,"nodeType":"593","messageId":"594","endLine":18,"endColumn":20},{"ruleId":"595","severity":1,"message":"657","line":18,"column":22,"nodeType":"593","messageId":"594","endLine":18,"endColumn":35},{"ruleId":"595","severity":1,"message":"658","line":21,"column":10,"nodeType":"593","messageId":"594","endLine":21,"endColumn":14},{"ruleId":"595","severity":1,"message":"659","line":23,"column":9,"nodeType":"593","messageId":"594","endLine":23,"endColumn":25},{"ruleId":"627","severity":1,"message":"660","line":40,"column":6,"nodeType":"629","endLine":40,"endColumn":8,"suggestions":"661"},{"ruleId":"621","severity":1,"message":"622","line":63,"column":21,"nodeType":"623","messageId":"624","endLine":63,"endColumn":23},{"ruleId":"595","severity":1,"message":"662","line":2,"column":8,"nodeType":"593","messageId":"594","endLine":2,"endColumn":18},{"ruleId":"595","severity":1,"message":"663","line":19,"column":10,"nodeType":"593","messageId":"594","endLine":19,"endColumn":19},{"ruleId":"595","severity":1,"message":"664","line":20,"column":10,"nodeType":"593","messageId":"594","endLine":20,"endColumn":17},{"ruleId":"595","severity":1,"message":"665","line":21,"column":10,"nodeType":"593","messageId":"594","endLine":21,"endColumn":28},{"ruleId":"595","severity":1,"message":"666","line":29,"column":9,"nodeType":"593","messageId":"594","endLine":29,"endColumn":26},{"ruleId":"595","severity":1,"message":"667","line":35,"column":13,"nodeType":"593","messageId":"594","endLine":35,"endColumn":23},{"ruleId":"627","severity":1,"message":"668","line":44,"column":6,"nodeType":"629","endLine":44,"endColumn":12,"suggestions":"669"},{"ruleId":"595","severity":1,"message":"670","line":46,"column":9,"nodeType":"593","messageId":"594","endLine":46,"endColumn":15},{"ruleId":"595","severity":1,"message":"671","line":20,"column":10,"nodeType":"593","messageId":"594","endLine":20,"endColumn":26},{"ruleId":"627","severity":1,"message":"672","line":38,"column":6,"nodeType":"629","endLine":38,"endColumn":8,"suggestions":"673"},{"ruleId":"627","severity":1,"message":"674","line":44,"column":6,"nodeType":"629","endLine":44,"endColumn":26,"suggestions":"675"},{"ruleId":"621","severity":1,"message":"622","line":69,"column":45,"nodeType":"623","messageId":"624","endLine":69,"endColumn":47},{"ruleId":"595","severity":1,"message":"626","line":74,"column":13,"nodeType":"593","messageId":"594","endLine":74,"endColumn":21},{"ruleId":"627","severity":1,"message":"676","line":15,"column":6,"nodeType":"629","endLine":15,"endColumn":12,"suggestions":"677"},{"ruleId":"621","severity":1,"message":"622","line":30,"column":46,"nodeType":"623","messageId":"624","endLine":30,"endColumn":48},{"ruleId":"595","severity":1,"message":"678","line":44,"column":15,"nodeType":"593","messageId":"594","endLine":44,"endColumn":26},{"ruleId":"595","severity":1,"message":"679","line":24,"column":26,"nodeType":"593","messageId":"594","endLine":24,"endColumn":43},{"ruleId":"627","severity":1,"message":"680","line":44,"column":6,"nodeType":"629","endLine":44,"endColumn":42,"suggestions":"681"},{"ruleId":"595","severity":1,"message":"682","line":37,"column":10,"nodeType":"593","messageId":"594","endLine":37,"endColumn":19},{"ruleId":"595","severity":1,"message":"683","line":42,"column":9,"nodeType":"593","messageId":"594","endLine":42,"endColumn":15},{"ruleId":"595","severity":1,"message":"684","line":43,"column":10,"nodeType":"593","messageId":"594","endLine":43,"endColumn":19},{"ruleId":"627","severity":1,"message":"685","line":116,"column":6,"nodeType":"629","endLine":116,"endColumn":12,"suggestions":"686"},{"ruleId":"627","severity":1,"message":"687","line":120,"column":6,"nodeType":"629","endLine":120,"endColumn":8,"suggestions":"688"},{"ruleId":"627","severity":1,"message":"689","line":166,"column":6,"nodeType":"629","endLine":166,"endColumn":13,"suggestions":"690"},{"ruleId":"595","severity":1,"message":"691","line":3,"column":8,"nodeType":"593","messageId":"594","endLine":3,"endColumn":18},{"ruleId":"595","severity":1,"message":"692","line":31,"column":10,"nodeType":"593","messageId":"594","endLine":31,"endColumn":15},{"ruleId":"627","severity":1,"message":"693","line":38,"column":6,"nodeType":"629","endLine":38,"endColumn":26,"suggestions":"694"},{"ruleId":"627","severity":1,"message":"695","line":42,"column":6,"nodeType":"629","endLine":42,"endColumn":8,"suggestions":"696"},{"ruleId":"621","severity":1,"message":"622","line":61,"column":29,"nodeType":"623","messageId":"624","endLine":61,"endColumn":31},{"ruleId":"621","severity":1,"message":"622","line":87,"column":33,"nodeType":"623","messageId":"624","endLine":87,"endColumn":35},{"ruleId":"595","severity":1,"message":"697","line":12,"column":10,"nodeType":"593","messageId":"594","endLine":12,"endColumn":23},{"ruleId":"627","severity":1,"message":"698","line":18,"column":6,"nodeType":"629","endLine":18,"endColumn":18,"suggestions":"699"},{"ruleId":"595","severity":1,"message":"671","line":17,"column":10,"nodeType":"593","messageId":"594","endLine":17,"endColumn":26},{"ruleId":"627","severity":1,"message":"700","line":24,"column":6,"nodeType":"629","endLine":24,"endColumn":26,"suggestions":"701"},{"ruleId":"621","severity":1,"message":"622","line":28,"column":29,"nodeType":"623","messageId":"624","endLine":28,"endColumn":31},{"ruleId":"595","severity":1,"message":"607","line":1,"column":17,"nodeType":"593","messageId":"594","endLine":1,"endColumn":26},{"ruleId":"595","severity":1,"message":"702","line":3,"column":8,"nodeType":"593","messageId":"594","endLine":3,"endColumn":13},{"ruleId":"595","severity":1,"message":"605","line":24,"column":9,"nodeType":"593","messageId":"594","endLine":24,"endColumn":18},{"ruleId":"595","severity":1,"message":"601","line":5,"column":8,"nodeType":"593","messageId":"594","endLine":5,"endColumn":17},{"ruleId":"595","severity":1,"message":"703","line":28,"column":19,"nodeType":"593","messageId":"594","endLine":28,"endColumn":29},{"ruleId":"627","severity":1,"message":"704","line":39,"column":6,"nodeType":"629","endLine":39,"endColumn":8,"suggestions":"705"},{"ruleId":"595","severity":1,"message":"626","line":45,"column":11,"nodeType":"593","messageId":"594","endLine":45,"endColumn":19},{"ruleId":"595","severity":1,"message":"626","line":87,"column":11,"nodeType":"593","messageId":"594","endLine":87,"endColumn":19},{"ruleId":"595","severity":1,"message":"626","line":129,"column":7,"nodeType":"593","messageId":"594","endLine":129,"endColumn":15},{"ruleId":"595","severity":1,"message":"626","line":162,"column":11,"nodeType":"593","messageId":"594","endLine":162,"endColumn":19},{"ruleId":"595","severity":1,"message":"706","line":181,"column":9,"nodeType":"593","messageId":"594","endLine":181,"endColumn":25},{"ruleId":"595","severity":1,"message":"707","line":182,"column":9,"nodeType":"593","messageId":"594","endLine":182,"endColumn":21},{"ruleId":"595","severity":1,"message":"708","line":183,"column":9,"nodeType":"593","messageId":"594","endLine":183,"endColumn":22},{"ruleId":"621","severity":1,"message":"622","line":240,"column":30,"nodeType":"623","messageId":"624","endLine":240,"endColumn":32},{"ruleId":"621","severity":1,"message":"622","line":252,"column":33,"nodeType":"623","messageId":"624","endLine":252,"endColumn":35},{"ruleId":"595","severity":1,"message":"619","line":4,"column":8,"nodeType":"593","messageId":"594","endLine":4,"endColumn":19},{"ruleId":"595","severity":1,"message":"709","line":15,"column":10,"nodeType":"593","messageId":"594","endLine":15,"endColumn":22},{"ruleId":"595","severity":1,"message":"710","line":15,"column":24,"nodeType":"593","messageId":"594","endLine":15,"endColumn":39},{"ruleId":"595","severity":1,"message":"711","line":16,"column":10,"nodeType":"593","messageId":"594","endLine":16,"endColumn":28},{"ruleId":"595","severity":1,"message":"712","line":16,"column":30,"nodeType":"593","messageId":"594","endLine":16,"endColumn":51},{"ruleId":"627","severity":1,"message":"713","line":30,"column":6,"nodeType":"629","endLine":30,"endColumn":8,"suggestions":"714"},{"ruleId":"595","severity":1,"message":"715","line":71,"column":7,"nodeType":"593","messageId":"594","endLine":71,"endColumn":12},{"ruleId":"595","severity":1,"message":"626","line":128,"column":7,"nodeType":"593","messageId":"594","endLine":128,"endColumn":15},{"ruleId":"621","severity":1,"message":"622","line":228,"column":32,"nodeType":"623","messageId":"624","endLine":228,"endColumn":34},{"ruleId":"621","severity":1,"message":"622","line":239,"column":35,"nodeType":"623","messageId":"624","endLine":239,"endColumn":37},{"ruleId":"595","severity":1,"message":"716","line":1,"column":8,"nodeType":"593","messageId":"594","endLine":1,"endColumn":13},{"ruleId":"595","severity":1,"message":"717","line":38,"column":10,"nodeType":"593","messageId":"594","endLine":38,"endColumn":22},{"ruleId":"595","severity":1,"message":"718","line":74,"column":9,"nodeType":"593","messageId":"594","endLine":74,"endColumn":19},{"ruleId":"621","severity":1,"message":"622","line":75,"column":30,"nodeType":"623","messageId":"624","endLine":75,"endColumn":32},{"ruleId":"621","severity":1,"message":"622","line":77,"column":37,"nodeType":"623","messageId":"624","endLine":77,"endColumn":39},{"ruleId":"621","severity":1,"message":"622","line":79,"column":37,"nodeType":"623","messageId":"624","endLine":79,"endColumn":39},{"ruleId":"621","severity":1,"message":"622","line":33,"column":38,"nodeType":"623","messageId":"624","endLine":33,"endColumn":40},{"ruleId":"621","severity":1,"message":"622","line":41,"column":17,"nodeType":"623","messageId":"624","endLine":41,"endColumn":19},{"ruleId":"621","severity":1,"message":"622","line":63,"column":29,"nodeType":"623","messageId":"624","endLine":63,"endColumn":31},{"ruleId":"621","severity":1,"message":"622","line":69,"column":30,"nodeType":"623","messageId":"624","endLine":69,"endColumn":32},{"ruleId":"621","severity":1,"message":"622","line":70,"column":30,"nodeType":"623","messageId":"624","endLine":70,"endColumn":32},{"ruleId":"621","severity":1,"message":"622","line":75,"column":30,"nodeType":"623","messageId":"624","endLine":75,"endColumn":32},{"ruleId":"621","severity":1,"message":"622","line":76,"column":30,"nodeType":"623","messageId":"624","endLine":76,"endColumn":32},{"ruleId":"595","severity":1,"message":"598","line":8,"column":9,"nodeType":"593","messageId":"594","endLine":8,"endColumn":16},{"ruleId":"595","severity":1,"message":"719","line":50,"column":9,"nodeType":"593","messageId":"594","endLine":50,"endColumn":20},{"ruleId":"621","severity":1,"message":"622","line":78,"column":37,"nodeType":"623","messageId":"624","endLine":78,"endColumn":39},{"ruleId":"621","severity":1,"message":"622","line":47,"column":37,"nodeType":"623","messageId":"624","endLine":47,"endColumn":39},{"ruleId":"595","severity":1,"message":"716","line":2,"column":8,"nodeType":"593","messageId":"594","endLine":2,"endColumn":13},{"ruleId":"595","severity":1,"message":"720","line":2,"column":10,"nodeType":"593","messageId":"594","endLine":2,"endColumn":20},{"ruleId":"595","severity":1,"message":"721","line":2,"column":22,"nodeType":"593","messageId":"594","endLine":2,"endColumn":32},{"ruleId":"595","severity":1,"message":"722","line":1,"column":28,"nodeType":"593","messageId":"594","endLine":1,"endColumn":36},{"ruleId":"595","severity":1,"message":"723","line":2,"column":10,"nodeType":"593","messageId":"594","endLine":2,"endColumn":17},{"ruleId":"627","severity":1,"message":"724","line":36,"column":6,"nodeType":"629","endLine":36,"endColumn":36,"suggestions":"725"},{"ruleId":"595","severity":1,"message":"726","line":2,"column":10,"nodeType":"593","messageId":"594","endLine":2,"endColumn":16},{"ruleId":"595","severity":1,"message":"727","line":2,"column":8,"nodeType":"593","messageId":"594","endLine":2,"endColumn":16},{"ruleId":"595","severity":1,"message":"728","line":4,"column":8,"nodeType":"593","messageId":"594","endLine":4,"endColumn":13},{"ruleId":"621","severity":1,"message":"622","line":111,"column":15,"nodeType":"623","messageId":"624","endLine":111,"endColumn":17},{"ruleId":"595","severity":1,"message":"729","line":3,"column":10,"nodeType":"593","messageId":"594","endLine":3,"endColumn":21},{"ruleId":"595","severity":1,"message":"730","line":3,"column":23,"nodeType":"593","messageId":"594","endLine":3,"endColumn":34},{"ruleId":"595","severity":1,"message":"731","line":6,"column":10,"nodeType":"593","messageId":"594","endLine":6,"endColumn":22},{"ruleId":"621","severity":1,"message":"622","line":56,"column":27,"nodeType":"623","messageId":"624","endLine":56,"endColumn":29},{"ruleId":"595","severity":1,"message":"729","line":3,"column":10,"nodeType":"593","messageId":"594","endLine":3,"endColumn":21},{"ruleId":"595","severity":1,"message":"730","line":3,"column":23,"nodeType":"593","messageId":"594","endLine":3,"endColumn":34},{"ruleId":"595","severity":1,"message":"731","line":6,"column":10,"nodeType":"593","messageId":"594","endLine":6,"endColumn":22},{"ruleId":"595","severity":1,"message":"732","line":228,"column":7,"nodeType":"593","messageId":"594","endLine":228,"endColumn":18},{"ruleId":"595","severity":1,"message":"619","line":3,"column":8,"nodeType":"593","messageId":"594","endLine":3,"endColumn":19},{"ruleId":"595","severity":1,"message":"620","line":17,"column":18,"nodeType":"593","messageId":"594","endLine":17,"endColumn":27},{"ruleId":"595","severity":1,"message":"733","line":24,"column":10,"nodeType":"593","messageId":"594","endLine":24,"endColumn":25},{"ruleId":"595","severity":1,"message":"734","line":24,"column":27,"nodeType":"593","messageId":"594","endLine":24,"endColumn":45},{"ruleId":"621","severity":1,"message":"622","line":34,"column":14,"nodeType":"623","messageId":"624","endLine":34,"endColumn":16},{"ruleId":"595","severity":1,"message":"625","line":42,"column":12,"nodeType":"593","messageId":"594","endLine":42,"endColumn":23},{"ruleId":"595","severity":1,"message":"626","line":52,"column":11,"nodeType":"593","messageId":"594","endLine":52,"endColumn":19},{"ruleId":"627","severity":1,"message":"628","line":70,"column":6,"nodeType":"629","endLine":70,"endColumn":8,"suggestions":"735"},{"ruleId":"621","severity":1,"message":"631","line":285,"column":39,"nodeType":"623","messageId":"624","endLine":285,"endColumn":41},{"ruleId":"621","severity":1,"message":"622","line":26,"column":38,"nodeType":"623","messageId":"624","endLine":26,"endColumn":40},{"ruleId":"595","severity":1,"message":"736","line":1,"column":10,"nodeType":"593","messageId":"594","endLine":1,"endColumn":14},{"ruleId":"595","severity":1,"message":"702","line":2,"column":8,"nodeType":"593","messageId":"594","endLine":2,"endColumn":13},{"ruleId":"621","severity":1,"message":"622","line":31,"column":37,"nodeType":"623","messageId":"624","endLine":31,"endColumn":39},{"ruleId":"595","severity":1,"message":"637","line":2,"column":10,"nodeType":"593","messageId":"594","endLine":2,"endColumn":17},{"ruleId":"595","severity":1,"message":"737","line":3,"column":10,"nodeType":"593","messageId":"594","endLine":3,"endColumn":27},{"ruleId":"595","severity":1,"message":"738","line":74,"column":9,"nodeType":"593","messageId":"594","endLine":74,"endColumn":26},{"ruleId":"595","severity":1,"message":"739","line":158,"column":10,"nodeType":"593","messageId":"594","endLine":158,"endColumn":34},"no-unused-vars","'ErrorBoundary' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'TabsContainer' is defined but never used.","'Tab1' is defined but never used.","'history' is assigned a value but never used.","'Tab4' is defined but never used.","'JobChart' is defined but never used.","'TestChart' is defined but never used.","'LoadingSpinner' is defined but never used.","'ParentComponent' is defined but never used.","'displayDataSet' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'changeDisplaySetData' is assigned a value but never used.","'useEffect' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useRouteMatch' is defined but never used.","'useHistory' is defined but never used.","'MultiSelectDropdown' is defined but never used.","'EntityBox' is defined but never used.","'FilterSection' is defined but never used.","'updatedEmployeeDetails' is assigned a value but never used.","'setupdatedEmployeeDetails' is assigned a value but never used.","'updatedEntityList' is assigned a value but never used.","'setupdatedEntityList' is assigned a value but never used.","'Breadcrumbs' is defined but never used.","'setentity' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'handleClick' is defined but never used.","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchEntityDetails'. Either include it or remove the dependency array.","ArrayExpression",["740"],"Expected '!==' and instead saw '!='.","'setuserInfo' is assigned a value but never used.","'setfilterByName' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filterByName' and 'getEntityList'. Either include them or remove the dependency array.",["741"],"'filterIcon' is assigned a value but never used.","'getHttp' is defined but never used.","'selectedOptions' is assigned a value but never used.","'ProgressCircle' is defined but never used.","'ProgressBar' is defined but never used.","'skillProgressValue' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSkillValue'. Either include it or remove the dependency array.",["742"],"'getAchievedStatus' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getPercentageValue'. Either include it or remove the dependency array.",["743"],"'options1' is assigned a value but never used.","'label' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'chart3Data' is assigned a value but never used.","'setchart3Data' is assigned a value but never used.","'data' is assigned a value but never used.","'handleDataChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userDetailsObj?.entity'. Either include it or remove the dependency array.",["744"],"'DatePicker' is defined but never used.","'startDate' is assigned a value but never used.","'endDate' is assigned a value but never used.","'endCalendarVisible' is assigned a value but never used.","'handleStartChange' is assigned a value but never used.","'categories' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'xAxis'. Either include it or remove the dependency array. If 'setOption' needs the current value of 'xAxis', you can also switch to useReducer instead of useState and read 'xAxis' in the reducer.",["745"],"'series' is assigned a value but never used.","'selectedEntities' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'defaultFilterData'. Either include it or remove the dependency array.",["746"],"React Hook useEffect has missing dependencies: 'allEntityList', 'endDate', 'filterData', and 'startDate'. Either include them or remove the dependency array. You can also do a functional update 'setallEntityList(a => ...)' if you only need 'allEntityList' in the 'setallEntityList' call.",["747"],"React Hook useEffect has a missing dependency: 'drawChart'. Either include it or remove the dependency array.",["748"],"'removeCount' is assigned a value but never used.","'setdateRangeProps' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dropdownValues.firstDValue', 'dropdownValues.secondDValue', 'entityListForDropDown', and 'getScoreOfSelectedEntities'. Either include them or remove the dependency array. If 'setSelectList1Entity' needs the current value of 'entityListForDropDown', you can also switch to useReducer instead of useState and read 'entityListForDropDown' in the reducer.",["749"],"'subTitles' is assigned a value but never used.","'barRef' is assigned a value but never used.","'popupData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'barChartPopoverdata', 'name', and 'title'. Either include them or remove the dependency array. If 'setPopupData' needs the current value of 'barChartPopoverdata', you can also switch to useReducer instead of useState and read 'barChartPopoverdata' in the reducer.",["750"],"React Hook useEffect has a missing dependency: 'title'. Either include it or remove the dependency array. If 'setsubTitles' needs the current value of 'title', you can also switch to useReducer instead of useState and read 'title' in the reducer.",["751"],"React Hook useEffect has missing dependencies: 'barChartPopoverdata', 'data', 'eachBarClick', 'name', and 'title'. Either include them or remove the dependency array. If 'setPopupData' needs the current value of 'barChartPopoverdata', you can also switch to useReducer instead of useState and read 'barChartPopoverdata' in the reducer.",["752"],"'Component1' is defined but never used.","'title' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'allEntityList' and 'getScoreOfSelectedEntity'. Either include them or remove the dependency array. You can also do a functional update 'setallEntityList(a => ...)' if you only need 'allEntityList' in the 'setallEntityList' call.",["753"],"React Hook useEffect has a missing dependency: 'getScoreOfSelectedEntity'. Either include it or remove the dependency array.",["754"],"'allEntityList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getRankBasedonLatestSCore'. Either include it or remove the dependency array.",["755"],"React Hook useEffect has missing dependencies: 'allEntityList' and 'getScoreOfEntityLatestDate'. Either include them or remove the dependency array. You can also do a functional update 'setallEntityList(a => ...)' if you only need 'allEntityList' in the 'setallEntityList' call.",["756"],"'store' is defined but never used.","'setdetails' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'details.id', 'fetchCatagoryList', and 'userDetailsObj.entity'. Either include them or remove the dependency array.",["757"],"'popoverContainer' is assigned a value but never used.","'popoverArrow' is assigned a value but never used.","'targetElement' is assigned a value but never used.","'subTotalEmpl' is assigned a value but never used.","'setsubTotalEmpl' is assigned a value but never used.","'grandTotalEmployee' is assigned a value but never used.","'setgrandTotalEmployee' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchCatagoryList' and 'userDetailsObj.entity'. Either include them or remove the dependency array.",["758"],"'count' is assigned a value but never used.","'axios' is defined but never used.","'responseText' is assigned a value but never used.","'uploadType' is defined but never used.","'customNames' is assigned a value but never used.","'SHOW_ERROR' is defined but never used.","'HIDE_ERROR' is defined but never used.","'useState' is defined but never used.","'connect' is defined but never used.","React Hook useEffect has an unnecessary dependency: 'Store.dispatch'. Either exclude it or remove the dependency array. Outer scope values like 'Store.dispatch' aren't valid dependencies because mutating them doesn't re-render the component.",["759"],"'Header' is defined but never used.","'DropDown' is defined but never used.","'Popup' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'createAction' is defined but never used.","'removeToken' is assigned a value but never used.","'subCategoryList' is assigned a value but never used.","'setsubCategoryList' is assigned a value but never used.",["760"],"'type' is defined but never used.","'allSkillsByRoleId' is defined but never used.","'handleSkillChange' is assigned a value but never used.","'handleAddTrainingDetails' is defined but never used.",{"desc":"761","fix":"762"},{"desc":"763","fix":"764"},{"desc":"765","fix":"766"},{"desc":"767","fix":"768"},{"desc":"769","fix":"770"},{"desc":"771","fix":"772"},{"desc":"773","fix":"774"},{"desc":"775","fix":"776"},{"desc":"777","fix":"778"},{"desc":"779","fix":"780"},{"desc":"781","fix":"782"},{"desc":"783","fix":"784"},{"desc":"785","fix":"786"},{"desc":"787","fix":"788"},{"desc":"789","fix":"790"},{"desc":"791","fix":"792"},{"desc":"793","fix":"794"},{"desc":"795","fix":"796"},{"desc":"797","fix":"798"},{"desc":"799","fix":"800"},{"desc":"761","fix":"801"},"Update the dependencies array to be: [fetchEntityDetails]",{"range":"802","text":"803"},"Update the dependencies array to be: [filterByName, getEntityList]",{"range":"804","text":"805"},"Update the dependencies array to be: [getSkillValue]",{"range":"806","text":"807"},"Update the dependencies array to be: [getPercentageValue]",{"range":"808","text":"809"},"Update the dependencies array to be: [userDetailsObj?.entity]",{"range":"810","text":"811"},"Update the dependencies array to be: [data, xAxis]",{"range":"812","text":"813"},"Update the dependencies array to be: [defaultFilterData]",{"range":"814","text":"815"},"Update the dependencies array to be: [allEntityList, endDate, filterData, selectedEntityList, startDate]",{"range":"816","text":"817"},"Update the dependencies array to be: [data, drawChart]",{"range":"818","text":"819"},"Update the dependencies array to be: [startDate, endDate, dateRangeProps, entityListForDropDown, getScoreOfSelectedEntities, dropdownValues.firstDValue, dropdownValues.secondDValue]",{"range":"820","text":"821"},"Update the dependencies array to be: [barChartPopoverdata, data, name, title]",{"range":"822","text":"823"},"Update the dependencies array to be: [title]",{"range":"824","text":"825"},"Update the dependencies array to be: [barChartPopoverdata, data, eachBarClick, name, title, xAxis]",{"range":"826","text":"827"},"Update the dependencies array to be: [allEntityList, getScoreOfSelectedEntity, selectedEntityList]",{"range":"828","text":"829"},"Update the dependencies array to be: [getScoreOfSelectedEntity]",{"range":"830","text":"831"},"Update the dependencies array to be: [entityList, getRankBasedonLatestSCore]",{"range":"832","text":"833"},"Update the dependencies array to be: [allEntityList, getScoreOfEntityLatestDate, selectedEntityList]",{"range":"834","text":"835"},"Update the dependencies array to be: [details.id, fetchCatagoryList, userDetailsObj.entity]",{"range":"836","text":"837"},"Update the dependencies array to be: [fetchCatagoryList, userDetailsObj.entity]",{"range":"838","text":"839"},"Update the dependencies array to be: [errorMessage]",{"range":"840","text":"841"},{"range":"842","text":"803"},[2559,2561],"[fetchEntityDetails]",[1228,1230],"[filterByName, getEntityList]",[631,633],"[getSkillValue]",[361,363],"[getPercentageValue]",[1474,1476],"[userDetailsObj?.entity]",[906,912],"[data, xAxis]",[1265,1267],"[defaultFilterData]",[1456,1476],"[allEntityList, endDate, filterData, selectedEntityList, startDate]",[389,395],"[data, drawChart]",[1306,1342],"[startDate, endDate, dateRangeProps, entityListForDropDown, getScoreOfSelectedEntities, dropdownValues.firstDValue, dropdownValues.secondDValue]",[2550,2556],"[barChartPopoverdata, data, name, title]",[2655,2657],"[title]",[3730,3737],"[barChartPopoverdata, data, eachBarClick, name, title, xAxis]",[1184,1204],"[allEntityList, getScoreOfSelectedEntity, selectedEntityList]",[1265,1267],"[getScoreOfSelectedEntity]",[547,559],"[entityList, getRankBasedonLatestSCore]",[791,811],"[allEntityList, getScoreOfEntityLatestDate, selectedEntityList]",[1501,1503],"[details.id, fetchCatagoryList, userDetailsObj.entity]",[1226,1228],"[fetchCatagoryList, userDetailsObj.entity]",[1077,1107],"[errorMessage]",[2363,2365]]